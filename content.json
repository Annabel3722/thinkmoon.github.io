{"meta":{"title":"指尖魔法屋 - 醉月思的博客","subtitle":"德尚无形，术精无境","description":"指尖魔法屋, 醉月思的博客!不问前途，不问归路，只求专注，全力以赴。专注编程技术，热衷互联网科技交流。德尚无形，术静无境","author":"醉月思","url":"https://thinkmoon.cn"},"pages":[{"title":"404","date":"2018-08-30T12:29:57.000Z","updated":"2018-09-09T10:11:37.138Z","comments":true,"path":"404.html","permalink":"https://thinkmoon.cn/404.html","excerpt":"","text":""},{"title":"关于我","date":"2018-08-22T12:29:57.000Z","updated":"2018-09-09T10:11:37.138Z","comments":true,"path":"about/index.html","permalink":"https://thinkmoon.cn/about/index.html","excerpt":"","text":"个人简介 98年, 双鱼座 喜欢小动物,爱好种花花草草, 钟爱科技产品 立志在以后能做出影响世界的作品, 或研究. 专业及兴趣方向 专业: 软件工程 擅长语言: C++, PHP,node.js 熟悉的领域: 微信小程序开发，微信平台开发, 网站应用开发. 曾获奖励: 优秀团员，单项奖学金[实在没有别的奖励了，苦笑不得] 联系方式 邮箱: 2571255509@qq.com 腾讯QQ : 2571255509 微信: 2571255509 个人博客网址: https://www.thinkmoon.cn cambrian.render('tail')"},{"title":"分类","date":"2018-09-09T10:11:37.138Z","updated":"2018-09-09T10:11:37.138Z","comments":false,"path":"categories/index.html","permalink":"https://thinkmoon.cn/categories/index.html","excerpt":"","text":""},{"title":"标签云","date":"2018-09-09T10:11:37.138Z","updated":"2018-09-09T10:11:37.138Z","comments":true,"path":"tags/index.html","permalink":"https://thinkmoon.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"机器视觉入门（1）","slug":"机器视觉入门（1）","date":"2018-12-29T07:35:55.000Z","updated":"2018-12-29T07:43:32.789Z","comments":true,"path":"/bc71.html","link":"","permalink":"https://thinkmoon.cn/bc71.html","excerpt":"","text":"遇到的一些问题 Imageio: ‘ffmpeg-linux64-v3.3.1’ was not found on your computer; downloading it now. 解决办法：sudo add-apt-repository -y ppa:djcj/hybrid &amp;&amp; sudo apt update &amp;&amp; sudo apt install -y ffmpeg我直接运行了，然后它自动下载安装了。 ##","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"机器视觉","slug":"机器视觉","permalink":"https://thinkmoon.cn/tags/机器视觉/"}]},{"title":"使用wepy + 微信小程序云开发做一个不用服务器的小程序","slug":"使用wepy-微信小程序云开发做一个不用服务器的小程序","date":"2018-12-28T09:06:00.000Z","updated":"2018-12-28T12:00:35.042Z","comments":true,"path":"/dbba.html","link":"","permalink":"https://thinkmoon.cn/dbba.html","excerpt":"","text":"技术介绍Wepy 云开发开发者可以使用云开发开发微信小程序、小游戏，无需搭建服务器，即可使用云端能力。 云开发为开发者提供完整的云端支持，弱化后端和运维概念，无需搭建服务器，使用平台提供的 API 进行核心业务开发，即可实现快速上线和迭代，同时这一能力，同开发者已经使用的云服务相互兼容，并不互斥。 目前提供三大基础能力支持： 云函数：在云端运行的代码，微信私有协议天然鉴权，开发者只需编写自身业务逻辑代码 数据库：一个既可在小程序前端操作，也能在云函数中读写的 JSON 数据库 存储：在小程序前端直接上传/下载云端文件，在云开发控制台可视化管理 安装WePy WePY的安装或更新都通过npm进行。 如果你未安装过npm，你可能需要先安装npm npm install wepy-cli -g 注: 我这使用的版本是 创建一个WePy项目首先，查看一下项目模板wepy list 他会在这里列出一些模板，你选择你喜欢的安装。wepy init standard my-project","categories":[{"name":"教程","slug":"教程","permalink":"https://thinkmoon.cn/categories/教程/"}],"tags":[{"name":"微信小程序","slug":"微信小程序","permalink":"https://thinkmoon.cn/tags/微信小程序/"}]},{"title":"关于VS code 的一些操作","slug":"关于VS-code-的一些操作","date":"2018-11-16T03:06:35.000Z","updated":"2018-11-16T03:10:44.366Z","comments":true,"path":"/e75d.html","link":"","permalink":"https://thinkmoon.cn/e75d.html","excerpt":"","text":"正则删除HTML标签Ctrl + H 正则匹配 &lt;[^&gt;]+&gt; 替换为空 正则替换换行Ctrl + H 正则匹配 \\n 替换为你想要的","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"VScode","slug":"VScode","permalink":"https://thinkmoon.cn/tags/VScode/"}]},{"title":"实训项目后记","slug":"实训项目后记","date":"2018-10-26T02:58:51.000Z","updated":"2018-10-26T03:13:15.138Z","comments":true,"path":"/9ba0.html","link":"","permalink":"https://thinkmoon.cn/9ba0.html","excerpt":"项目开始于2018/10/26, 本来已经申请免听了， 这几天好难受, 刚开始打算就随便从github上modify一个， 后来找来找去没发现合适的， 再加上有点皮，就开始了几天的程序猿模式。","text":"项目开始于2018/10/26, 本来已经申请免听了， 这几天好难受, 刚开始打算就随便从github上modify一个， 后来找来找去没发现合适的， 再加上有点皮，就开始了几天的程序猿模式。 github项目地址 申明: 项目由基于Vue+Vuex+iView的电子商城网站 修改而来 由于各种原因未在github地址上补充上述内容，在此补上。","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"vue","slug":"vue","permalink":"https://thinkmoon.cn/tags/vue/"}]},{"title":"Egg.js学习笔记","slug":"Egg-js学习笔记","date":"2018-10-19T09:13:01.000Z","updated":"2018-10-26T02:56:16.726Z","comments":true,"path":"/671c.html","link":"","permalink":"https://thinkmoon.cn/671c.html","excerpt":"","text":"Egg 是个好东西","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://thinkmoon.cn/tags/nodejs/"},{"name":"eggjs","slug":"eggjs","permalink":"https://thinkmoon.cn/tags/eggjs/"}]},{"title":"cn版elementaryOS的UEFI安装尝试","slug":"cn版elementaryOS的UEFI安装","date":"2018-09-21T00:46:11.000Z","updated":"2018-10-21T03:35:32.978Z","comments":true,"path":"/a748.html","link":"","permalink":"https://thinkmoon.cn/a748.html","excerpt":"","text":"首先下载UEFI版 下载链接在官方QQ群里面 TIPS: 直接在群文件里面下载可能会因为各种原因中断下载，建议登录QQ群空间里面，再使用迅雷下载。 接下来为转载的操作 mount挂载mount &#123;&#123;根挂载点&#125;&#125; /mnt 第一次尝试（2018.9.21 9：05） 自动清除磁盘安装，未找到/分区，手动分区尝试中。 手动分区，发现格式好奇怪，看不懂，格式化尝试中。 更新: 好像是开启了LVM的原因，尝试不开启LVM。清除整个磁盘安装 第二次尝试清除整个磁盘安装 （2018.9.21 9：15） 磁盘情况，分区情况如下，但是无法进入系统 好像联网安装就成功了？？？？","categories":[{"name":"转载","slug":"转载","permalink":"https://thinkmoon.cn/categories/转载/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://thinkmoon.cn/tags/linux/"}]},{"title":"Deepin安装微信开发者工具","slug":"Deepin安装微信开发者工具","date":"2018-09-19T01:25:06.000Z","updated":"2018-09-21T08:55:08.996Z","comments":true,"path":"/3228.html","link":"","permalink":"https://thinkmoon.cn/3228.html","excerpt":"我们都知道，微信开发者工具是没有linux版的，还是有点难受。好在有大神迁移了。","text":"我们都知道，微信开发者工具是没有linux版的，还是有点难受。好在有大神迁移了。 1. 下载项目git clone https://github.com/cytle/wechat_web_devtools.git 2. 进入目录cd wechat_web_devtools 3. 自动下载最新 nw.js , 同时部署目录 ~/.config/微信web开发者工具/./bin/wxdt install 最好先切换npm淘宝源npm太慢使用淘宝npm镜像 4. 运行./bin/wxdt 7. 错误排除1. 提示“小程序重启耗时过久，请确认业务逻辑中是否有复杂运算或死循环” 解决方案：apt-get install wine-binfmt","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"Deepin","slug":"Deepin","permalink":"https://thinkmoon.cn/tags/Deepin/"},{"name":"微信开发者工具","slug":"微信开发者工具","permalink":"https://thinkmoon.cn/tags/微信开发者工具/"}]},{"title":"vue的相关问题","slug":"vue的相关问题","date":"2018-09-15T07:46:46.000Z","updated":"2018-12-29T08:42:40.282Z","comments":true,"path":"/2a94.html","link":"","permalink":"https://thinkmoon.cn/2a94.html","excerpt":"","text":"安装nodejssudo apt-get install nodejs 安装npmsudo apt install npm 改镜像源sudo npm config set registry https://registry.npm.taobao.orgsudo npm config list 升级nodesudo npm i -g nsudo n stable 安装Vuenpm install -g @vue/cli 引入less文件失败安装less，和less-loadernpm i --save less less-loader iview自定义主题失败两个解决方案 less降级为3以下，比如2.7.3 配置vue.config.js(未实践） module.exports = &#123; css: &#123; // 配置css模块 loaderOptions: &#123; // 向预处理器 Loader 传递配置选项 less: &#123; // 配置less（其他样式解析用法一致） javascriptEnabled: true // 设置为true &#125; &#125; &#125;&#125; 报错 ERROR in ./~/less-loader!./~/autoprefixer-loader!./src/styles/mytheme.less Module parse failed:E:\\ProjectDemo\\vue\\IVIEW\\node_modules\\less-loader\\index.js!E:\\ProjectDemo\\vue\\IVIEW\\node_modules\\autoprefixer-loader\\index.js!E:\\ProjectDemo\\vue\\IVIEW\\src\\styles\\mytheme. less Unexpected token (1:0) You may need an appropriate loader to handle this file type. | .ivu-load-loop &#123;| animation: ani-load-loop 1s linear infinite; |&#125; 修改webpack配置 &#123; test: /\\.less/, use: ExtractTextPlugin.extract(&#123; use: ['css-loader?minimize', 'autoprefixer-loader', 'less-loader'], fallback: 'style-loader' &#125;) &#125;,","categories":[{"name":"踩坑","slug":"踩坑","permalink":"https://thinkmoon.cn/categories/踩坑/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://thinkmoon.cn/tags/nodejs/"},{"name":"vue","slug":"vue","permalink":"https://thinkmoon.cn/tags/vue/"},{"name":"iview","slug":"iview","permalink":"https://thinkmoon.cn/tags/iview/"}]},{"title":"chrome无痕模式下使用插件","slug":"chrome无痕模式下使用插件","date":"2018-09-15T06:20:14.000Z","updated":"2018-09-15T06:22:30.206Z","comments":true,"path":"/6db6.html","link":"","permalink":"https://thinkmoon.cn/6db6.html","excerpt":"","text":"设置-&gt;更多工具-&gt;拓展程序-&gt;选择插件-&gt;勾选隐身模式下使用","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"chrome","slug":"chrome","permalink":"https://thinkmoon.cn/tags/chrome/"}]},{"title":"npm太慢使用淘宝npm镜像","slug":"npm太慢使用淘宝npm镜像","date":"2018-09-14T16:12:42.000Z","updated":"2018-09-14T16:14:58.002Z","comments":true,"path":"/7e1.html","link":"","permalink":"https://thinkmoon.cn/7e1.html","excerpt":"","text":"永久使用npm config set registry https://registry.npm.taobao.org 查看配置是否成功npm config get registry","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://thinkmoon.cn/tags/nodejs/"}]},{"title":"交通网络分层设计模型之路口状态","slug":"交通网络分层设计模型之路口状态","date":"2018-09-13T13:59:50.000Z","updated":"2018-09-14T15:55:15.922Z","comments":true,"path":"/c241.html","link":"","permalink":"https://thinkmoon.cn/c241.html","excerpt":"","text":"所有的路口标号用int road[8]表示，用bool status[8][8]表示道路可否通行。 T字路口 对于T字路口，将道路分为（左，右，下）三个流量出入口，存在的状态有： 0. 全红(特殊状态应对突发事故） for (int i = 0; i &lt; 8; i++) &#123; for (int j = 0; j &lt; 8; j++) &#123; status[i][j] = false; &#125;&#125; × 0 1 2 3 4 5 0 × × × × × × 1 × × × × × × 2 × × × × × × 3 × × × × × × 4 × × × × × × 5 × × × × × × 正常状态下考虑红灯可右转，同向变道不受交通灯控制，即永远可通行 status[2][1] = status[4][3] = true;status[0][1] = status[2][3] = status[4][5] = true; × 0 1 2 3 4 5 0 @ 1 2 @ @ 3 4 @ @ 5 同时需要限制逆行，即永远不可通行 // 出口不能自转和变道status[0][0] = status[0][2] = status[0][4] = false;status[4][4] = status[4][0] = status[4][2] = false;status[2][2] = status[2][0] = status[2][4] = false;// 入口不能出去status[1][0] =status[1][1] = status[1][2] = status[1][3] = status[1][4] = status[1][5] = false;status[3][0] =status[3][1] = status[3][2] = status[3][3] = status[3][4] = status[3][5] = false;status[5][0] =status[5][1] = status[5][2] = status[5][3] = status[5][4] = status[5][5] = false; × 0 1 2 3 4 5 0 × @ × × 1 × × × × × × 2 × @ × @ × 3 × × × × × × 4 × × @ × @ 5 × × × × × × 对以上情况封装，即init()。后续应禁止对上值做任何改变。即还有6*6-5-9-18=4个值 status[0][5],status[4][1],status[2][5],status[0][3], 1. 对边可通行（限制0左转，限制2左转）status[0][5]=status[4][1]=true;status[2][5]=status[0][3]=false; 2. 疏通右侧status[0][5]=status[0][3]=true;status[4][1]=status[2][5]=false; 3. 导向左侧status[0][5]=status[2][5]=true;status[4][1]=status[0][3]=false; +字路口 对于+字路口，将道路分为（左，右，上，下）四个流量出入口，存在的状态有： 0. 全红(同上） × 0 1 2 3 4 5 6 7 0 × × × × × × × × 1 × × × × × × × × 2 × × × × × × × × 3 × × × × × × × × 4 × × × × × × × × 5 × × × × × × × × 6 × × × × × × × × 7 × × × × × × × ×","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"交通网络分层设计模型","slug":"交通网络分层设计模型","permalink":"https://thinkmoon.cn/tags/交通网络分层设计模型/"}]},{"title":"感慨","slug":"感慨","date":"2018-09-11T07:16:26.000Z","updated":"2018-09-13T12:25:49.226Z","comments":true,"path":"/d54a.html","link":"","permalink":"https://thinkmoon.cn/d54a.html","excerpt":"主要用作记录一些无聊的感慨","text":"主要用作记录一些无聊的感慨 2018.9.13 我不是在写代码，我只是想让这些代码看起来不那么孤单。 如释重负后却恍然若失。 2018.9.12 这个世界永远没有感同身受。如人饮水，冷暖自知。你不能站在自己的立场上对别人指手画脚，语重心长。因为，你没有经历过。 2018.9.11 我们无法避免失败，只会为了回避失败而选择沉沦。 2018.9.10 生活中的大部分烦恼都源于处理人与人之间的关系","categories":[{"name":"无意义","slug":"无意义","permalink":"https://thinkmoon.cn/categories/无意义/"}],"tags":[]},{"title":"hexo配置笔记","slug":"hexo配置笔记","date":"2018-09-10T00:53:12.000Z","updated":"2018-09-10T00:58:06.576Z","comments":true,"path":"/20eb.html","link":"","permalink":"https://thinkmoon.cn/20eb.html","excerpt":"hexo 配置的一些相关问题笔记","text":"hexo 配置的一些相关问题笔记 发布时间不对的问题细心的小伙伴会发现我的博客有些文章居然发布日期比更新日期还要晚，这是因为我的时区没有配置好的原因。 修改 _confing.yml下的timezone timezone: Asia/Shanghai","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://thinkmoon.cn/tags/博客/"}]},{"title":"pm2的相关操作记录","slug":"pm2的相关操作记录","date":"2018-09-10T00:41:05.000Z","updated":"2018-09-10T00:52:43.676Z","comments":true,"path":"/7dd3.html","link":"","permalink":"https://thinkmoon.cn/7dd3.html","excerpt":"pm2: Advanced, production process manager for Node.js","text":"pm2: Advanced, production process manager for Node.js //run.jsconst &#123; exec &#125; = require('child_process')exec('hexo s',(error, stdout, stderr) =&gt; &#123; if(error)&#123; console.log(`exec error: $&#123;error&#125;`) return &#125; console.log(`stdout: $&#123;stdout&#125;`); console.log(`stderr: $&#123;stderr&#125;`);&#125;) pm2 delete all 删除所有进程 pm2 start run.js 启动run.js fork模式 pm2 start run.js -i 2 启动run.js 创建两个进程 待续","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://thinkmoon.cn/tags/nodejs/"}]},{"title":"博客已从coding-page迁移github-page ","slug":"博客已从coding-page迁移github-page","date":"2018-09-10T00:34:00.000Z","updated":"2018-09-10T04:01:46.942Z","comments":true,"path":"/816b.html","link":"","permalink":"https://thinkmoon.cn/816b.html","excerpt":"最开始，我就是用github-page部署博客的，刚开始的时候github-page是不支持自定义域名https的，所以你一定得用默认域名*.github.io才能使用https，要么嘛，你就放弃使用https。","text":"最开始，我就是用github-page部署博客的，刚开始的时候github-page是不支持自定义域名https的，所以你一定得用默认域名*.github.io才能使用https，要么嘛，你就放弃使用https。 那些不堪回首的博客迁移史1. 最初的wordpress刚开始的wordpres是放在我的服务器上的，而且还是与微信公众号对接好的（有相关插件），然后可以加很多牛逼的插件，完成一些很神奇的效果。我当时是装了蛮多插件的，比如：Jetpack全套啊，SMTP，All of SEO等等。好玩是好玩，但是对于我这种隔几天就要折腾一下服务器的。wordpress经常被我玩坏。然后开始寻找解决方案。 2. 后来的wordpress官网wordpress的官网是支持托管网站的，而且免费。再加上怎么玩都不会坏。但是同时免费版也限制了很多功能。比如，自定义插件啦，自定义域名之类的。其实这都能够接受，最让我无法忍受的是学校的网络，访问起来特别慢。大约一个页面要5秒中左右才开始渲染。强迫症不能忍 3. 轻量的gitblog这是一个好东西，也是这个让我接触到了page服务这种东西，有关gitblog的更多可以看我这篇文章使用gitblog搭建个人博客.md, 其实除了小众之外没什么别的不好。但是我那颗不甘平静的心依旧想要折腾。 4. 未配置成功的Jekyll不知道是当时认知有限还是英语太差，总之我按着官网的教程没安装成功，再加上不太喜欢官网的主题，然后就放弃了。 5. 模仿大佬的github issue一次偶然的机会，我发现有位大佬居然是用issue写博客的（现在才知道原来并不稀奇），读者一般都是github用户，评论交流起来简直不要太爽。按奈不住的我立马也这样做了。疯狂过后，就是一个人的寂寞。没有人看我不觉得奇怪，主要百度不收录哇。而且域名没在中国备案，很多事情都做不了，比如微信不能打开。 6. 新奇的hexo我就不介绍了，有兴趣自行百度。到现在为止我还是用hexo的。 7. hexo的评论系统最开始，用的是多说，后来下线了。后来，用的是畅言，然后强制加广告了。现在用的是，gitcomment，使用的是github帐号登录，缺点就是每个页面评论都要初始化。听说Disqus不错，可是需要翻墙，不翻墙就要装个插件用精简版。我就不改，先缓一缓。 8. hexo的托管平台选择如前言 不过要注意有个坑，自定义域名的话，就是一定要在source文件夹中新建一个CHANME文件里面写上你的域名，不然就每次hexo d 都要设置一次。 9. hexo 的IDE选择最开始我是用小书匠，不过写文章不错，写代码就不行。比如要改个样式什么的就非常麻烦。后来用的是coding的webIDE，当时感觉描述很不错，事实上在网速好的情况下的确不错。但是一遇到网速不好的时候。写的代码就完全保存不了， 因为它会回退，会回退啊~现在，用的是vs code写文章用小书匠，因为叼。 10. hexo的图床选择用过一段时间github，后来感觉github页面放个图床会让人感觉不好。现在用的是七牛云存储。 coding-page与github-page的优缺点 github百度不会爬，需要自己推送（也可以用cdn回源域名加速) coding-page 短时间推送次数过多就会凉。 github只能设置一个域名，而且https只支持顶级域名 所以我的访问人数又要重新累计了。 待续本文用作测试插件var function()&#123; //预计一大波人即将取关 console.warn(\"You have been slained\");&#125; hexo-admin 测试中","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://thinkmoon.cn/tags/博客/"}]},{"title":"Deepin下Clion的相关问题","slug":"Deepin下Clion的相关问题","date":"2018-09-10T00:33:30.000Z","updated":"2018-09-10T00:50:00.512Z","comments":true,"path":"/dd6c.html","link":"","permalink":"https://thinkmoon.cn/dd6c.html","excerpt":"此文记录Deepin下Clion的相关问题","text":"此文记录Deepin下Clion的相关问题 toolchain不完整sudo apt-get install build-essential 待续","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://thinkmoon.cn/tags/C/"}]},{"title":"篆书转换器 | 版本更新2","slug":"untitled-1536823106069","date":"2018-08-24T07:18:26.000Z","updated":"2018-09-13T07:35:54.670Z","comments":true,"path":"/69a.html","link":"","permalink":"https://thinkmoon.cn/69a.html","excerpt":"","text":"","categories":[{"name":"公众号文章迁移","slug":"公众号文章迁移","permalink":"https://thinkmoon.cn/categories/公众号文章迁移/"}],"tags":[{"name":"篆书转换器","slug":"篆书转换器","permalink":"https://thinkmoon.cn/tags/篆书转换器/"}]},{"title":"初探JavaFx","slug":"1530278286","date":"2018-06-29T13:18:00.000Z","updated":"2018-09-09T12:09:18.394Z","comments":true,"path":"/e3b8.html","link":"","permalink":"https://thinkmoon.cn/e3b8.html","excerpt":"","text":"IDEA下开发JavaFx Application New &gt; project &gt; JavaFx Application 添加SceneBuilder 下载SceneBuilder file | setting &gt; JavaFx &gt; add path 设置自定义图标 primaryStage.getIcons().add(new Image(&quot;file:res/internet.png&quot;)); 打包生成exe File | project structure &gt; Artifacts &gt; JavaFx &gt;(class | title | Navite Bundle) 注意目录文件要能找到 事件绑定fxml onAction add Java 添加函数 fx:id 对象属性修改 添加一个fxml成员变量 调用setText(“”); 我的代码MainApp.fxml&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;?import javafx.geometry.Insets?&gt;&lt;?import javafx.scene.control.Button?&gt;&lt;?import javafx.scene.control.DialogPane?&gt;&lt;?import javafx.scene.control.Label?&gt;&lt;?import javafx.scene.control.TextArea?&gt;&lt;?import javafx.scene.control.TextField?&gt;&lt;?import javafx.scene.layout.FlowPane?&gt;&lt;?import javafx.scene.layout.Pane?&gt;&lt;?import javafx.scene.text.Font?&gt;&lt;FlowPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"400.0\" prefWidth=\"800.0\" xmlns=\"http://javafx.com/javafx/8.0.121\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"cn.thinkmoon.CSMA_CD.MainApp\"&gt;&lt;children&gt; &lt;Pane prefHeight=\"400.0\" prefWidth=\"800.0\"&gt; &lt;children&gt; &lt;Button layoutX=\"154.0\" layoutY=\"206.0\" mnemonicParsing=\"false\" onAction=\"#handleSendDataPackage\" text=\"发送数据包\"&gt; &lt;font&gt; &lt;Font size=\"14.0\" /&gt; &lt;/font&gt;&lt;/Button&gt; &lt;Button layoutX=\"283.0\" layoutY=\"206.0\" mnemonicParsing=\"false\" text=\"重置操作\"&gt; &lt;font&gt; &lt;Font size=\"14.0\" /&gt; &lt;/font&gt;&lt;/Button&gt; &lt;TextArea layoutX=\"500.0\" layoutY=\"51.0\" prefHeight=\"299.0\" prefWidth=\"277.0\" /&gt; &lt;Label fx:id=\"host1SendNum\" layoutX=\"43.0\" layoutY=\"70.0\" text=\"主机1所需发送的数据包数：\"&gt; &lt;font&gt; &lt;Font size=\"17.0\" /&gt; &lt;/font&gt; &lt;/Label&gt; &lt;Label layoutX=\"43.0\" layoutY=\"130.0\" text=\"主机2所需发送的数据包数：\"&gt; &lt;font&gt; &lt;Font size=\"17.0\" /&gt; &lt;/font&gt; &lt;/Label&gt; &lt;Label layoutX=\"52.0\" layoutY=\"291.0\" text=\"主机1\"&gt; &lt;font&gt; &lt;Font size=\"18.0\" /&gt; &lt;/font&gt; &lt;/Label&gt; &lt;Label layoutX=\"410.0\" layoutY=\"291.0\" text=\"主机2\"&gt; &lt;font&gt; &lt;Font size=\"18.0\" /&gt; &lt;/font&gt; &lt;/Label&gt; &lt;TextField layoutX=\"279.0\" layoutY=\"71.0\" /&gt; &lt;TextField layoutX=\"279.0\" layoutY=\"130.0\" /&gt; &lt;Label layoutX=\"292.0\" layoutY=\"14.0\" text=\"模拟以太网发送过程\"&gt; &lt;font&gt; &lt;Font size=\"17.0\" /&gt; &lt;/font&gt; &lt;/Label&gt; &lt;Label layoutX=\"48.0\" layoutY=\"327.0\" style=\"-fx-border-width: 1; -fx-border-color: #218ada;\" styleClass=\"tip\" text=\"信道空闲\" textFill=\"#218ada\"&gt; &lt;padding&gt; &lt;Insets bottom=\"2.0\" left=\"2.0\" right=\"2.0\" top=\"1.0\" /&gt; &lt;/padding&gt; &lt;/Label&gt; &lt;Label layoutX=\"406.0\" layoutY=\"327.0\" style=\"-fx-border-width: 1; -fx-border-color: #218ada;\" styleClass=\"tip\" text=\"信道空闲\" textFill=\"#218ada\"&gt; &lt;padding&gt; &lt;Insets bottom=\"2.0\" left=\"2.0\" right=\"2.0\" top=\"1.0\" /&gt; &lt;/padding&gt; &lt;/Label&gt; &lt;TextField layoutX=\"114.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"140.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"170.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"199.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"226.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"257.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"283.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"311.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"340.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;TextField layoutX=\"369.0\" layoutY=\"292.0\" prefHeight=\"23.0\" prefWidth=\"19.0\" /&gt; &lt;/children&gt; &lt;/Pane&gt; &lt;DialogPane /&gt;&lt;/children&gt;&lt;/FlowPane&gt; MainApp.javapackage cn.thinkmoon.CSMA_CD;import javafx.application.Application;import javafx.event.ActionEvent;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.Label;import javafx.scene.image.Image;import javafx.stage.Stage;import java.io.IOException;public class MainApp extends Application &#123; private Stage primaryStage; @FXML private Label host1SendNum; @Override public void start(Stage primaryStage) throws Exception&#123; this.primaryStage = primaryStage; initRootLayout(); &#125; /** * 初始化主界面布局 */ public void initRootLayout() &#123; try &#123; Parent root = FXMLLoader.load(getClass().getResource(\"view/MainApp.fxml\")); primaryStage.setTitle(\"CSMA/CD协议仿真及演示\"); primaryStage.setScene(new Scene(root, 800, 400)); primaryStage.setResizable(false); primaryStage.getIcons().add(new Image(\"file:res/internet.png\")); primaryStage.show(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; public static void main(String[] args) &#123; launch(args); &#125; @FXML private void handleSendDataPackage(ActionEvent event) &#123; &#125;&#125;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://thinkmoon.cn/tags/Java/"}]},{"title":"<运动世界校园>外挂","slug":"运动世界校园-外挂","date":"2018-06-28T13:17:28.000Z","updated":"2018-09-09T12:09:18.402Z","comments":true,"path":"/c064.html","link":"","permalink":"https://thinkmoon.cn/c064.html","excerpt":"","text":"所需条件 安卓手机（模拟器我没试过） 已获ROOT或已安装Virtual Xposed Xposed框架能安装成功 所需软件 xposed install（安装xposed 框架） lataclysm（模拟运动位置） SoDo Hide（对应用隐藏xposed框架） 运动模拟器（模拟计步传感器） 准备工作 安装上述软件 在xposed install里面将模块激活 重启手机 未完待续，心情好了再续","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"黑魔法","slug":"黑魔法","permalink":"https://thinkmoon.cn/tags/黑魔法/"}]},{"title":"篆书转换器 | 版本更新","slug":"zhuanshuzhanhuanqi","date":"2018-06-21T07:07:32.000Z","updated":"2018-09-13T07:14:11.838Z","comments":true,"path":"/5a3b.html","link":"","permalink":"https://thinkmoon.cn/5a3b.html","excerpt":"","text":"","categories":[{"name":"公众号文章迁移","slug":"公众号文章迁移","permalink":"https://thinkmoon.cn/categories/公众号文章迁移/"}],"tags":[{"name":"篆书转换器","slug":"篆书转换器","permalink":"https://thinkmoon.cn/tags/篆书转换器/"}]},{"title":"微信小程序svg转canvas","slug":"1529492640","date":"2018-06-20T03:04:00.000Z","updated":"2018-09-09T12:09:18.394Z","comments":true,"path":"/4a59.html","link":"","permalink":"https://thinkmoon.cn/4a59.html","excerpt":"","text":"首先，为什么我们需要这个？ 因为微信小程序虽然可以可以绘制svg图片，但是在真机调试的时候却渲染不出来。所以我们需要一个工具(可以将svg转成微信小程序支持的canvas并绘制出来)。 我使用的是touch-wx + vs code 开发。 Touch WX 是什么？ Touch WX是一套完全免费的微信小程序开发框架，包含丰富的UI控件用于官方组件的补充。与Touch UI开发方式很相似，也是通过VSCode编辑器+插件的方式开发，经过编译后输出小程序代码。与其他小程序框架最主要的区别在于：Touch UI完全是基于小程序官方的自定义组件机制实现，输出的是小程序原始代码，而不是输出开发者完全无法阅读的编译代码。这样当遇到问题时，开发者可以很方便的定位问题所在，还可以基于输出的原始代码继续开发。当你用Touch UI开发了H5应用，可以直接导入到Touch WX进行转换，稍作调整就能生成小程序。反之也同样，当你Touch WX开发了微信小程序，可以导出为Touch UI工程来生成H5应用。 Touch WX 的特点 我的理解 Touch WX 就是一个可以将特定的nodejs项目编译成微信小程序项目的框架 Touch WX更多操作 更多操作见http://www.touchui.io/touchui_doc_wx/ 推荐大家看一下，或许会打开新世界的大门哦！ 接下来，我默认你已经看了Touch WX的文档，并且拥有一定的nodejs基础 开始流程安装parse-svg-path npm install parse-svg-path --save 引入parse-svg-path var parse = require(&#39;parse-svg-path&#39;) 使用parse-svg-path parse(d) d为svg中的path值 不了解svg？ 请转http://www.w3school.com.cn/svg/svg_intro.asp 如何获得path值？var options = &#123; url:\"svg的URL\", success:function(res)&#123; const ctx = wx.createCanvasContext('myCanvas') ctx.setFillStyle('black') var match = res.data.match(/d=\"(.*?)\"/); var d = match[1]; console.log(d); &#125; &#125; wx.request(options); 上图中d就是path值，我这里使用的是正则表达式查找，而且只有一个path，如不一样，请自行modify 解析后的值console.log(parse(d)); 解析之后是一系列的操作序列数组 绘制图形 根据一系列的操作，找到对应的微信小程序绘制API，进行绘制parse(d).forEach(function (element)&#123; if(element[0] == \"M\")&#123; ctx.moveTo(element[1], element[2]) &#125;else if(element[0] == \"Q\")&#123; ctx.quadraticCurveTo(element[1], element[2], element[3], element[4]) &#125; &#125;); 因为我这里只有M，Q操作所以我只用了两个API，可根据实际情况自行拓展 实例代码display.wx&lt;template&gt; &lt;view class='page'&gt; &lt;canvas canvas-id=\"myCanvas\" style=\"border: 1px solid;\"/&gt; &lt;!-- &lt;view class='content'&gt;&lt;text class=\"zhuan\" style=\"font-size:&#123;&#123;fontSize&#125;&#125;pt\"&gt;&#123;&#123;display&#125;&#125;&lt;/text&gt; --&gt; &lt;!-- &lt;/view&gt; --&gt;&lt;/view&gt;&lt;/template&gt;&lt;script&gt;var parse = require('parse-svg-path')export default &#123; config: &#123; navigationBarTitleText: '效果展示' &#125;, data: &#123;&#125;, onLoad: function (options) &#123; var str = options.display; if(str != null)&#123; try &#123; str=decodeURI(str); wx.setStorageSync('display', str) console.log(\"接受到的str：\"+str); &#125; catch (e) &#123; console.log(\"设置diaplay值错误\") &#125; &#125; &#125;, /** * 生命周期函数--监听页面初次渲染完成 */ onReady: function () &#123; &#125;, saveTemp()&#123; console.log(\"fdsaf\"); wx.canvasToTempFilePath(&#123; canvasId: 'myCanvas', fail: function(res) &#123; console.log(res); &#125;, success: function(res) &#123; console.log(res.tempFilePath) setTimeout(function()&#123;wx.saveImageToPhotosAlbum(&#123; filePath:res.tempFilePath, fail:function(res)&#123; console.log(res); &#125; &#125;);&#125;,5000) &#125;, &#125;) &#125;, /** * 生命周期函数--监听页面显示 */ onShow: function () &#123; var that = this; var options = &#123; url:\"http://mp.thinkmoon.cn:39999?str=我&amp;site=0\", success:function(res)&#123; const ctx = wx.createCanvasContext('myCanvas') ctx.setFillStyle('black') var match = res.data.match(/d=\"(.*?)\"/); var d = match[1]; console.log(parse(d)) parse(d).forEach(function (element)&#123; if(element[0] == \"M\")&#123; ctx.moveTo(element[1], element[2]) &#125;else if(element[0] == \"Q\")&#123; ctx.quadraticCurveTo(element[1], element[2], element[3], element[4]) &#125; &#125;); ctx.fill(); ctx.draw(false,()=&gt;&#123;setTimeout(() =&gt; &#123;that.saveTemp()&#125;,5000);&#125;); &#125; &#125; wx.request(options); // wx.getStorage(&#123; // key: 'display', // success: function (res) &#123; // console.log(\"display的值为\" + res.data) // that.setData(&#123; // display: res.data, // fontSize: wx.getStorageSync('pt') // &#125;) // &#125; // &#125;) &#125;, /** * 生命周期函数--监听页面隐藏 */ onHide: function () &#123; &#125;, /** * 生命周期函数--监听页面卸载 */ onUnload: function () &#123; &#125;, /** * 页面相关事件处理函数--监听用户下拉动作 */ onPullDownRefresh: function () &#123; &#125;, /** * 页面上拉触底事件的处理函数 */ onReachBottom: function () &#123; &#125;, /** * 用户点击右上角分享 */ onShareAppMessage: function () &#123; var str = this.data.display; var pages = getCurrentPages() //获取加载的页面 var currentPage = pages[pages.length - 1] //获取当前页面的对象 var url = currentPage.route var inUrl = url + \"?display=\" + encodeURI(str); console.log(\"分享的链接为\"+inUrl); return &#123; title: '您的好友给您分享了一段篆文', path: inUrl, success: function (res) &#123; // 转发成功 &#125;, fail: function (res) &#123; // 转发失败 &#125; &#125; &#125;&#125;&lt;/script&gt;&lt;style lang=\"less\"&gt;.content&#123; text-align: center;&#125;canvas&#123; width: 256px; height: 256px;&#125;&lt;/style&gt; 后记 我这个实例本来是将svg转canvas绘制出来，再转图片，下载到本地的。但是因为draw()函数是异步的所以需要等待。才可以下载成功，否则会出现一片黑的情况，总之感觉各种麻烦。再加上画布的大小难以设置。后我还是选择在服务端生成图片再转发过来。 详情可看https://www.thinkmoon.cn/1525662180.html 参考文献 SVG简介 Touch WX开发文档 微信开发文档Canvas","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://thinkmoon.cn/tags/nodejs/"}]},{"title":"node环境安装canvas写中文并自定义字体生成图片","slug":"1525662180","date":"2018-05-06T19:03:00.000Z","updated":"2018-09-13T11:27:20.083Z","comments":true,"path":"/99b5.html","link":"","permalink":"https://thinkmoon.cn/99b5.html","excerpt":"为什么要在服务端装canvas？ 因为并不是所有的客户端都能很好的支持canvas（比如微信小程序不能修改自定义字体），所以我们需要一个能够在服务端生成图片的，然后将图片传输","text":"为什么要在服务端装canvas？ 因为并不是所有的客户端都能很好的支持canvas（比如微信小程序不能修改自定义字体），所以我们需要一个能够在服务端生成图片的，然后将图片传输 安装node-canvas1. 更新编译环境sudo apt-get install libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++ -y 2. 安装node-canvasnpm install -g canvas 3. 测试代码var Canvas = require('canvas'), canvas = new Canvas(300, 200), ctx = canvas.getContext('2d'), fs = require('fs'); var out = fs.createWriteStream(__dirname + '/image.png') , stream = canvas.createPNGStream(); stream.on('data', function(chunk)&#123; out.write(chunk);&#125;); //在左边画正方形ctx.fillStyle = '#A00' ctx.fillRect(0, 30,50,50); //在右边画正方形ctx.fillStyle = '#aaa' ctx.fillRect(50, 30, 50, 50); //画文字ctx.fillStyle = \"#000\";ctx.font = \"20px Arial\";ctx.fillText(\"Hello World\", 0, 20); //画一个圆ctx.beginPath();ctx.arc(30, 110, 20, 0, 2*Math.PI);ctx.stroke();ctx.fillStyle = \"green\"; ctx.fill();ctx.save(); 可能遇到的问题 如果你按上述方法操作，并且运行成功了。那便是极好的 1. 自定义字体// You need to call it before the Canvas is createdCanvas.registerFont('comicsans.ttf', &#123;family: 'Comic Sans'&#125;);var canvas = new Canvas(500, 500), ctx = canvas.getContext('2d');ctx.font = '12px \"Comic Sans\"';ctx.fillText(250, 10, 'Everyone hates this font :('); 不过可能会发现Canvas.registerFont is not a function这是因为npm版本的没有这个函数。 所以你需要去找另一个github版https://github.com/chearon/node-canvas#12971f64a66b git clone 下来 然后将Canvas = require(‘canvas’)改成require(‘./node-canvas’)，将var canvas = new Canvas(300, 200)改成var canvas = new Canvas.Canvas(300, 200) 2. Error: Cannot find module ‘../build/Release/canvas.node’ 如果遇到这个问题，请cd进你的node-canvas目录执行npm install 如果还是不行，请执行npm install -g node-gyp 然后再cd项目目录执行node-gyp rebuild，then cd 进node-canvas同样执行node-gyp rebuild 如果成功则会出现 示例代码我的项目目录.├── 1.html├── composer.json├── font├── fz.ttf├── img├── index.js├── node-canvas├── node_modules├── package.json└── package-lock.json 我的代码var fs = require('fs'),path = require('path');var http = require('http'),url = require(\"url\");var Canvas = require('./node-canvas'),Image = Canvas.Image;var Fonts = [];var filePath = path.resolve('./font');let promise = new Promise(function(resolve, reject) &#123; let i=0; fs.readdir(filePath,function(err,files)&#123; if(err)&#123; console.warn(err) &#125;else&#123; files.forEach(function(filename)&#123; Canvas.registerFont(filePath + \"/\" + filename, &#123;family: \"font\" + i&#125;); console.log(i); i++; &#125;); &#125; &#125;); &#125;);promise.then(function() &#123; console.log(\"ASDF\"); Fonts.forEach((Element) =&gt;&#123; console.log(Element); &#125;);&#125;);console.log('Hi!');http.createServer(function (req, res) &#123; var params = url.parse(req.url, true).query; var str = params.str + '\\r',site = params.site; var row = 1,col = 15,width = 1500; row = str.length / 15 + 1; var fontsize = width/col; var height = fontsize * row + 200; if(height &lt; 1000)&#123;height = 1000&#125; var canvas = new Canvas.Canvas(width, height), ctx = canvas.getContext('2d') res.writeHead(200,&#123;\"Content-Type\": \"image/png\"&#125;); ctx.fillStyle = '#FFF'; ctx.fillRect(0,0,canvas.width, canvas.height); ctx.fillStyle = '#000'; if(row &lt; 2)&#123; let num = str.length fontsize = 1200 / num; ctx.font = fontsize + 'px \"font'+ site +'\"'; ctx.fillText(str,( width - num * fontsize ) / 2, (height-fontsize)/2 -200 + fontsize); &#125; else&#123; ctx.font = fontsize + 'px \"font'+ site +'\"'; for(let i = 0;i &lt; row ; i++)&#123; ctx.fillText(str.substring(i*15,(i+1)*15), 0, fontsize*(i+1)); &#125; &#125; fs.readFile(__dirname + '/img/brand.png', function(err, squid)&#123; if (err) throw err; img = new Image; img.src = squid; ctx.fillStyle = '#42b983'; ctx.fillRect(0,canvas.height - 230,canvas.width, 230); ctx.drawImage(img, canvas.width - img.width / 2 - 50, canvas.height - img.height / 2 - 50, img.width / 2, img.height / 2); res.end(canvas.toBuffer()); &#125;);&#125;).listen(8080); 效果展示","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://thinkmoon.cn/tags/nodejs/"},{"name":"node-canvas","slug":"node-canvas","permalink":"https://thinkmoon.cn/tags/node-canvas/"}]},{"title":"自建网站对接微信公众号","slug":"自建网站对接微信公众号","date":"2018-04-12T07:25:00.000Z","updated":"2018-09-09T12:09:18.398Z","comments":true,"path":"/d930.html","link":"","permalink":"https://thinkmoon.cn/d930.html","excerpt":"平常我们有些写各种网站, 个人博客系统, 物流管理系统, 通信录管理系统, 校园二手网站. 我们都知道, 只需要租用一个服务器, 再配置一个备案好的域名, 就可以在浏览器上进行访问了.不知大家, 不知大家有没有想过, 将你搭的网站对接微信公众号, 利用微信这个大用户软件, 来为你引流呢?","text":"平常我们有些写各种网站, 个人博客系统, 物流管理系统, 通信录管理系统, 校园二手网站. 我们都知道, 只需要租用一个服务器, 再配置一个备案好的域名, 就可以在浏览器上进行访问了.不知大家, 不知大家有没有想过, 将你搭的网站对接微信公众号, 利用微信这个大用户软件, 来为你引流呢? 本文环境 版本 操作系统 Ubuntu 16.04.03 运行方式 VMware虚拟机 编程语言 PHP 项目局域网地址 http://192.168.253.1/audit Q: 你在搞笑吗? 不是直接在微信里面打开的吗? A: 直接用微信打开是可以, 然后你在微信里面让用户再注册一个账号? 对于大部分不想麻烦的小伙伴来说, 他们会对此忘而却步. 其实微信是提供接口, 让你可以获取到微信的用户名,和用户头像的. 一般来说分为三种情况 使用通过的微信开放平台( 注意,不是微信公众平台) 需要开发者认证 使用认证过的订阅号. 需要微信认证 使用认证过的服务号 需要微信认证 额, 那其实不是没认证就没得玩? 好吧, 实际是的确如此, 不过. 如果你真的只是想玩玩. 你可以去这儿. https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login 微信测试号 优点 拥有几乎所有接口, 以及享受局域网IP回调(意思就是说,可以支持局域网, 这是正式微信平台号所不具备的) 发送模板消息, 不用审核.缺点 只支持最多100个用户 不能设置名称, 头像. 对于一些只是想玩玩, 或者小规模用户的是没有问题的. 跟我一起操作登录 扫码登录就好了; 微信token 新建php文件(啥语言都可以,自行修改)public function token() &#123; $nonce = $_GET['nonce']; $token = 'weixin'; $timestamp = $_GET['timestamp']; $echostr = $_GET['echostr']; $signature = $_GET['signature']; //形成数组，然后按字典序排序 $array = array(); $array = array($nonce, $timestamp, $token); sort($array); //拼接成字符串,sha1加密 ，然后与signature进行校验 $str = sha1(implode($array)); if ($str == $signature &amp;&amp; $echostr) &#123; //第一次接入weixin api接口的时候 echo $echostr; exit; &#125; &#125; 然后在测试号里填写路径和token, 认证成功后就可以继续操作了 TIP: 这个链接并不需要一直可访问,只需要第一次认证通过就OK, 甚至认证过可以直接删掉. 修改回调域名, 接口&gt; 网页授权获取用户基本信息 &gt; 修改 只有测试号支持ip 微信的接口 接口详情可在https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141013里查看 注意: 这些接口不是简单的对接就好了, 每次请求都需要携带access_token, 而获取access_token, 每天有获取上限. access-token具有有效期(7200s) , 过期需要重新获取. 获取access_token的方法https://mp.weixin.qq.com/debug/cgi-bin/apiinfo?t=index&amp;type=%E5%9F%BA%E7%A1%80%E6%94%AF%E6%8C%81&amp;form=%E8%8E%B7%E5%8F%96access_token%E6%8E%A5%E5%8F%A3%20/token 获取用户信息, 实现免登录的效果 在这儿我们需要三个接口 所用接口: 接口一:https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect接口二:https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code接口三:https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&amp;openid=OPENID&amp;lang=zh_CN接口四: 刷新access_tokenhttps://api.weixin.qq.com/sns/oauth2/refresh_token?appid=APPID&amp;grant_type=refresh_token&amp;refresh_token=REFRESH_TOKEN 接口返回数据, 详见https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842 第一步：用户同意授权，获取code示例:( 注意appid, redirect_url是变量)$str = 'http://open.weixin.qq.com/connect/oauth2/authorize?appid=wx20874ebf2ea1fc7f&amp;redirect_uri=' . urlencode(\"http://192.168.253.1/audit/client/\") . '&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect'; 第二步：通过code换取网页授权access_token 示例 $data = json_decode(file_get_contents(\"https://api.weixin.qq.com/sns/oauth2/access_token?appid=\" . $this-&gt;appid . \"&amp;secret=\" . $this-&gt;secret . \"&amp;code=\" . $_GET['code'] . \"&amp;grant_type=authorization_code\")); 注意: 此处的access_token与上面的access_token不是同一个东西 第三步: 通过access_token换取userinfo示例$userInfo = json_decode(file_get_contents(\"https://api.weixin.qq.com/sns/userinfo?access_token=\" . $data-&gt;access_token . \"&amp;openid=\" . $data-&gt;openid . \"&amp;lang=zh_CN\")); 刷新access_token, 如果需要 这是我画的一个请求过程图, 可以帮助理解 测试演示1. 将授权url发给手机 非必需, 也可以在电脑上, 也可以写到公众号子菜单中点击进入. 2. 关注测试号 不然会这样 关注后点击 测试号访问成功. 额, 关于后台代码原理就不讲了.类似于一个从微信服务器发来的表单, 登录进了系统, 然后再把这些数据存入数据库就好了. 正式号运行效果","categories":[{"name":"技术","slug":"技术","permalink":"https://thinkmoon.cn/categories/技术/"}],"tags":[{"name":"codeigniter","slug":"codeigniter","permalink":"https://thinkmoon.cn/tags/codeigniter/"},{"name":"微信公众号","slug":"微信公众号","permalink":"https://thinkmoon.cn/tags/微信公众号/"},{"name":"PHP","slug":"PHP","permalink":"https://thinkmoon.cn/tags/PHP/"}]},{"title":"python3 + Django + uwsgi + nginx 配置部署笔记","slug":"python3 + Django + uwsgi + nginx 配置笔记","date":"2018-04-10T09:04:00.000Z","updated":"2018-09-09T12:09:18.390Z","comments":true,"path":"/602a.html","link":"","permalink":"https://thinkmoon.cn/602a.html","excerpt":"本文环境 操作系统: Ubuntu 16.04.3Python版本: 3.5.2Django版本: 2.0.4nginx版本: 1.10.3 本文平台为腾讯云1核1G系统我的项目文件名为: dgutpsy","text":"本文环境 操作系统: Ubuntu 16.04.3Python版本: 3.5.2Django版本: 2.0.4nginx版本: 1.10.3 本文平台为腾讯云1核1G系统我的项目文件名为: dgutpsy 安装pip3(python3 的pip)sudo apt-get install python3-pip 安装成功后运行pip3将会出现 安装uwsgipip install uwsgi 测试uwsgi运行状态 新建文件test.pydef application(env, start_response): start_response('200 OK', [('Content-Type','text/html')]) return [b\"Hello World\"] 有些教程说是 return &quot;hello world&quot; 但是这样其实会出现访问空白的情况,因为应该要对hello world进行编码. 使用uwsgi运行该文件uwsgi --http :8000 --wsgi-file test.py 访问页面 好啦,可以看到亲切的hello world 就说明uwsgi运行成功了 TIPS: 如果你访问不了,请先检查腾讯云安全组端口是否开放8000端口 安装Djangopip3 install Django 如在python3里面import django没有报错则安装成功. 上传项目代码 现在我们开始上传项目代码 使用MobaXterm的sftp工具拖进来,[笑着哭]不要问我为什么不用ftp,这个方便. 确认代码运行正常 切进项目目录,运行python3 manage.py runserver 0.0.0.0:8000 访问页面 不太对?这是因为设置了ALLOWED_HOSTS的原因我们在setting.py里设置一下ALLOWED_HOSTS = ['*'] 再次访问页面 OK! uswgi运行项目uwsgi --http :8000 --chdir /home/ubuntu/dgutpsy --wsgi dgutpsy.wsgi 开什么玩笑? 你觉得没变化? 至此 我们可以暂定以下内容 项目没问题. 项目配置没问题 uwsgi没问题 对项目的支持环境没问题 接下来, 我们开始配置nginx 安装nginxsudo apt-get install nginx 测试nginx运行状态 nginx 安装成功 修改nginx配置 文件路径&quot;/etc/nginx/sites-enabled/default&quot; 别再费力找nginx.conf啦,新版本已经没有这个文件的. 我的upstream django &#123; server 127.0.0.1:8001; #web的socket端口 &#125;server &#123; listen 80 default_server; listen [::]:80 default_server; index index.html index.htm index.nginx-debian.html; server_name _; location / &#123; root /home/ubuntu/dgutpsy; #项目目录 uwsgi_pass django; include /home/ubuntu/dgutpsy/uwsgi_params; #uwsgi_params文件的地址 &#125;&#125; 完整的uwsgi_params文件内容应该是uwsgi_param QUERY_STRING $query_string;uwsgi_param REQUEST_METHOD $request_method;uwsgi_param CONTENT_TYPE $content_type;uwsgi_param CONTENT_LENGTH $content_length;uwsgi_param REQUEST_URI $request_uri;uwsgi_param PATH_INFO $document_uri;uwsgi_param DOCUMENT_ROOT $document_root;uwsgi_param SERVER_PROTOCOL $server_protocol;uwsgi_param REQUEST_SCHEME $scheme;uwsgi_param HTTPS $https if_not_empty;uwsgi_param REMOTE_ADDR $remote_addr;uwsgi_param REMOTE_PORT $remote_port;uwsgi_param SERVER_PORT $server_port;uwsgi_param SERVER_NAME $server_name; 没有这个文件,或者这个文件写错是会报错的哦. 访问测试502 这是因为我们的socket通信还没开始呢! nginx 与 uwsgi通信 先使用hello world测试uwsgi --socket :8001 --wsgi-file test.py 访问测试页面 至此: nginx 与 uwsgi通信成功! 让uwsgi后台运行 这样虽然看似可以, 但是当你关闭ssh时,又会出现502了! 这是因为当你关闭这个ssh进程时,uwsgi进程也被终止了.而且,每次启动都要输一串好长的命令,好不麻烦! 这个时候,我们需要用到一个东西, 那就是ini配置文件启动. 新建test.ini[uwsgi]socket = 127.0.0.1:8001wsgi-file = /home/ubuntu/dgutpsy/test.pydaemonize = /home/ubuntu/dgutpsy/test.log uwsgi --ini test.ini niginx与Django项目通信新建dgutpsy.ini[uwsgi]socket = 127.0.0.1:8001chdir = /home/ubuntu/dgutpsymodule = dgutpsy.wsgimaster = trueprocesses = 1 threads = 2 max-requests = 6000daemonize = /home/ubuntu/dgutpsy/run.log 然后运行uwsgi --ini dgutpsy.ini 域名映射添加域名&gt;解析consult.psyannabel.cn 访问页面 后记: Q&amp;A:Q: 能用manage.py运行的,为什么要用uwsgi? A: 单进程的manage.py, 能和web服务器uwsgi比ma Q: 能用uwsgi的,为什么还要用nginx? A: uwsgi虽然是web服务器, 但是它在处理静态文件时, 并没有nginx来得优秀. Q: 大致流程? A: nginx运行web处理http请求, nginx使用socket与uwsgi通信,将动态部分转让交给uwsgi处理Q:待补充…..","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"记录","slug":"记录","permalink":"https://thinkmoon.cn/tags/记录/"}]},{"title":"codeigniter | codeigniter的一些笔记","slug":"codeigniter的一些笔记","date":"2018-04-02T05:15:42.000Z","updated":"2018-09-09T12:09:18.390Z","comments":true,"path":"/15d8.html","link":"","permalink":"https://thinkmoon.cn/15d8.html","excerpt":"codeigniter 部署坑","text":"codeigniter 部署坑 session 文件路径问题 解决方法 在application/config/config.php 中最后一行, 加入$config['sess_save_path'] =BASEPATH.'../'.'session_file'; 原因 未设置ssesion文件路径,会默认使用php.ini的文件路径,可能会出现无路径访问权限的问题 baseurl 修改 要记得修改baseurl的值,以免出现访问不成功的情况$config['base_url'] = 'https://www.farminbackyard.com'; pasue;","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"codeigniter","slug":"codeigniter","permalink":"https://thinkmoon.cn/tags/codeigniter/"}]},{"title":"杂谈 | 让人生少些遗憾","slug":"让人生少些遗憾","date":"2018-03-22T05:15:42.000Z","updated":"2018-09-09T12:09:18.398Z","comments":true,"path":"/1c9a.html","link":"","permalink":"https://thinkmoon.cn/1c9a.html","excerpt":"让人生少些遗憾如果你有缘看到这篇文章，希望你可以停下匆忙的步伐，放下浮躁的内心，屏蔽世界的喧嚣，与我一起慢慢反思，反思着，如何让人生少些遗憾。","text":"让人生少些遗憾如果你有缘看到这篇文章，希望你可以停下匆忙的步伐，放下浮躁的内心，屏蔽世界的喧嚣，与我一起慢慢反思，反思着，如何让人生少些遗憾。 我问佛：“为何留世间诸多遗憾？”佛曰：“这世界乃婆娑世界， 婆娑，即遗憾！” 何为遗憾生活中，有很多很多事情，我们想去改变，可是却有心无力。也有很多很多我们本该去关心或者想去关心的人，却因着所谓的事情或者理由，错过了最佳的时机。 我们把诸如此类的，称之为，遗憾！ 我时常在梦中醒来，问自己，如何让自己的人生不留遗憾？ 有一天晚上，我顿悟，就如文章开头，这世界本就婆娑，怎么没有遗憾？ 可这遗憾也如树上的果子，有大有小，有酸有甜。有得让我们悔恨一生，有的让我们珍惜现在。 经过我多年的总结发现，让我们悔恨一生的，往往是大遗憾。让我们学会珍惜现在的，需要自己悟。 所以我们需要学会，如何减少大遗憾。 如何减少大遗憾减少大遗憾，一个极其重要的一点就是要明确自己的内心最想要的是什么。 以及，什么是最值得去守护的东西。 最值得守护的东西家情初心最值得追求的东西梦想爱好结语","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"https://thinkmoon.cn/tags/杂谈/"}]},{"title":"给你的网站加一个2.5D悬浮小人","slug":"给你的网站加一个2.5D悬浮小人","date":"2018-03-10T02:17:42.000Z","updated":"2018-09-09T12:09:18.398Z","comments":true,"path":"/17c1.html","link":"","permalink":"https://thinkmoon.cn/17c1.html","excerpt":"我们平常访问某些网站的时候,会发现在网站上总是悬浮者一个可爱的小人.而且还可以跟用户进行各种互动(说话?).一般这种小人都是通过js加载出来的, 搜索关键词网上有教程. 不过我今天在这里记录的是,如何添加2.5D互动小人","text":"我们平常访问某些网站的时候,会发现在网站上总是悬浮者一个可爱的小人.而且还可以跟用户进行各种互动(说话?).一般这种小人都是通过js加载出来的, 搜索关键词网上有教程. 不过我今天在这里记录的是,如何添加2.5D互动小人 平台: hexo + hexo-plugins(live2d-widget-models)同时也支持jekyll, wordpress, etc. 安装sudo npm install --save hexo-helper-live2d 项目github地址https://github.com/xiazeyu/live2d-widget-models 然后在_config.yml(hexo或者主题的都行)中添加live2d: enable: true scriptFrom: local model: use: live2d-widget-model-wanko //使用的模型名,下面会详细讲 display: //如果觉得默认定位不满意可在此微调,bottom position: right width: 150 height: 300 bottom:-30 mobile: show: true 自定义模型的使用点我hexo下现有模型的安装npm install &#123;packagename&#125; 安装示例 sudo npm install live2d-widget-model-chitose 最新版现有模型测试与预览 OK, 这是重点[哭笑不得],现实效果是会动的, 由于截gif过于麻烦, 我就只好截屏了. 现实效果绝对比这帅. live2d-widget-model-chitose 唔, 这是一个美少年. 比较适合女生. 我就不用这个了. live2d-widget-model-epsilon2_1 一个夏装妹子, 比较适合宅男 live2d-widget-model-gf 一个卡通人物(废话), 很炫酷 live2d-widget-model-haru 这个模型需要两点注意, 它的安装方式是 npm install live2d-widget-model-haru 模型的使用却是use: live2d-widget-model-haru/01 或者use: live2d-widget-model-haru/02这是因为他这个包里有两个模型的原因 它在子模型下的json文件是空的, 所以你要将/博客路径/node_modules/live2d-widget-model-haru/package.json复制进01, 02 文件夹. live2d-widget-model-haru/01 live2d-widget-model-haru/02 live2d-widget-model-haruto live2d-widget-model-hibiki 吐槽一句, 这位同学太高了,已经把我电脑屏幕高快全占了 live2d-widget-model-izumi live2d-widget-model-koharu 是不是有些熟悉? 这妹妹跟haruto是情侣啊! live2d-widget-model-miku live2d-widget-model-ni-j live2d-widget-model-nico live2d-widget-model-nietzsche live2d-widget-model-nipsilon live2d-widget-model-nito live2d-widget-model-shizuku live2d-widget-model-tororo live2d-widget-model-tsumiki live2d-widget-model-unitychan live2d-widget-model-wanko live2d-widget-model-z16 总结 我把官网所有的模型都装了一次, 最后发现一个规律, 那就是模型妹子偏多. 看来技术宅喜欢动漫少女的说法基本正确. 由于我装了一个多小时的模型, 已经对此有些反感了, 所以就保留最后一个不换了. 想看效果的可以电脑端访问https://www.thinkmoon.cn 看效果 mobile 的值决定了在手机端是否显示 由于显示会影响阅读,我这儿设为false","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"折腾","slug":"折腾","permalink":"https://thinkmoon.cn/tags/折腾/"}]},{"title":"Bootstrap-table 爬坑之旅","slug":"Bootstrap-table 爬坑之旅","date":"2018-02-24T13:17:00.000Z","updated":"2018-09-09T12:09:18.386Z","comments":true,"path":"/9212.html","link":"","permalink":"https://thinkmoon.cn/9212.html","excerpt":"","text":"继上次被坑后,由于未做笔记, 没想的我再次败在这个坑上, 自我感觉我还将使用bootstraap-table一段时间, 所以为了避免下次再被这个坑坑一个下午的时间. 我决定将它记录下来. 首先, 前端table插件有很多, 但是由于它是我接触的第一个,所以可能会用它一定的时间. 我采用的是, data-url,数据与视图分离的格式. 坑: 在operation的formatter和events的设定时, 切记不要设置data-field的值,否则会出现events显示不了的情况 . 在引入js拓展时,注意后面的js不能与其冲突,导致改变引入顺序","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"记录","slug":"记录","permalink":"https://thinkmoon.cn/tags/记录/"}]},{"title":"微信平台开发笔记","slug":"微信平台开发笔记","date":"2018-02-12T13:15:42.000Z","updated":"2018-09-09T23:46:11.811Z","comments":true,"path":"/7cdb.html","link":"","permalink":"https://thinkmoon.cn/7cdb.html","excerpt":"微信平台开发笔记","text":"微信平台开发笔记 URL跳转,链接跳转https://open.weixin.qq.com/connect/oauth2/authorize?appid=&quot;.$this-&gt;appid.&quot;&amp;redirect_uri=&quot;.urlencode(&quot;http://192.168.43.46/auit/index.php?c=app&amp;m=oauth&quot;).&quot;&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect 用户进入页面,拿code换取ACCESS_TOKEN, 请求代码 file_get_contents(\"https://api.weixin.qq.com/sns/oauth2/access_token?appid=\".$this-&gt;appid.\"&amp;secret=\".$this-&gt;secret.\"&amp;code=\".$_GET['code'].\"&amp;grant_type=authorization_code\"); 用ACCESS_TOKEN换取用户数据,请求代码 file_get_contents(\"https://api.weixin.qq.com/sns/userinfo?access_token=\".$data-&gt;access_token.\"&amp;openid=\".$data-&gt;openid.\"&amp;lang=zh_CN\") 流程示例代码public function oauth()&#123; if (isset($_GET['code']))&#123; $data=json_decode(file_get_contents(\"https://api.weixin.qq.com/sns/oauth2/access_token?appid=\".$this-&gt;appid.\"&amp;secret=\".$this-&gt;secret.\"&amp;code=\".$_GET['code'].\"&amp;grant_type=authorization_code\")); $userInfo=json_decode(file_get_contents(\"https://api.w eixin.qq.com/sns/userinfo?access_token=\".$data-&gt;access_token.\"&amp;openid=\".$data-&gt;openid.\"&amp;lang=zh_CN\")); $user = array( 'openid' =&gt; $userInfo-&gt;openid, 'nickname' =&gt; $userInfo-&gt;nickname, 'headimgurl' =&gt; $userInfo-&gt;headimgurl ); $this-&gt;session-&gt;set_userdata($user); $this-&gt;db-&gt;replace('user', $user); redirect('client'); &#125;else&#123; echo \"出现未知错误，如果重复出现该错误，请联系开发者。错误代码:Oauth:10203\"; &#125; &#125; php密码操作(PHP 5 &gt;= 5.5.0, PHP 7) 加密操作:string password_hash ( string $password , int $algo [, array $options ] ) 示例: password_hash(\"admin\", PASSWORD_DEFAULT); 判断操作: bool password_verify ( string $password , string $hash ) 示例: password_verify($password, $admin_data-&gt;row()-&gt;password)","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"微信","slug":"微信","permalink":"https://thinkmoon.cn/tags/微信/"}]},{"title":"进化版的Server酱——PushBear","slug":"PushBear","date":"2018-02-02T05:15:42.000Z","updated":"2018-09-09T12:09:18.386Z","comments":true,"path":"/65f6.html","link":"","permalink":"https://thinkmoon.cn/65f6.html","excerpt":"一个利用PHP群发微信消息的工具。上一篇讲到了如何用Server酱推送消息到个人微信，这篇我们一起来了解一下Server酱的进化版——pushbear，一对多微信消息推送","text":"一个利用PHP群发微信消息的工具。上一篇讲到了如何用Server酱推送消息到个人微信，这篇我们一起来了解一下Server酱的进化版——pushbear，一对多微信消息推送 Server酱的局限 ==首先这里的SCKEY与userID只是简单的一对一的关系，但其实如果做成一对多更好。因为这样便可以群发通知 #801400== ==她这儿的的分享链接里面包含了很多个人敏感的信息，而其实这在微信的标准里面是不安全的。 #801900== 老规矩，PushBear官网(https://pushbear.ftqq.com/admin/#/) 使用流程1.使用微信扫码登录网站 这个比Server好的地方就是它不需要使用github账号登录了，直接扫码即可。 2.新建通道 这里的通道的意思你可以把它，看作一个群。每一个通道负责群发消息到绑定这个管道 的微信。 3.绑定用户到通道 这个也特别的方便，直接扫描订阅二维码即可 4.发送测试消息 打开测试表单啦，然后测试 5.使用PHP群发消息到微信 一个函数就可以了， function weixin_notify($header,$content)&#123; $SENDKEY = \"1218-f6*************0b98d0a2e10fdd2\";//微信通知KEY file_get_contents('https://pushbear.ftqq.com/sub?sendkey='.$SENDKEY.'&amp;text='.urlencode($header).'&amp;desp='.urlencode($content));&#125; 6.效果展示 总结 原理什么的，这次就不解释了，上一篇已经解释过了。 现在我们已经可以利用Server酱发送服务器报警消息至开发者微信。然后再利用PushBear群发业务消息到用户微信。完美对接业务以及管理逻辑。是不感觉特别的方便？","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://thinkmoon.cn/categories/软件推荐/"}],"tags":[{"name":"通知软件推荐","slug":"通知软件推荐","permalink":"https://thinkmoon.cn/tags/通知软件推荐/"}]},{"title":"屌丝配色方案","slug":"我的神奇笔记","date":"2018-01-22T07:09:08.000Z","updated":"2018-09-09T12:09:18.398Z","comments":true,"path":"/bb4e.html","link":"","permalink":"https://thinkmoon.cn/bb4e.html","excerpt":"唔，这个配色是我乱打然后筛选出来较为柔和的配色","text":"唔，这个配色是我乱打然后筛选出来较为柔和的配色 字体色#616161 .div{display:block;height:50px;width:100%;margin:5px;}.red{color:#EFEFEF; background:#FF6666;}.green{color:#FFFFFF;background:#55EF55;}.gray{color:#E5E5E5;background:#554455;}.blue{color:#E5E5E5;background:#7777FF;} 前景色:#EFEFEF背景色:#FF6666前景色:#EEEEEE背景色:#55EF55前景色:##E5E5E5背景色:#554455","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"记录","slug":"记录","permalink":"https://thinkmoon.cn/tags/记录/"}]},{"title":"醉月老哥的微信助手","slug":"醉月老哥的微信助手","date":"2018-01-10T02:17:42.000Z","updated":"2018-09-09T12:09:18.402Z","comments":true,"path":"/92bc.html","link":"","permalink":"https://thinkmoon.cn/92bc.html","excerpt":"前言 醉月老哥的微信助手:不要问我为什么起这个名字，我也不知道!这两天天气冷，在脑海里构想这个，之后便开始着手做了。开始日期:2017年12月15日 13时47分25秒","text":"前言 醉月老哥的微信助手:不要问我为什么起这个名字，我也不知道!这两天天气冷，在脑海里构想这个，之后便开始着手做了。开始日期:2017年12月15日 13时47分25秒 功能定位 立志做一个对接全网内容的助手,其内容包括但不限于:糗事百科，今日头条，简书，MSDN，php.net，百度翻译，搜索引擎。争取做到微信在手，天下我有！有好的想法或者建议欢迎联系我！ 特别感谢: @Goff, @Annabel 现有功能介绍1. 糗事百科使用说明 公众号回复”糗事百科” 效果展示 ：TODO 虽然看似基本功能完成了，但是会有一个小问题：当爬取的内容为，图片分享时，并不能展示其对应的图片 2. 今日头条今日头条-使用说明 公众号回复“今日头条” 今日头条-效果展示 今日头条-:TODO 我怎么感觉这个娱乐新闻偏多呢？（是头条热点的问题?)1.将内容集中与政治，社会，科技 3. 醉月老哥的微信助手醉月老哥的微信助手-使用说明 公众号回复”醉月老哥的微信助手” 醉月老哥的微信助手-效果展示 4.搜索新闻搜索新闻-使用说明 回复’news(关键词)’搜索新闻，例如news(江歌),搜索关于江歌的新闻 搜索新闻-效果展示 搜索新闻-：TODO 让新闻来源可指向 公众号二维码 源代码地址醉月老哥的微信助手 更新说明更新说明","categories":[{"name":"技术","slug":"技术","permalink":"https://thinkmoon.cn/categories/技术/"}],"tags":[{"name":"微信","slug":"微信","permalink":"https://thinkmoon.cn/tags/微信/"}]},{"title":"利用Server酱推送消息到个人微信","slug":"ServerChan","date":"2018-01-02T05:15:42.000Z","updated":"2018-09-09T12:09:18.390Z","comments":true,"path":"/26e2.html","link":"","permalink":"https://thinkmoon.cn/26e2.html","excerpt":"如果你需要及时收到服务器的运行报告，如果你嫌装客户端端软件太麻烦。那么你可以试试这个，调用WEB API推送消息到你的微信；我想这可能会是一个不错的装逼姿势。","text":"如果你需要及时收到服务器的运行报告，如果你嫌装客户端端软件太麻烦。那么你可以试试这个，调用WEB API推送消息到你的微信；我想这可能会是一个不错的装逼姿势。 「Server酱」，英文名「ServerChan」，是一款「程序员」和「服务器」之间的通信软件。说人话？就是从服务器推报警和日志到手机的工具。 Server酱工作原理图 大致解释一下步骤： 登录Server酱官网，使用==github #800000==账号登录 绑定一个微信（你的或者你想通知的人的） 获取到SendKey（它根据这个==Sendkey #800500==区分目标） 在你发起消息的服务器或者软件调用API发送GET请求 手机微信上收到消息 技术要求 需要有一个GitHub账号，没有可以注册一个。 需要有一个微信账号，没有可以注册一个。 需要关注一个公众号，没有可以关注一下。 需要会使用Get请求,任何语言。 操作流程1.进入官网，使用GitHub账号登录。开始绑定微信。就是使用微信扫描之后（会叫你关注一个公众号），然后在这个界面点击&lt;检查结果并确认绑定&gt; 绑定成功之后是这样子的 2.获取SendKey（在发送消息页面）。 3.首先我们来测试一下能否发送成功 在这个在线发送工具下输入你想发送的数据。 4.打开微信看看效果 注意这个界面不要随便分享，因为这个链接里面就有你的SCKEY，如果你不想突然收到别人莫名其妙的消息，那还是自己看就好了。 5.php调用WEB API发送消息（一定得是PHP？不，你用表单都可以，It‘s up to you.) 对了，其实这个消息内容是支持markdown的哦（很好的一个设计），如果不知道什么是markdown的话。。。去百度？ 写成一个函数 function weixin_notify($SCKEY,$header,$content){ file_get_contents(&apos;https://sc.ftqq.com/&apos;.$SCKEY.&apos;.send?text=&apos;.urlencode($header).&apos;&amp;desp=&apos;.urlencode($content)); } 然后你再需要发送服务器警告的地方调用函数即可 ServerChan 工作原理分析 如果你打算做一个类似的平台的话。你首先有两个东西是必不可缺的。1,一个服务器后端。2，一个通过微信认证了的服务号 首先你得关注公众号 你扫描之后绑定微信，其实是一个区分用户的过程，来记录你的userID。比如：百词斩官方公众号通过你发特定的字符串来区别。 它的服务端通过SCKEY与userID做一个映射，然后根据你的SCKEY来发给不同的人。 服务端开放一个接口，接收你的SCKEY、title、content。然后再调用微信官方接口发送客户消息。 用户收到消息 局限与完善 ==首先这里的SCKEY与userID只是简单的一对一的关系，但其实如果做成一对多更好。因为这样便可以群发通知 #801400== ==她这儿的的分享链接里面包含了很多个人敏感的信息，而其实这在微信的标准里面是不安全的。 #801900==","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://thinkmoon.cn/categories/软件推荐/"}],"tags":[{"name":"通知软件推荐","slug":"通知软件推荐","permalink":"https://thinkmoon.cn/tags/通知软件推荐/"}]},{"title":"推荐一个（神器级）服务器软件","slug":"推荐一个（神器级）服务器软件","date":"2017-12-15T10:41:56.000Z","updated":"2018-09-13T08:49:14.358Z","comments":true,"path":"/f4f7.html","link":"","permalink":"https://thinkmoon.cn/f4f7.html","excerpt":"简单好用的 Linux/Windows 面板","text":"简单好用的 Linux/Windows 面板 前言:首先要说的是，它在我看来就是一件神器！ 何为神器？ 那就是以后遇到必装 ，而且在没有遇到更神的神器之前，将会一直使用下去。 如果你是新手：使用它：你可以不再为配置ftp，apache，mysql，ssl，等操作而发愁了，因为，所有的操作，在此神器的帮助下，都可以在你的点点戳戳之间实现，不得不拍案叫绝！ 如果你是大佬：使用它，你可以不用自己配环境，找配置文件，对着黑框框，一对一下午了（当然如果对黑框框有特殊情怀的除外) 它的名字叫——“宝塔” 它是什么 它是一个，服务器面板控制端软件 它能干什么 它可以让你把一些基本的服务器操作转移到网站上的可视化操作,例如站点管理，服务管理，子网站管理，端口管理，服务器监控等 我们该如何使用它 咳咳，这是我想说的重点，接下来我将使用它傻瓜式的搭建一个支持https，支持ftp的站点。 使用环境: 服务器提供商-腾讯云服务器系统: Centos 6.6(64位纯净版)操作客户端：win 10企业版（1709）SSH连接软件：MobaXterm Personal Edition（也是一大神器）日期时间：2017年12月15日 1.ssh连接服务器 2.安装宝塔软件yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh 仅支持32位系统 安装成功后是这样的 在这儿它说 控制面板链接为：http://119.28.73.46:8888用户： admin密码：5bbdeb4c 3.登陆控制面板 输入账号和密码登录 登录成功之后是这样子的 选择一个你喜欢的环境安装就好啦 我在这儿选择LNMP安装包 静候安装就好了 安装成功是这样子的 4.添加网站 填写信息并提交，添加成功后 访问你刚刚设置的域名 到此为止，一个网站就搭建成功了，网站内容可以使用你刚刚设置的ftp访问。以下是ssl证书的设置 打开网站管理&gt;设置&gt;SSL 注：我这儿使用的是腾讯云为我分发的有效期为一年的免费证书，详情见腾讯云的ssl证书，以下操作默认为你已拥有此类证书。 2018.9.1更新：现在已经支持Let’s Ecrypt 了，可以不用腾讯云ssl证书了 选择其他证书&gt;将证书内容复制到此处，为了隐私就不截图了 设置成功后，我们可以看到 :END 到此为止，你已经可以成功了搭建了一个支持https，而且强制跳转https的网站了，是不是有种神器在手，天下我有的错觉呢?","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://thinkmoon.cn/categories/软件推荐/"}],"tags":[{"name":"服务器软件推荐","slug":"服务器软件推荐","permalink":"https://thinkmoon.cn/tags/服务器软件推荐/"},{"name":"宝塔linux面板","slug":"宝塔linux面板","permalink":"https://thinkmoon.cn/tags/宝塔linux面板/"},{"name":"服务器管理工具","slug":"服务器管理工具","permalink":"https://thinkmoon.cn/tags/服务器管理工具/"}]},{"title":"腾讯云对象存储(调用篇)","slug":"腾讯云对象存储(调用篇)","date":"2017-11-23T07:41:09.000Z","updated":"2018-09-09T12:09:18.398Z","comments":true,"path":"/ecbe.html","link":"","permalink":"https://thinkmoon.cn/ecbe.html","excerpt":"&gt; 接上篇，云对象存储（配置篇)旧版本《篆书转换器》响应网络图","text":"&gt; 接上篇，云对象存储（配置篇)旧版本《篆书转换器》响应网络图&nbsp;响应流程图 复习一个计组知识（cache“读不命中”的解决办法） 将内存中的数据复制到Cache中，然后把这个字传给CPU。 启动常规的主存读取周期，将字从主存中读出在并送到CPU，同时将这个字送入Cache。 原理类比 软件请求 =&gt; CPU运算云对象存储（CDN分发)响应 =&gt; 高速缓存Cache读取服务器带宽响应 =&gt; 主存读取 新的响应网络图（采用解决方法2） &nbsp;《篆书转换器》网络拓扑图-CDN 优势 提高图片资源响应速度 减少服务器带宽占用 实现思路的用例图&nbsp;实现思路的用例图 总结 这只是思路，日访问量没有500+(如果真的到了，这样做也解决不了问题)完全没必要这么做，而且数据，资源重用率低，冗余非常高，几乎没有实现这个的必要。所以这个想法放弃","categories":[{"name":"想法","slug":"想法","permalink":"https://thinkmoon.cn/categories/想法/"}],"tags":[{"name":"云","slug":"云","permalink":"https://thinkmoon.cn/tags/云/"}]},{"title":"爱与性","slug":"爱与性","date":"2017-11-21T14:39:30.000Z","updated":"2018-09-09T12:09:18.402Z","comments":true,"path":"/631a.html","link":"","permalink":"https://thinkmoon.cn/631a.html","excerpt":"在传统的典型观念中，性欲和爱情相互结合才是最完美的组合，也就是说性爱双方对彼此的性欲是起源于深厚的爱情基础上，而双方的爱情也通过性爱来升华。传统的观念是性行为只能发生在拥有“爱情认证”（一般来说是婚姻关系）的男女双方之间，性与爱之间密不可分，双方产生爱情就会产生性欲，而性行为只允许发生在拥有爱情的两个男女之间。","text":"在传统的典型观念中，性欲和爱情相互结合才是最完美的组合，也就是说性爱双方对彼此的性欲是起源于深厚的爱情基础上，而双方的爱情也通过性爱来升华。传统的观念是性行为只能发生在拥有“爱情认证”（一般来说是婚姻关系）的男女双方之间，性与爱之间密不可分，双方产生爱情就会产生性欲，而性行为只允许发生在拥有爱情的两个男女之间。 爱情和性冲动爱情是一对男女基于一定的社会基础和共同的生活理想，在各自内心形成的相互倾慕，并渴望对方成为自己终身伴侣的一种强烈、纯真、专一的感情。性爱、理想和责任是构成爱情的三个基本要素。而性爱把爱情与人世间的其他情感，如亲人之爱、朋友之情或同志之谊明显区别开来，使爱情成为特殊的“情爱”。本质上来说，爱情关系就是性关系，没有性的爱情叫友情（此处性指广义上的性，不局限于法律范围里的性关系，即会让双方产生性生理上愉悦的一系列行为）。 我们常说，爱一个人，始于颜值，陷于才华，忠于人品。始于颜值，指的是对方对你有种吸引力，有关的学者称之为性吸引，表现为一见钟情（不过这需要发生在双方颜值都很高的时候）。生活中大部分的爱情产生于日久生情，通俗点说就是当双方相互了解到一定程度，而产生一种在一起感觉会更加好的想法，这是我们常说的“有感觉”。 我们知道，当男女双方见面或者对彼此有好感时，会出现面红耳赤、心跳加速等现象，这是因为此时身体内的肾上腺素急剧增加。同时大脑会产生性激素，使双方拥有相互靠近的渴望，这时，人们经常把这个美好的感觉成为对对方的好感，我把它称为爱情的“原动力”。这个“原动力”是由于人类作为哺乳类动物而天生拥有的，由身体产生的激素和化学物质传递的强烈的冲动，而这种冲动往往会伴随着性冲动，尤其是男性。在原始人阶段，人类生存环境恶劣，要靠大量的生育来保证种群的延续，因而经过简单的身体条件判别之后，“原动力”很快就可以转化为双方的性行为。于是我们的学者将这个“原动力”起了个名字——“性冲动” 在这，我们可以认为，爱情的产生与性一样，也是人类与生俱来的，没有原始的冲动和体内化学物质的驱动，爱情几乎不能产生（不排除个例）。从生理层面上看，爱与性是密不可分的，是以生理为基础的。 &nbsp; 爱情中的性心理人类学家的研究发现，在相当大比例的部落民社会中根本就没有浪漫爱情这种东西，那里人们的性规范和性观念是有性无情的。……第二种性观念和行为规范源于古希腊，后来在基督教的禁欲主义中得到了进一步的发扬光大。……性与爱关系的第三种行为规范出现于文艺复兴时期，由于人文主义对人的肉体的肯定，爱变得不再是柏拉图式的了。 —— 李银河《性学入门》 在弗洛伊德有关性心理的讨论当中（膜拜大佬），他把人类一切的心理活动和社会行为都涂上性的色彩，。性心理，“是指与男女两性活动中相伴随的个体的一系列性心理现象的总称，是个体对异性魅力所产生的一种主观能动反映。它包括个体在与异性交往中所涉及的性欲望、性感知、性记忆、性想象(性幻想)、性思维、性情感、性自制力、性动机、性气质、性兴趣、性能力、性行为等。它是个心理活动中最为重要的组成部分。”（哇！好复杂。）由此可见，在爱情里面所指的性可不是指单纯的性行为哦！小伙伴们别误解。在爱情当中，男女之间的性心理也是不一样的。 对于男性，通常想的是得到女人更多，会表现为更想亲近女性多一点，会比较接近于性。而女性想的是得到这个男人更多地爱，比较侧重于感情。用进化心理学的角度解释，在群居时期，雄性个体需要寻找合适的雌性去传承它的基因，从而使自身基因得到丰富的组合以便在自然选择中生存，这是自身基因决定的；而雌性个体一年只能生一胎，而且在孕育生命期间，无法自己去寻找食物，她需要找一个在意她，关心她，能给她食物和更好的生存环境。（这也是为什么有些女性对房车钱看重的一个原因）。所以女性在挑选性伴侣方面非常慎重！ 这是生物长期进化到极致的结果，这就是The beauty of life。Nice！ &nbsp; 我们该如何对待性马斯洛理论把需求分成生理需求（Physiological needs）、安全需求（Safety needs）、爱和归属感（Love and belonging）、尊重（Esteem） 和自我实现（Self-actualization）五类，依次由较低层次到较高层次排列。在自我实现需求之后，还有自我超越需求（Self-Transcendence needs），但通常不作为马斯洛需求层次理论中必要的层次，大多数会将自我超越合并至自我实现需求当中。 好吧，这是马斯洛的需求理论，我不太赞同把它放到爱情中。总感觉按马斯洛的理论，将爱情分析得太现实了。 &nbsp; 我觉得爱情中，应该反过来。首先，两个人在一起应该找到自己的自我实现。然后就是在交往的过程中，要互相尊重，找到爱与归属，再然后呢，就是一定要保证安全，在这些都满足的情况下才能去实现生理需求（我这把生理需求特指为性）。 &nbsp; 随着情爱的发展必然导致双方不同程度的性接触，由情爱向性爱的发展是十分自然的规律；而性爱反过来又可增进情爱的深度，使情爱不断发展和升华。性爱使两个人的距离一下就拉近了，情爱到性爱的发展将给人们带来无限的乐趣和生活动力，增进人们的身心健康。 恋爱是人成熟过程中的重要阶段，也是学习爱与性的重要阶段，处理得好，使人的终生幸福得到保障；处理不好，不仅使双方反目为仇，还会给人带来身心的永久创伤。 &nbsp; 国外有人把婚前性接触的程度分为4级：①拥抱接吻；②爱抚上半身；③爱抚生殖器部位；④性交。 其中③是警戒线，决不能突破，（突破了，最后一道防线必破）④是禁区，只要这样就能保护自己。把握这4条很重要。性爱、性接触是广义的概念，包括接吻、拥抱、爱抚等，而决非单指狭义的概念——性交。（好吧，这也是别人的理论） &nbsp; 说重点，我们该如何对待性？首先，我们一定要有的一个概念就是，性是很正常的，就跟人要吃饭睡觉喝水一样的正常。孔子曾云：“食色，性也。”孔子也不回避性。那种避开性来谈爱情的人是伪君子，相反，他们常常充满了对性的某种偏执的渴望，是狂热的性幻想者；反之，只谈性而不谈爱情的人是没有人性的两脚动物。 &nbsp; 性是爱的升华，没有爱的性是不道德的，在爱的不够深时，过早的品尝禁果会将爱扼杀，当两个人真的爱到不能分开时，性会加深两个人的爱，性不光是肉体的，也是精神的。 &nbsp; 如果你无法做出决定，或者很犹豫，那就按马斯洛的金字塔从上往下判断吧。尤其是，安全，安全，安全重要的事说三遍。 &nbsp; 最后以一首诗来结束我的文章吧！ 金缕衣杜秋娘 劝君莫惜金缕衣，劝君惜取少年时。 花开堪折直须折，莫待无花空折枝。 &nbsp; &nbsp; &nbsp; 参考文献： 百度百科：爱情，马斯洛需求理论 知乎问答：**爱情和性冲动有关系吗？性和爱可以分开吗？** 上海社会科学院出版社《性学入门》李银河 吉林文史出版社《男人来自火星，女人来自金星》约翰·格雷 中信出版社《人类简史：从动物到上帝》尤瓦尔·赫拉利","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"https://thinkmoon.cn/tags/杂谈/"}]},{"title":"（超详细）快速搭建一个简易微信小程序后台网站（上）","slug":"（超详细）快速搭建一个简易微信小程序后台网站（上）","date":"2017-11-07T03:21:09.000Z","updated":"2018-11-16T03:19:54.970Z","comments":true,"path":"/8b7a.html","link":"","permalink":"https://thinkmoon.cn/8b7a.html","excerpt":"","text":"本文实践平台：腾讯云（qcloud.com) 首先我们来看看腾讯云官方的解决方案示意图 看懂了吗？看没看懂都没关系我们开始走一遍就好了。大致步骤如下： 购买腾讯云微信小程序解决方案 部署 mysql 实例到云数据库 部署网站到服务器，使网站外网可访问 将网站与数据库连接起来 配置 SSL 证书，使网站可 https 访问 构建负载均衡，使用户可以通过负载均衡的方式访问 制作服务器镜像，将可成功访问的服务器复制 新建 N（N&gt;0)台服务器，将服务器重装为自定义镜像 test 详细如下： 购买腾讯云微信小程序解决方案 进入腾讯云官网（https://www.qcloud.com) 选择解决方案&gt;微信小程序解决方案 就选择 3 元新购活动吧，我已经购买过了，就不再这儿演示怎么购买了。 购买成功之后腾讯云会下发资源。 succeed：此过程成功标志为资源下发成功，以及收到如下站内信。 部署 mysql 实例到云数据库 根据上图所提供的地址，使用数据库连接工具（如 Navicat）连接数据库进行数据传输。_ 数据传输_ succeed：此过程的成功标志为，在远程数据库中可查看到相应的表和数据 部署网站到服务器，使网站外网可访问 首先我们对腾讯云下发的 demo 服务器进行重装系统（精神洁癖，不重装不舒服）_ _注:不重装的话，网站的根目录在/data/release/php_weapp_demo_ &gt; _ &gt; &gt; &gt; &gt; 我这儿装的是 centOS 6.5。版本不同可能会对应的软件安装方式不同。 2.为服务器安装 apache_ #安装 apacheroot@localhost ~]# yum -y install httpd 开机自启动[root@localhost ~]# chkconfig httpd on 启动 httpd 服务[root@localhost ~]# service httpd start 安装 apache 一些扩展root@localhost ~]# yum -y install httpd-manual mod_ssl mod_perl mod_auth_mysql succeed：此步骤成功标志为访问http://localhost 或 http://本机IP ，应该会看到 Apache 的测试页面 这里需要注意 iptables 的设置哦。 安装 php[root@localhost ~]# yum -y install php php-mysql安装 php 常用扩展[root@localhost ~]# yum search php[root@localhost ~]# yum -y install gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imap ### 重启 httpd 服务，这一步很重要[root@localhost ~]# service httpd restart然后，我们提供 php 页面，测试[root@localhost ~]# cd /var/www/html/[root@localhost html]# vi index.php &lt;?php phpinfo();&lt;php&gt; succeed：此步骤成功标志为,出现传说中的 phpinfo()界面 后记：不知不觉，已经写了有这么多了！本来想一篇写完的，看了一下可能篇幅实在是太长了。先这样吧。敬请期待下一篇吧！ 到了这步的时候，你只需要把网站源代码（例如博客，或者自己开发的网站）上传到目录/var/www/html/就好了。windows 操作系统可以利用工具（如 winscp）上传。觉得有用的就点赞收藏一下吧。谢谢大家的支持。","categories":[{"name":"技术","slug":"技术","permalink":"https://thinkmoon.cn/categories/技术/"}],"tags":[{"name":"微信","slug":"微信","permalink":"https://thinkmoon.cn/tags/微信/"}]},{"title":"小书匠图床及云资源的配置","slug":"小书匠图床及云资源的配置","date":"2017-11-02T05:15:42.000Z","updated":"2018-09-09T12:09:18.394Z","comments":true,"path":"/cd85.html","link":"","permalink":"https://thinkmoon.cn/cd85.html","excerpt":"欢迎使用 {小书匠}(xiaoshujiang)编辑器，您可以通过==设置==里的修改模板来改变新建文章的内容。","text":"欢迎使用 {小书匠}(xiaoshujiang)编辑器，您可以通过==设置==里的修改模板来改变新建文章的内容。 首先，在这里我已经默认你知道了什么是markdown文件，并且已经知道了它的优势。不懂请点这儿&lt;&gt;那么平常，你用什么写md文档呢？sublime？notepad？为知笔记？有道云笔记? MarkDownPad2?其实都可以，你喜欢就好。我个人比较喜欢用小书匠 推荐理由1.可以使用xlmrpc同步文章到我的博客(有道，为知会改变代码格式)2.可以在预览复制到公众号3.可以同步文章到我的github page4.支持跨平台(windows，mac，包括linux),同时还有网页版5.国产(一般有什么比较好用的国产软件，我都非常支持的) 更多介绍访问官网本来想把文章名叫《推荐一个markdown软件(神器级的)》，后来还是怕被吐槽，你这小子怎么整天推荐软件的。不过，说真，这个软件是我用过最好的markdown编辑器了，而且还免费，还能同步为知，有道，码云。不要觉得我用的软件少，其实那些我都用过，还开过会员，最后还是选择了小书匠。 小书匠官网(http://soft.xiaoshujiang.com/) 下载地址(https://github.com/suziwen/markdownxiaoshujiang/releases/tag/v5.1.0) 不要问我为啥是在github上面下载，我也不知道，但这个链接下载的绝对是正版） 软件界面 巨多的主题 我大约目测了一下有20-30个主题 部分主题截图 优雅紫 土豪金 淡雅蓝 性冷淡(我起的) 可爱粉 这么多的主题有一个极大的好处，就是，无论你是科技宅，萝莉控，痴汉，性冷淡，低调的沙皇玩家，还是傲娇的小公举，总能找到你想要的配色主题。 小书匠图床配置 点击左上小书匠&gt;绑定&gt;图床 1.七牛云图床配置 登录七牛云存储 新建存储空间blog 新建密钥 打开，小书匠&gt;绑定&gt;图床服务&gt;七牛云存储，填入对应的信息 这儿有两个地方需要注意1，==上传入口一定要选你新建存储空间的入口 #ff5555==。2，==图片URL前缀可以在存储空间里面查看到 #ff5555== 成功界面 配置github数据存储 打开绑定&gt;数据存储&gt;选择github 点击申请tokens&gt;登录你的github账号 然后创建一个repository，==记得一定要勾选Initialize 这个选项 #ff5555== 选择==Generate token====一定要勾选public_repo权限 #ff5555== 将生成的token复制 回到刚刚的小书匠界面，填入信息 然后勾选对应的选项就OK了 配置github图床服务 如上，图片路径选择默认即可，==而其实就算你不配置，点击另存为github上，还是可以同步的，所以这个配不配置都无所谓 #ff5555==我为了加快访问速度，所以把图片放在七牛云上。 last but not least 祝大家平安夜，圣诞节快乐","categories":[{"name":"软件推荐","slug":"软件推荐","permalink":"https://thinkmoon.cn/categories/软件推荐/"}],"tags":[{"name":"笔记软件推荐","slug":"笔记软件推荐","permalink":"https://thinkmoon.cn/tags/笔记软件推荐/"}]},{"title":"如何从实验室唤醒在宿舍的关机状态下的电脑","slug":"如何从实验室唤醒在宿舍的关机状态下的电脑","date":"2017-10-23T05:29:43.000Z","updated":"2018-09-09T12:09:18.406Z","comments":true,"path":"/dc85.html","link":"","permalink":"https://thinkmoon.cn/dc85.html","excerpt":"如果你要常去实验室，机房。而又嫌带着笔记本麻烦。亦或者是台式电脑，不方便携带。你可能会想到远程桌面是吧？那么如果你的电脑处于关机状态呢？那么我想你可能会喜欢这篇文章。","text":"如果你要常去实验室，机房。而又嫌带着笔记本麻烦。亦或者是台式电脑，不方便携带。你可能会想到远程桌面是吧？那么如果你的电脑处于关机状态呢？那么我想你可能会喜欢这篇文章。 如何从实验室唤醒在宿舍的关机状态下的电脑 本文适合有一定基础的同学阅读，如果你感觉看不懂或者有些名词不理解，可以先收藏起来，待到日后理解之时再来阅读。 首先我们来了解一下WOL Wake-on-LAN (WoL) 网络唤醒（WoL）是以太网或令牌环 计算机网络标准，允许计算机通过网络消息打开或唤醒。 消息通常通过在连接到相同局域网（诸如智能电话）的设备上执行的程序发送到目标计算机。也可以通过使用子网定向广播或WOL网关服务来从另一个网络发起消息。等效术语包括在网络唤醒，远程唤醒，电源通过LAN，通过LAN上电，通过LAN恢复，恢复局域网和唤醒局域网。如果正在唤醒的电脑正在通过Wi-Fi进行通信，则称为补充标准必须使用无线LAN唤醒（WoWLAN）。 通俗点，就是利用这门技术，你再局域网内，可以通过一台设备来唤醒一台处于关机状态的设备。 硬件支持在计算机的主板和网络接口（固件）上实现了局域网唤醒支持，因此不依赖于在硬件上运行的操作系统。某些操作系统可以通过NIC驱动程序来控制LAN唤醒行为。对于较旧的主板，如果网络接口是插卡而不是集成到主板上，则可能需要通过附加电缆将该卡连接到主板。支持LAN唤醒的嵌入式以太网控制器的主板不需要电缆。电源必须符合ATX 2.01规范。 额，说人话就是现在的大部分设备都是支持网络唤醒的，而且与你使用的是什么操作系统无关，不过与你的驱动程序却有关，这点很难解释。 工作原理以太网连接，包括家庭和工作网络，无线数据网络和互联网本身，都是基于计算机之间发送的帧。网络唤醒（“WOL”）使用专门设计的称为魔术包的框架实现，该框架发送到网络中的所有计算机，其中包括要唤醒的计算机。魔术包包含目标计算机的MAC地址，每个网络接口卡中内置的识别号码（“NIC”）或计算机中的其他以太网设备，使其能够在网络上被唯一地识别和寻址。关闭或关闭能够启用LAN唤醒功能的计算机将包含能够在系统关闭电源时以低功耗模式“收听”传入数据包的网络设备。如果接收到指向设备的MAC地址的魔术包，则NIC会通知计算机的电源或主板以启动系统唤醒，其方式与按下电源按钮的方式相同。 魔术包在数据链路层（OSI模型中的第2层）上发送，并且在发送时，使用网络广播地址广播给给定网络上的所有连接的设备; IP地址（OSI模型中的第3层）不被使用。 这是一个常见的误解，因为Wake-on-LAN建立在广播技术上，它只能在当前的网络子网内使用。虽然这是一般情况，但有一些例外，网络唤醒可以在实际中运行在任何网络上，适当的配置和硬件，包括跨Internet的远程唤醒。 为了使局域网唤醒工作，网络接口的部分需要保持打开状态。这消耗了少量的待机功率，远低于正常工作电源。链路速度通常降低到尽可能低的速度，以免浪费电力（例如，千兆以太网网卡只保留10 Mbit / s链路）。在不需要时禁用LAN唤醒功能，可以在关闭但仍插入电源插座的计算机上轻松降低功耗。 说人话就是，你在打开了主机的远程唤醒功能后，对主机按下电源键关机的时候，他会让网卡设备仍处于供电状态，这会比不开网络唤醒要耗电些，实际上当你关机后再断电，如果你没有再开机，你的设备就不能被网络唤醒。而它唤醒的目标是根据mac地址来区分的，当这台设备收到唤醒数据包时，网卡设备会通知电源，主板开始工作，然后就等同与开机了。 筛选重点 硬件：主板，电源，网卡设备。 软件：网卡驱动 刚需：供电，接入网络（并不需要具备有网的状态）。 唤醒：唤醒数据包 好啦，我们筛选出重点之后，接下来就知道怎么入手啦，那就让我们开始吧！ 1.对于主板 主板的操作是，我们需要设置主板能够被网卡设备所唤醒，这样才能正常地进入操作系统。要设置主板，那当然是要bios啦。 进入BIOS设置，打开电脑主板的网络唤醒功能，一般情况是WAKE，LAN之类的，然后设置其值为enable；（需主板支持，现在大部分的主板都是支持的） 2.对于网卡和电源 打开系统设置，设备管理器&gt;网络适配器&gt;找到你的网卡设备，双击&gt;进入电源管理， 设备管理器 取消勾选&lt;允许计算机关闭此设备以节约电源&gt;的作用就是，让你的电脑关机之后网卡设备仍处于供电状态。 勾选&lt;允许此设备唤醒计算机&gt;的目的就是，让你的网卡收到数据包后可以激活电源供电。电源管理 3.对于供电和接入网络 这个。。。。。插好电源，插好网线即可 4.对于网络唤醒数据包 其实网络唤醒用啥方式并不重要，因为实际上都是对特定mac设备发送网络唤醒包 下载一个网络唤醒的软件， 使用路由器发网络唤醒包（我就是用这个） 5.对于网卡驱动 win7，win8都是直接默认网卡驱动就可以了的，但是win10却是需要自己下载一个驱动安装的。 对于win7，win8，网上好多人说要关闭快速启动，但是在我看来，这两点貌似毫无干系啊。不过我没试过win7，也不好发表意见，既然他们都说要关闭快速启动，那就说一下如何关闭快速启动吧。 控制面板&gt;硬件和声音&gt;电源选项&gt;选择电源按钮功能 选择电源按钮 更改当前不可用的设置&gt;取消勾选快速启动 取消勾选快速启动 对于win10，我的台式机就是win10的，但是搞这个网络唤醒折腾了好久。不过好在发现了这个帖子。原文链接https://www.reddit.com/r/Windows10/comments/3f73sz/psaif_windows_10_killed_your_wol_functionality_or/ 原文是英文的，如果不想看英文，我大致翻译一下。楼主说，他遇到win10无法网络唤醒的问题，然后他研究了一下驱动和网卡底层方面的逻辑，然后得出来，是驱动的问题，然后他把驱动用技巧装回了win7的，成功唤醒。不过大部分人采用的是一楼的回复解决方案。 原文截图： 解决方案 他说的是realtek官方已经更新了驱动，如果你在这个链接，下载win10的网卡驱动，就可以网络唤醒了http://www.realtek.com.tw/Downloads/downloadsView.aspx?Langid=1&amp;PNid=13&amp;PFid=5&amp;Level=5&amp;Conn=4&amp;DownTypeID=3&amp;GetDown=false#1 end：我的唤醒流程 被唤醒主机：宿舍win10 台式 唤醒设备：海蜘蛛路由器 操作主机：实验室win7 台式 1.在实验室，先连上宿舍我的路由器局域网下的路由器（额，我是用路由器搭了一个vpn服务器的，其实可以跳过这步） 2.登入我的路由器管理员网站，然后打开网络工具&gt;网络唤醒 网络唤醒 3.唤醒之后，刷新列表就会发现，多了一台设备在连接局域网了，然后使用mstsc远程桌面，就可以控制宿舍的电脑了。有没有感觉高大上？ 没有截图&gt; 路由器，和vpn都是非必需的，你也可以直接在局域网内用客户端唤醒的，还有就是如果你有域名，然后能成功访问也是可以广域网唤醒的。","categories":[{"name":"技术","slug":"技术","permalink":"https://thinkmoon.cn/categories/技术/"}],"tags":[{"name":"黑魔法","slug":"黑魔法","permalink":"https://thinkmoon.cn/tags/黑魔法/"}]},{"title":"使用轻量级php博客(gitblog)搭建个人博客-可生成静态网站","slug":"使用gitblog搭建个人博客（待改","date":"2017-10-22T03:21:58.000Z","updated":"2018-09-13T09:08:04.074Z","comments":true,"path":"/78fa.html","link":"","permalink":"https://thinkmoon.cn/78fa.html","excerpt":"一说到搭建个人博客，大家一定是第一时间想到WordPress了吧？其实使用WordPress非常的方便，实用性也非常高,如果不知如何搭建wordpress博客，可以去隔壁Benny的学习日记(公众号)看教程。但是如果你只是想要一个简洁的博客文章页，那么你可以试着用一下gitblog。","text":"一说到搭建个人博客，大家一定是第一时间想到WordPress了吧？其实使用WordPress非常的方便，实用性也非常高,如果不知如何搭建wordpress博客，可以去隔壁Benny的学习日记(公众号)看教程。但是如果你只是想要一个简洁的博客文章页，那么你可以试着用一下gitblog。 什么是markdown(md)文件 markdown是一种轻量级的标记语言，它允许人们使用易读易写的纯文本格式编写文档。唔，通俗点就跟HTML一样。约定一些特定的符号来决定它的显示形式。它相对于HTML的优势就是，简单，使作者将关注重点放在内容上。相信大家也经历过调CSS的绝望吧？ 它的语法极其简单,语法内容:我的简书像我这篇文章就是md文件复制的。 了解gitblog 网址http://www.gitblog.cn github地址https://github.com/jockchou/gitblog Gitblog是一个简单易用的Markdown博客系统，它不需要数据库，没有管理后台功能，更新博客只需要添加你写好的Markdown文件即可。 它摆脱了在线编辑器排版困难，无法实时预览的缺点，一切都交给Markdown来完成，一篇博客就是一个Markdown文件。 同时也支持评论，代码高亮，数学公式，页面PV统计等常用功能。 Gitblog提供了不同的主题样式，你可以根据自己的喜好配置，如果你想自己制作博客主题，也是非常容易的。 Gitblog还支持整站静态导出，你完全可以导出整站静态网页部署到Github Pages。 gitblog与WordPress的区别 数据库，gitblog只有文件，没有数据库。也就是说它不需数据库，这样做的优点是简洁，适合与那些网站内容修改频率不高博客。系统更轻量级，移植性高，还可以到全站导出为静态文件。然后把它们部署到类似于githubpage平台。 框架，gitblog是使用codeigniterhttp://codeigniter.org.cn框架(一个小型的轻量级php框架)。WordPress是完全使用自己的设计思想，不依赖于主流框架，如果你了解框架的思想，如果你想好好学习，和修改开发博客源码，你可以选择使用前者。当然对自己足够自信，你可以去研究WordPress源码。 完善性，如果你只是想搭个稳定完善的个人博客，那么不建议你使用gitblog。如果你自己的diy，探索精神比较强，或者你是个简洁控，你可以试试gitblog。 如何配置安装gitblog 去github下载源码 安装Apache+php环境 解压到网站根目录 修改配置文件conf.yaml,文件说明[https://github.com/jockchou/gitblogdoc/blob/master/posts/gitblog/config.md](https://github.com/jockchou/gitblogdoc/blob/master/posts/gitblog/config.md) url: / #域名地址title: thinkmoon #站点名称 subtitle: #副标题 theme: quest #主题名 enableCache: false #是否开启缓存 highlight: true #是否开启代码高亮 mathjax: false #数学公式支持 katex: false #？ youyan: #有言ID baiduAnalytics: #百度统计ID keywords: thinkmoon #网站关键字 description: &amp;gt; thinkmoon #网站描述 version: 2.2 author: name: 醉月思 #作者 email: tim@thinkmoon.cn #邮箱 github: thinkmoon #github地址 weibo: your-weibo #微博地址 avatar: blog: recentSize: 5 pageSize: 6 pageBarSize: 5 allBlogsForPage: false text: title: 介绍 intro: &amp;gt; 本博客使用Gitblog搭建, wordpress博客请访问https://thinkmoonmagic.wordpress.com 你可能需要修改的配置参数： url: 修改成你的域名，http://yourdomain.com，注意最后没有杠。title： 修改成你的博客标题subtitle： 修改成你的副标题duoshuo： GitBlog采用多说评论框，你需要申请多说账号，并在这里填写你的多说IDbaiduAnalytics： GitBlog采用百度统计，你需要申请百度统计账号，在这里填写你的统计Keyauthor：修改为你个人的信息即可如果你不需要评论和统计功能，删除duoshuo和baiduAnalytics这两荐即可。其他信息，可根据浏览博客页面的效果进行修改调整。 5.访问，OK了 编写一篇博客 在gitblog里面，一篇文章就是markdown文件。所有的文章都在/blog目录下，你把你写好的md文件放到这个文件夹就可以了 博客文章的属性，包括作者，题目，标签，分类目录等，由md文件里面的注释决定。注释规范 例如use_gitblog_setup_blog.md 上传到blog文件夹之后，主页界面刷新效果 文章页效果 这儿需注意，gitblog默认是开启网站缓存的，如果你的网站更新不够频繁，你可以不用改配置，在配置conf.yaml里面修改。 同步wp博客到gitblog 首先从wordpress后台中导出xml数据 重命名为wordpress.xml 使用PHP 网站根目录/index.php wp2gb 命令同步 例如: php /var/www/html/index.php wp2gb 运行成功会提示finished！运行后的主页俯视图 完成gitblog的搭建好啦，大功告成啦，一个gitblog博客网站就已经搭建成功了www.thinkmoon.cn","categories":[{"name":"技术","slug":"技术","permalink":"https://thinkmoon.cn/categories/技术/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://thinkmoon.cn/tags/博客/"},{"name":"gitblog","slug":"gitblog","permalink":"https://thinkmoon.cn/tags/gitblog/"}]},{"title":"原项目代码分析","slug":"原项目代码分析(智能交通灯)","date":"2017-10-16T00:28:27.000Z","updated":"2018-09-09T12:09:18.406Z","comments":true,"path":"/836e.html","link":"","permalink":"https://thinkmoon.cn/836e.html","excerpt":"","text":"原项目代码类图 各类文件解析（按难度排序） Point (坐标类，使用经度，维度用来表示一个点)Point.h # pragma once class Point { public: Point(double longitude, double latitdue); bool operator == (Point &amp; point); private: double longitude; //经度 double latitude; //纬度 }; Road(道路类，使用两个点来表示一条道路)Road.h # pragma once# include “stdafx.h”# include “Point.h”# include “Vehicle.h”# include “TrafficLight.h”# include “BitMatrix.h”# define R 6378 //地球的平均半径 # define PI 3.14# define LANNE_AMOUNT 3 //每条道路的车道数量 # define MIN_VEHICLE 10 //初始状态每条道路的最少车辆 # define VEHICLE_SIZE 70 class Vehicle; class TrafficLight; class Road { public: Road(double longitude1, double latitude1, double longitude2, double latitude2): point1(longitude1, latitude1), point2(longitude2, latitude2) { length = R 2 asin(sqrt(pow(sin((latitude1 / 180 PI - latitude2 / 180 PI) / 2), 2) + cos(latitude1 / 180 PI) cos(latitude2 / 180 PI) pow(sin((longitude1 / 180 PI - longitude2 / 180 PI) / 2), 2))); //计算道路长度 } bool operator == (Road &amp; road); //用于判断两条道路是否相连 double countVehicleDensity(void); //计算行车密度， 行车密度 = 车辆数 / (道路长度(km) 车道数） double countCrowdExtent(void); //计算道路拥挤度 double returnLength(void); //返回道路长度 bool enterVehicle(void); //当前道路是否能进车 void updateVehicle(vector &lt; Road &gt; &amp; road); //更新当前道路的车辆 void creatVehicle(int roadSize, int totalRoadSize, BitMatrix &amp; roadBitMatrix, vector &lt; Road &gt; &amp; road); //为该道路生成车辆 void enterVehicle(Vehicle &amp; vehicle); //进入车辆 void updateTrafficLight(void); //更新当前道路的交通灯 / 计算拥挤度的公式: crowdExtent = 0.15 exp(-0.0322 vehicleDensity) - 0.15 (vehicleDensity &lt;= 45.5) crowdExtent = 0.111 vehicleDensity - 0.0152 (vehicleDensity &gt; 45.5) / vector &lt; int &gt; adjoin; //存储相连的道路编号 是否改成private? private: Point point1, point2; //道路的两个端点的经纬度 double length, vehicleDensity, crowdExtent; //length为道路的长度,vehicleDensity为行车密度,crowdExtent为道路拥挤度 list &lt; Vehicle &gt; vehicle; //当前道路的车辆表 TrafficLight trafficLight; //交通灯用于控制车辆进入该道路 int vehicleSize; //当前道路车辆数 }; 分析与思考：存储相连采用向量方式？这样真的好吗？一条条道路判断相等再连接？","categories":[{"name":"日记","slug":"日记","permalink":"https://thinkmoon.cn/categories/日记/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://thinkmoon.cn/tags/随笔/"}]},{"title":"写一个图类","slug":"写一个图类","date":"2017-10-15T00:28:27.000Z","updated":"2018-09-09T12:09:18.414Z","comments":true,"path":"/e75e.html","link":"","permalink":"https://thinkmoon.cn/e75e.html","excerpt":"","text":"说到交通网路的模拟化表示，那就不得不用到数据结构中的图。想必这应该是最方便形象的表示方法了把。图的概念 图是由顶点集合及顶点之间关系的集合组成的一种数据结构，Graph = （V，E）。其中顶点集合V = { x | x ∈ 某个数据对象集}是个有穷非空集合。E = {&lt; x , y &gt; | x , y ∈ V &amp;&amp; Path( x , y )} ，即边集。 我所知的图的存储结构邻接矩阵表示邻接矩阵的表示，首先将所有的顶点信息组成一个表。然后利用一个矩阵来表示各顶点之间的相邻关系，称之为邻接矩阵。邻接表表示在第i行的单链表中，各节点（或称边节点）分别存放与同一个顶点Vi关联的各条边。各个节点配有其标识（及对应的顶点）和权值（若为有权图）以及指向另一个边节点的指针。邻接多重表表示邻接多重表的表示，主要一处理图的边为主（为什么会有这个需求？在什么情况会用到？），要求每条边处理一次的实际应用中特别有用（比如？）。它的主要思想是把多重表结构引入到图的邻接表中，就有点像把边作为研究的基本单位，用一个多重表节点来表示一条边。十字链表表示此为百度词条：十字链表（Orthogonal List)是有向图的另一种链式存储结构。该结构可以看成是将有向图的邻接表和逆邻接表结合起来得到的。用十字链表来存储有向图，可以达到高效的存取效果。同时，代码的可读性也会得到提升。 我该选什么存储结构 首先，交通道路网络是双向的，所以我们可以将其视为无向图; 其次在一座城市的交通网络下，道路E 与路口 n的关系是 E &lt;&lt; n^2，而且道路是会出现两点之间多条路的情况（即多重图）所以我舍弃第一种方法; 后面两种表示方式其实我也是一知半解，我有种感觉，如果在交通道路的分层模型下，可能第三种方式要更具优势，但是目前还想不了那么远。所以我暂时选用第二种方式，用邻接表表示。我的实现代码Graph_lnk.h // V1.0.1# pragma once # include &lt; iostream &gt; using namespace std; const int DefaultMaxVertices = 500; //最大顶点数 auto memory_error = { cerr &lt;&lt; function &lt;&lt; “申请“ &lt;&lt; aim.c_str() &lt;&lt; “内存分配错误“ &lt;&lt; endl; exit(1); }; //内存申请错误的提示lamba表达式 struct Edge { int dest; //标记关系节点 double weight; //权值 Edge link; //指向边的指针 Edge(int num, double weight): dest(num), weight(weight), link(nullptr) {} }; struct Vertex { string data; //道路口的信息，暂时用string Edge adj; //指向边的指针 Vertex(string data = “点“): data(data), adj(nullptr) {} }; class Graph_lnk { friend ostream &amp; operator &lt;&lt; (ostream &amp; in , Graph_lnk &amp; G); //运算符重载，图的输出 public: Graph_lnk(int sv = DefaultMaxVertices); ~Graph_lnk(); int NumberOfVertices() { return numVertices; } //返回当前顶点数 int NumberOfEdges() { return numEdges; } //返回当前边数 Vertex getVertex(int v) { return NodeTable[v]; } //返回该节点 string getValue(int v) { return NodeTable - &gt; data; } //返回道路信息 bool insertEdge(int v1, int v2, double weight); //插入一条边 bool insertVertex(string data); //插入一个路口 protected: int numVertices; //当前顶点数 int numEdges; //当前边数 private: Vertex NodeTable; }; ostream &amp; operator &lt;&lt; (ostream &amp; out, Graph_lnk &amp; G) { out &lt;&lt; “——————————————–” &lt;&lt; endl; out &lt;&lt; “当前顶点数“ &lt;&lt; G.NumberOfVertices() &lt;&lt; “,边数“ &lt;&lt; G.NumberOfEdges() &lt;&lt; endl; Edge p = nullptr; for (int i = 0; i &lt; G.NumberOfVertices(); i++) { Vertex v = G.getVertex(i); out &lt;&lt; v.data.c_str() &lt;&lt; “ “; p = v.adj; while (p != nullptr) { out &lt;&lt; “-&gt;{“ &lt;&lt; p - &gt; dest &lt;&lt; “:” &lt;&lt; p - &gt; weight &lt;&lt; “}”; p = p - &gt; link; } out &lt;&lt; endl; } out &lt;&lt; “——————————————–” &lt;&lt; endl; return out; }; Graph_lnk::Graph_lnk(int sv) { numVertices = sv; numEdges = 0; NodeTable = new Vertex[DefaultMaxVertices]; if (NodeTable == nullptr) { memory_error(func, “NodeTable”); } for (int i = 0; i &lt; sv; i++) NodeTable[i].adj = nullptr; }; bool Graph_lnk::insertEdge(int v1, int v2, double weight) { if (v1 &gt;= 0 &amp;&amp; v1 &lt; numVertices &amp;&amp; v2 &gt;= 0 &amp;&amp; v2 &lt; numVertices &amp;&amp; v1 != v2) { Edge q = nullptr, p = nullptr; if (NodeTable[v1].adj != nullptr) { p = NodeTable[v1].adj; q = p - &gt; link; while (q != nullptr) { p = q; q = p - &gt; link; } q = new Edge(v2, weight); p - &gt; link = q; } else { NodeTable[v1].adj = new Edge(v2, weight); } if (NodeTable[v2].adj != nullptr) { p = NodeTable[v2].adj; q = p - &gt; link; while (q != nullptr) { p = q; q = p - &gt; link; } q = new Edge(v1, weight); p - &gt; link = q; } else { NodeTable[v2].adj = new Edge(v1, weight); } numEdges++; } return 0; } bool Graph_lnk::insertVertex(string data) { if (numVertices == DefaultMaxVertices) return false; else { NodeTable[numVertices].data = data; NodeTable[numVertices].adj = nullptr; numVertices++; } return true; } Graph_lnk::~Graph_lnk() { delete[] NodeTable; }; 分析与理由在交通道路网络图的构建中，一定需要的两个函数insertEdge();和insertVertex(); 我使用两个主要的数据结构，Edge（表示边），Vertex（表示点）。用它们的集合来表示整个图，这样做可以有效的利用空间？（但是还是申请了VerTex（500）） 缺陷与不足不管你构建含多少个点的图，都需要申请固定的空间，只有当点小于而且越接近于500时空间利用率才最高。插入边时，需要在两个点做增加，但是好像对于实际情况这样做并没有好处？。。。。 问题与思考作为交通网络图，是否还需要拓展一些别的功能？在储存的过程中，是否用bit矩阵来存储数据？能不能在插入的过程中只新增一个点上的边？或者直接以边为基本研究单位，来构建图类？心得与感悟本来以为写一个图类，会是一件比较容易的事，没想到却也花了这么久，是考虑的太多？还是基础不牢？刚开始想用模板类来表示，这样在后期数据类型拓展时比较方便，没想到却是发现一堆错误，还解决不了，最后要重新来过。基础还是要牢固才可以，现在写的东西自己都感觉境界不够，没有别人那种精妙绝伦的感觉。平常有时间多沉下心来学习，切记好高骛远，绕了一圈最后发现自己什么都不行。。。。。","categories":[{"name":"日记","slug":"日记","permalink":"https://thinkmoon.cn/categories/日记/"}],"tags":[{"name":"Traffic-Network-Model","slug":"Traffic-Network-Model","permalink":"https://thinkmoon.cn/tags/Traffic-Network-Model/"}]},{"title":"C++11新特性之auto的妙用","slug":"C-11新特性","date":"2017-04-27T00:18:14.000Z","updated":"2018-09-13T11:27:20.087Z","comments":true,"path":"/9305.html","link":"","permalink":"https://thinkmoon.cn/9305.html","excerpt":"","text":"C++11引入了auto和decltype关键字实现类型推导，通过这两个关键字不仅能方便地获得复杂的类型，还能简化书写，提高编码效率。下面说一下C++中的auto 旧标准auto其实并不是一个新的关键字，在旧的标准C++98/03中，它代表着“具有自动存储周期的局部变量”。啥意思呢？就是我们平常所说的变量，他与static相对。就是说所有非static类型的都是“具有自动存储期的”。也就是说在旧的标准下。autoint i =3;//等价于int i=3; 新标准在C++11中，auto作为一个新的类型指示符（如int，double）来指示编译器的，但是auto申明的变量的类型必须由编译器在编译时期推导出来，也称类型推导。这种类型推导不是C++所独有的，还有很多具备这种能力的语言（如Python，Javascript）。我们先来看一段Python代码name =\"thinkmoon\"print\"hello,\"+ name 在这里的name是不需要定义类型的，因为这个类型很容易被推导为字符串性，如过要想在C++中实现这种效果，我们可以这样。#include&lt;iostream&gt;int main()&#123; auto name =\"thinkmoon\"; std::cout &lt;&lt;\"hello,\"&lt;&lt; name &lt;&lt; std::endl; return0;&#125; 效果是一样的，是不是觉得写起来特别的方便呢？ 但是需要注意的是，在C++中这种静态类型推导是发生在编译期间的。而像Python这种动态类型推导却是发生在运行期间的。 auto的基本用法#include&lt;iostream&gt;usingnamespace std;int main()&#123;auto x =5; cout &lt;&lt; x &lt;&lt; endl;//x被推导为intauto p =newauto(1); cout &lt;&lt;\"*\"&lt;&lt; p &lt;&lt;\"=\"&lt;&lt;*p &lt;&lt; endl;//p被推导为int *constauto*v =&amp;x, u =6; cout &lt;&lt;\"*\"&lt;&lt; v &lt;&lt;\"=\"&lt;&lt;*v &lt;&lt;\"\\n u=\"&lt;&lt; u &lt;&lt; endl;//v被推导为const int *，u被推导const int&#125; 对于最后一个类型推导有几个需要注意 v被推导为const int *而这里auto代替int，但是u等于6还是要写的，否则编译器会报错。 u的等号后面只能写整型的变量，否则会报错，因为不能让编译器产生具有二义性的推断。 其实我们学习的时候可以把auto理解为占位符，它只是占着一个位置并不做其它的事情，由编译器将其类型推导出来再用对应的类型去运行，所以这个时候auto的类型推导是不能让编译器产生二义性的。 auto的推导规则int x =0;auto* a =&amp;x;//auto推导为int，auto b =&amp;x;//auto推导为int *，即使不申明为指针也能推断为指针auto&amp; c = x;//auto推导为int，等价于int auto d = c;//auto推导为int，auto会抛弃右值的引用类型const auto e = x;//e是const int类型，auto f = e;//f是int型constauto&amp;g = x;//g是const int &amp; auto &amp; h = g; //h是const int &amp; 总结： 当不申明为引用或者指针时，auto的推导规则会抛弃对应右值的cv限定符（cv-qualifier，const，volatile限定符的总称）。 当申明为引用或者指针时，auto推导规则会保留右值的cv属性。 auto的限制 auto s 错误原因:s没有明确的类型，auto无法推断。 void fun(auto a=1){….} 错误原因：auto类型推导不能用作函数参数。 auto不能用于非静态成员函数 struct Foo&#123; auto var_1=0;//错误，auto不能用于非静态成员函数 static const auto var_2=0;//OK，var_2为static const int&#125; 4. auto无法定义数组int main()&#123; int arr[10]=&#123;0&#125;; auto aa = arr; //OK,aa为int * auto bb[10]=arr;//error,auto无法定义数组&#125; 5. auto无法推导出模板参数Bar&lt;int&gt; bar;Bar&lt;auto&gt; bb = bar;//error,auto无法推导出模板参数 auto的优势既然auto的功能特性这么方便，那么它的优势在哪？或者说，我们什么时候使用它能达到神效呢？ 遍历vector 这是一个简单的遍历。vector&lt;int&gt; vs;for(auto i = vs.begin(); i &lt; vs.end(); i++){......}其实还可以更简单for(auto var : vs){.......} 待补充。。。。。。。嘿嘿！","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://thinkmoon.cn/tags/C/"},{"name":"auto新特性","slug":"auto新特性","permalink":"https://thinkmoon.cn/tags/auto新特性/"}]},{"title":"QQ机器人起航篇（一）","slug":"QQ机器人启航篇","date":"2017-04-15T00:14:01.000Z","updated":"2018-09-09T12:09:18.390Z","comments":true,"path":"/c5d6.html","link":"","permalink":"https://thinkmoon.cn/c5d6.html","excerpt":"","text":"一听说QQ机器人是不是感觉有点高大上？感觉离自己有点远？不过事实就是如果你想创建，或者说拥有一个QQ机器人确实一件非常容易的事情。 创建方法 1.腾讯QQ自带的QQ小冰 2.利用第三方框架在自己电脑或者windows云主机上挂一个机器人（mypcqq，酷Q等） ----------这个方法的好处就是可拓展性强，可二次开发，所以我在以后主要介绍这种方法 框架一（mypcQQ） 从功能上看这个框架功能略显强大（拥有撤回检测，气泡设置，卡片消息），但是缺点也很明显那就是不稳定，页面不太友好。 官网截图：（www.mypcqq.cc/） 软件运行截图 框架二（酷Q机器人） 官网截图：（http://cqp.cc/） 软件运行截图 因为mypcQQ我认为实在是太不稳定了，所以我在以后的QQ机器人二次开发中着重介绍酷Q机器人的二次开发。 酷Q机器人C++SDK解析 1，酷Q机器人工作原理 先是QQ服务器端发送数据给酷Q客户端，酷Q根据数据判断是否触发了事件，以及触发了哪类事件，不同类事件都有一个默认的type，然后酷Q会根据这个type在JSON中查找所有具有该type的event项目，并将这些项目按照priority从小到大的顺序排列，然后按照顺序依次向你的DLL发送指令，指令的内容就是每个event项目所规定的function值，以及该事件的type所决定的必要参数。在你的DLL内部，会先查找指令中指定的function，找到[函数名]正确的函数，然后按[参数列表]规定的顺序代入参数，执行你写的代码。[参数列表]只规定了参数的数目、顺序和类型，而参数变量名称酷Q是不管的，也就是说只要数目顺序类型正确，参数变量的名称你可以自己修改。比如fromQQ你可以把它改成TheQNumberItFrom，或者abc，都可以，只要你自己方便就行。最后，如何命令酷Q执行你需要的动作呢？你需要调用头文件cqp.h中声明的函数。这些函数只进行了声明，其定义在酷Q加载后会在其它DLL中定义，所以VS可能会提示这些函数未定义，但不影响编译生成，请忽视这些提示。 2，SDK视图 3，SDK文件解析 appmain.h 插件APPID的定义，内容不多，在编译前，将这里面的CQAPPID也定义为你之前的文件名AppID。规则见 http://d.cqp.me/Pro/开发/基础信息。 cqp.h cqp.h分为常量定义和函数声明两部分。常量定义部分看不懂也没关系，关键是后面的函数声明部分。函数用途按英语意思去用 每一条声明都具有如下格式：CQAPI([返回值类型]) 函数名;[函数名]描述了该函数的功能，如果你看不懂英文（你还是放弃吧），JSON中的auth部分的注释有每一个函数英文名的翻译。CQ_get开头的函数用于向QQ服务器获取一些状态信息（比如获取某个群员的信息），其它函数用于向服务器发送操作指令（比如发送消息）。get类函数返回你想要获取的信息，其它函数返回操作结果。不同的返回值对应的操作结果，在cqp.h的常量定义部分有说明。你必须按照[参数列表]的规定调用这些函数。 appmain.cpp 这个cpp是最重要的部分，我们平常编写的功能都是在这个cpp里面，根据对应的规则调用，官方SDK里面有详细的注释。 JSON文件 在修改之前，你要明确JSON的作用：这个文件是你的DLL和酷Q之间的交流协议，它规定了酷Q该如何使用你写的DLL。json规则：http://d.cqp.me/Pro/开发event部分：// 事件列表，同一事件类型可重复定义（发布前请删除无用事件）id：这就是个索引，只要保证你所有事件的id不重复即可type：规定酷Q应该在何时触发这个事件。每种事件对应的type值是固定的，只要你设置的type值正确，酷Q就会在正确的时机触发你的事件。事件的名称无关紧要。name：这个就是显示给用户看的，和你的程序没有关系。function：自由定义，但不能重复，而且有格式要求：1、由英文字母、数字、下划线构成2、第一个字符不能是数字3、大小写敏感，大写和小写是不同的4、不能和这些关键字重名：https://msdn.microsoft.com/zh-cn/library/2e6a4at9.aspx如果你需要删除一个事件，需要把一对{}内的内容以及之后的逗号完全删除，否则会报错。请注意不要删除[]，而且[]内的最后一对{}后不能跟逗号，其它的必须跟逗号。如果你需要增加新的事件，建议复制粘贴再修改，以免疏忽。 参考链接：https://cqp.cc/t/27173 这篇主要让大家对酷Q有个基本的了解，下一篇做个小例子。","categories":[{"name":"教程","slug":"教程","permalink":"https://thinkmoon.cn/categories/教程/"}],"tags":[{"name":"QQ","slug":"QQ","permalink":"https://thinkmoon.cn/tags/QQ/"}]},{"title":"搬瓦工在控制面板取消了一键安装Shadowsocks的解决方法(转)","slug":"搬瓦工在控制面板取消了一键安装Shadowsocks的解决方法(转)","date":"2017-04-12T07:25:00.000Z","updated":"2018-09-09T12:09:18.402Z","comments":true,"path":"/4656.html","link":"","permalink":"https://thinkmoon.cn/4656.html","excerpt":"","text":"原文链接:https://www.cnlinode.com/ban_wa_gong_qu_xiao_le_yi_jian_an_zhuang_shadowsocks_zui_xin_ban_wa_gong_ss_jiao_cheng/由于搬瓦工在控制面板取消了一键安装Shadowsocks，原来的一键安装的教程不适用了，我们重新整理了用SS脚本的安装方式，也非常的简单，下面开始吧 (4月25日更新）经过很多童鞋的反馈，我们知道，不同的产品，搬瓦工后台还是稍微有些差异的，有的没有一键搭建SS快捷方式。所以，我们特意整理了最新的搬瓦工搭建SS的三种方法（详见下文中），无论您搬瓦工后台有没有一键SS功能，都能轻松搭建SS服务。根据您的需要选择，下面开始吧。 第一步、挑选注册适合自己的vps经过再三选择之后我选择了搬瓦工VPS，我们就以搬瓦工VPS为基础，教大家购买VPS，搭建自己的SS，科学上网。目前搬瓦工VPS机房已经达到7个，分别是New York [USNY_2]，Los Angeles, California (DC1 QNET)，Los Angeles, California (DC2 MCOM)，Fremont, California，Phoenix, Arizona，Jacksonville, Florida，Amsterdam, Netherlands。没有特殊需求下，建议使用洛杉矶（Los Angeles）。常规最低配置$19.99/年，相当于每月1美金多一点。不过经常缺货，需要的要赶机会。 1、选择需要的VPS方案A、选择年19.99方案（KVM架构），价格最优！ 内存：512MB硬盘：10GB SSD流量：500GB/月价格：$2.99/月（年$19.99）B、如果19.99美元每年的方案缺货，可以选择年$29.99方案（洛杉矶CN2），稳定性更好和国内访问更快。 内存：512MB硬盘：10GB SSD流量：500GB/月价格：年$29.99C、QNET 特价促销款 20 GB（QNET 39.99方案）CPU：1 核内存：1024 MB硬盘：20 GB SSD流量：2000 GB / 月带宽：1 Gbps机房：仅限 QNET 机房迁移：不可迁移机房，仅限 QNET 机房价格：39.99 美元/年 年$39.99特价直达通道 以上方案都可以使用搬瓦工优惠码“ BWH1ZBPVK ”节省6%的费用，这是搬瓦工最大的折扣。 2、选择付款周期和机房位置点击直达链接后，我们会跳转到下图所示的界面。根据图中指示，方案选择年付29.99美金的CN2线路即可，机房位置有洛杉矶的DC3或者DC8机房，默认DC3即可。洛杉矶位于美国西部，国内访问速度相对较快，掉包也比较少。 3、核对价格和填写优惠码点击 Add to Cart 按钮后，我们会跳转到下图所示界面。根据图中指示，我们首先输入下面的最新优惠码，然后点击 Validate Code 按钮验证优惠码，最后点击 Checkout 按钮继续。 搬瓦工最新可用优惠码：当前我们可以使用优惠码“ BWH1ZBPVK ”节省6%的费用 4、登录或者注册搬瓦工账户点击 Checkout 按钮后，我们会跳转到下图所示界面。根据图中指示，我们首先填写个人信息，有账户的直接点击 Click here to login 按钮登录。填写完毕后点击 Update 更新，然后选择Alipay付款方式，然后在 I have read and agree the Terms of Service 前面打钩，最后点击 Complete Order 按钮继续。 注意：国家请务必选择China，不要乱选择，这样可以避免以后被暂停服务。 5、使用支付宝付款点击 Complete Order 按钮后，我们会跳转到下图所示界面。根据图中指示，我们点击 Pay now 按钮继续。 点击 Pay now 按钮后，我们会跳转到下图所示界面。根据下图指示，我们使用手机支付宝扫码付款或者电脑登录支付宝进行付款。 3.png 使用支付宝付款，付完款后，邮箱不久就能收到新的VPS信息，包含root帐号密码 端口号 当然也可以再后台进行操作：点击 My Services 查看VPS 20171114204342_65283.jpg 第二步、开始搭建Shadowsocks由于之前搬瓦工曾经取消了一键安装Shadowsocks的按钮(部分现已恢复），我们特意给出了三种安装Shadowsocks的方法。方法一和方法二（没有一键安装SS按钮也可以）就是搬瓦工后台一键安装Shadowsocks的方法，更适合小白适用，简单快捷。方法三是采用SSH，用脚本方式安装Shadowsocks，更适合进阶用户使用，或者搬瓦工抽风取消一键安装的时候。还在犹豫什么？选择自己适用的方式，开始吧。 方法一：搬瓦工后台一键安装Shadowsocks（小白适用）1、进入管理后台，点击进入控制面板 2、找到左侧的Shadowsocks server，出现如下画面，点击安装 3、安装很快，基本不到1分钟就可以完成，出现如下画面，点击返回 4、好了，就可以看到自己的SS信息了。如果想修改，还可以点后面的按钮修改。 以上设置完毕，可以直接跳到第三步，设置SS客户端。 方法二：直接输入网址的一键SS，类似方法一（小白适用）1、如果后台没有一键SS按钮，我们只需要登陆到搬瓦工后台，然后在浏览器输入如下链接，并回车： https://kiwivm.64clouds.com/preloader.php?load=/main-exec.php?mode=extras_shadowsocks 然后就可以看到SS安装界面了，如下图 2、点击安装就可以了。安装很快，基本不到1分钟就可以完成，出现如下画面，点击返回 3、好了，就可以看到自己的SS信息了。如果想修改，还可以点后面的按钮修改。 方法三：SSH脚本方式安装Shadowsocks（进阶版用户适用）1、获取SSH地址、端口和Root密码 搬瓦工购买VPS搭建SS优化实现科学上网教程 点击My Services后我们来到下图界面 搬瓦工购买VPS搭建SS优化实现科学上网教程 这里我们点击KiwiVM Control Panel后我们会跳转到下图界面，找到IP地址和SSH端口，我们还缺少SSH密码 搬瓦工为了用户的安全，要求用户在购买 VPS 后，要自己手动在 KiwiVM 控制面板重置密码，还是在控制面板，如下图。 进入搬瓦工控制面板 面板右侧会显示你的 ssh 用户名（即 ip 地址）和 ssh 登陆端口，在重置密码前，你需要先停止 vps，在控制面板右侧点击 “stop” 键停止 vps： 进入控制面板后查看 ssh 用户名、ssh 登陆端口 然后左侧下方的 “Root password modification” 选项为重置密码，你点击该项，进入如下页面： 重置搬瓦工vps的 root 密码 然后点击 “Generate and set new root password” 按钮重置密码即可： 密码重置成功重置密码成功后，要记得重新启动 VPS 。这样子才可以使用 xshell 或 putty 等工具进行连接。 2、下载putty开始连接 下载putty：http://pan.baidu.com/s/1jI0T5Fw或者直接在百度搜putty下载解压运行putty.exe， 填入刚才查到的主机地址和端口号，前面图中有介绍，点击打开 如果这里有对话框弹出，选择是，然后在全黑的屏幕上输入 root ，回车。等五秒，按提示输入root的密码，密码就是前面刚刚重置的root密码。 copy你的密码，粘贴至putty（粘贴方式为单击鼠标右键，只需要右键单击一次，这里不会显示任何内容，其实是已经输入了），回车。 3、SSR脚本安装正式开始 等到出现root@host~字样， 复制下面脚本第1条命令，回车： 脚本命令1 wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh（备注：国外服务器运行脚本时容易出错，如出现错误提示 bash: wget: command not found，可以请在先执行 yum -y install wget 命令。成功后，再执行上面的命令。如果没有出现提示错误，请略过） 等出现了上图显示后，输入第2条脚本命令，回车： 脚本命令2 chmod +x shadowsocks-all.sh 等出现了上图显示后，输入第3条脚本命令，回车： 脚本命令3 ./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log 出现以上画面，根据需要选择，不懂的话直接选1，或者默认回车下面会提示你输入你的SS SERVER的密码，和端口。不输入就是默认。跑完命令后会出来你的SS客户端的信息。手把手教你vps搭建属于自己的ss教程，开始科学上网吧（本文利用vultr171014更新 youtube1080p无压力） 输入后，回车！ 特别注意，由于iphone端的的wingy目前只支持到cfb，所以我们选择aes-256-cfb，即7 ，回车 这一步按回车继续然后需要几分钟的安装过程，请耐心等待出现下面的画面！ 请立即copy下来加以保存。 上面的命令全部回车执行后，如果没有报错，即为执行成功，出现确认提示的时候，输入 y 后，回车即可。 安装完成后，脚本提示如下： Congratulations, Shadowsocks-Python server install completed!Your Server IP : IP地址Your Server Port : 端口Your Password : 密码Your Encryption Method: aes-256-gcm Your QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients)ss://YWVzLTsadsa206YnVkZHkyMDA4QDEwNC4yMjQuMTM1Ldfghdfgk=Your QR Code has been saved as a PNG file path:/root/shadowsocks_python_qr.png Welcome to visit: https://teddysun.com/486.htmlEnjoy it! 记录保存好你的上述信息：Server IP、Server Port、Password、Encryption Method 这时你的专属ss已经搭好了，开始使用吧。 第三步、iphone、windows、安卓设置使用1、iphone下载wingy（免费的），app store里搜wingy（中国app store已经下架，可以换到美国账户下载） 点击选择线路–新增线路–shadowsocks–依次填入刚才记录的信息就好–保存–点击连接就可以了 这样就翻墙成功了 2、windows下载 windows客户端更新（170925） 下载解压缩，运行exe 填入之前记录的自己的服务器信息，点击确定 手把手教你vps搭建属于自己的ss教程，开始科学上网吧（利用vultr，看youtube1080p无压力） 在电脑右下角任务栏找到ss图标，右键点击，点击启用系统代理就可以了，试试上google吧 手把手教你vps搭建属于自己的ss教程，开始科学上网吧（利用vultr，看youtube1080p无压力） 3、android 安卓的客户端可以用ShadowSOCKS（影梭），目前是v4.2.5版本，下载地址如下： https://github.com/shadowsocks/shadowsocks-android/releases 类似苹果手机，添加配置文件就可以了。 好了，一切都搞定，开始科学上网吧，是不是很简单呢！","categories":[{"name":"笔记","slug":"笔记","permalink":"https://thinkmoon.cn/categories/笔记/"}],"tags":[{"name":"搬瓦工","slug":"搬瓦工","permalink":"https://thinkmoon.cn/tags/搬瓦工/"}]}]}