__NUXT_JSONP__("/post/894", (function(a,b){return {data:[{article:{cid:894,title:"Vue环境变量和模式",slug:"894",created:1594360080,modified:1597218855,text:"\u003C!--markdown--\u003E# Vue环境变量和模式\r\n\r\n![Vue环境变量和模式](http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002Fimage-20200710134543169.png)\r\n\r\n我最开始使用vue的判断环境的方法是\r\n\r\n```javascript\r\nlet BASE_URL = process.env.NODE_ENV == \"development\" ? \"http:\u002Flocalhost\" : \"xxx\"\r\n```\r\n\r\n在这种情况下，需要先判断它的编译环境，进而根据环境适用对应的值。如果只有一个地方的变量跟环境有关，情况还好。但是若有多个，则需要复制多个判断或者封装成一个方法。但也只能使用于两个环境，如果存在多个环境，诸如开发，测试，预发布，正式等环境，这个方法就捉襟见肘了。所以，我们需要设置Vue环境变量和模式，好像webpack也可以实现？（好吧，这不是重点）\r\n\r\n## 实现方式\r\n\r\nvue允许你在项目根目录下添加.env.[mode]的文件来指定环境变量。\r\n\r\n```javascript\r\n.env                # 在所有的环境中被载入\r\n.env.local          # 在所有的环境中被载入，但会被 git 忽略\r\n.env.[mode]         # 只在指定的模式中被载入\r\n.env.[mode].local   # 只在指定的模式中被载入，但会被 git 忽略\r\n```\r\n\r\n比如我，我添加了`.env.local`,`.env.development`,`.env.test`,`.env.production`等文件，.env.local文件内容如下。\r\n\r\n\u003E .env.local\r\n\r\n```javascript\r\nVUE_APP_BUILD_MODE = 'development'\r\nVUE_APP_BASE_URL = 'http:\u002F\u002F172.16.6.132:8002\u002Fthreemiju\u002F'\r\n```\r\n\r\n对应`package.json`的script如下:\r\n\r\n```json\r\n\"scripts\": {\r\n    \"serve\": \"vue-cli-service serve --mode\",\r\n    \"serve:test\": \"vue-cli-service serve --mode test\",\r\n    \"build:test\": \"vue-cli-service build --mode test\",\r\n    \"build:production\": \"vue-cli-service build --mode production\",\r\n    \"deploy:test\": \"git push && git push gitlab dev && vue-cli-service build --mode test\"\r\n  },\r\n```\r\n\r\n\u003E 请注意，此处有一个坑。当你使用`yarn run build:test`的时候，你会发现，假如你使用了异步组件，却会神奇的发现，它并没有把把代码切割，只编译成了一个app.js文件，这是由于你使用了`--mode test`, 导致它认为你并不是prodution环境。所以，你需要对`.env.test`做以下修改\r\n\r\n- .env.test\r\n\r\n```javascript\r\nNODE_ENV = 'production'\r\nVUE_APP_BUILD_MODE = 'test'\r\nVUE_APP_BASE_URL = 'https:\u002F\u002Fm.gileey.cn\u002Fthreemiju\u002F'\r\n```\r\n\r\n主动设置NODE_ENV即可。\r\n\r\n## 环境变量的使用场景\r\n\r\n1. BASE_URL\r\n\r\n```javascript\r\nexport const baseURL = process.env.VUE_APP_BASE_URL;\r\n```\r\n\r\n2. BUILD_MODE\r\n\r\n在显示版本号时同时显示编译环境\r\n\r\n```jsx\r\n\u003Cspan :title=\"mode\"\u003E{{ version }}\u003C\u002Fspan\u003E\r\n```\r\n\r\n```javascript\r\ndata(){\r\nreturn {mode: process.env.VUE_APP_BUILD_MODE}\r\n}\r\n```\r\n\r\n## 本地变量(*.local)的一些应用场景\r\n\r\n1. BASE_URL: 在不同的开发机器下，请求不同内网地址\r\n2. APP_SECRET: 该字段不宜出现在共有仓库\r\n\r\n\r\n\r\n",order:b,authorId:1,type:"post",status:"publish",commentsNum:3,allowComment:a,allowPing:a,allowFeed:a,parent:b,views:594,likes:13}}],fetch:{},mutations:void 0}}("1",0)));