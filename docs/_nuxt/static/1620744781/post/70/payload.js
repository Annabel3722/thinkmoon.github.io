__NUXT_JSONP__("/post/70", (function(a,b){return {data:[{article:{cid:70,title:"毕业设计思路篇(一)之交通图的构建",slug:"70",created:1547347860,modified:1550416953,text:"\u003C!--markdown--\u003E![2019-01-13 10-50-54屏幕截图.png][1]\r\n## 1. 导入道路地图\r\n道路地图来自网络数据,已预处理为xml格式。\r\n```xml\r\n\u003C?xml version='1.0' encoding='UTF-8'?\u003E\r\n\u003CRoads\u003E\r\n  \u003Croad m_ID=\"71283896--1\" len=\"620.98\"\u003E\r\n    \u003Cfrom lon=\"113.9205606\" lat=\"22.9317667\" id=\"848388981\"\u002F\u003E\r\n    \u003Cto lon=\"113.9260573\" lat=\"22.9341232\" id=\"2522072722\"\u002F\u003E\r\n  \u003C\u002Froad\u003E\r\n  \u003Croad m_ID=\"553852656--2\" len=\"322.34\"\u003E\r\n    \u003Cfrom lon=\"113.9529339\" lat=\"22.9448978\" id=\"5345735265\"\u002F\u003E\r\n    \u003Cto lon=\"113.9516926\" lat=\"22.9475618\" id=\"5345735267\"\u002F\u003E\r\n  \u003C\u002Froad\u003E\r\n\u003C\u002FRoads\u003E\r\n```\r\n\u003E 解析：一个road节点代表一条道路，len代表道路抽象长度，from，to子节点分别表示道路两端端点。\r\n\r\n## 2. 解析道路数据\r\n\r\n### a. 构建交通图\r\n\u003E 赋值道路端点.\r\n```C++\r\n\u002F**\r\n*  路口类，记录着该路口的点坐标，以及其相连的方向道路节点组\r\n *               |           |\r\n *               |     |     |\r\n *               |  1     2  |\r\n *               |     |     |\r\n *        --------           --------\r\n *           3                  5\r\n *        - - - -            - - - -\r\n *           4                  6\r\n *        --------           --------\r\n *               |     |     |\r\n *               |  7     8  |\r\n *               |     |     |\r\n *               |           |\r\n *    如上图(1,2), (3,4), (5,6), (7,8)在同一个方向,我将其称为四组方向道路节点Node.\r\n *    其中,Node.inRoadID=1, Node.outRoadID=2;\r\n *         Node.inRoadID=4, Node.outRoadID=3;\r\n *         ...\r\n *         根据车辆靠右行原则以此类推.\r\n*\u002F\r\nclass CrossRoad {\r\npublic:\r\n    CrossRoad(float fLon,float fLat) : m_fLat(fLat),m_fLon(fLon){};\r\n    \u002F**\r\n     * 重载运算符 （==） 判断两个路口是否为同一个\r\n     *\u002F\r\n    bool operator==(CrossRoad &crossRoad);\r\n    \u002F**\r\n     * 添加道路节点ID\r\n     * @param in 入度\r\n     * @param out 出度\r\n     * @param atan2 该点与方向道路的atan2值\r\n     *\u002F\r\n    void addNode(int in,int out,double atan2);\r\npublic:\r\n    \u002F\u002F唯一标示符\r\n    int m_nID;\r\n    \u002F\u002F经纬度的定义\r\n    float m_fLon, m_fLat;\r\n    vector\u003CNode\u003E JunctionRoad;\r\n    \u002F\u002F该路口的交通灯\r\n    TrafficLight m_CTrafficLight_Light;\r\n};\r\n```\r\n`CrossRoad A,B`\r\n\u003E 添加道路到交通图\r\n```C++\r\nvoid addRoad(Graph &Map_Graph, CrossRoad A, CrossRoad B, double length) {\r\n    \u002F\u002F 初始化A，B路口的索引位置为-1\r\n    int CrossRoadSiteB = -1, CrossRoadSiteA = -1;\r\n    auto CrossRoadNum = Map_Graph.m_CrossRoad_v.size(), RoadNum = Map_Graph.m_Road_v.size();\r\n    \u002F\u002F循环判断是否有重合点\r\n    for (int i = 0; i \u003C CrossRoadNum; i++) {\r\n        if (Map_Graph.m_CrossRoad_v[i] == A) {\r\n            CrossRoadSiteA = i;\r\n        }\r\n        if (Map_Graph.m_CrossRoad_v[i] == B) {\r\n            CrossRoadSiteB = i;\r\n        }\r\n    }\r\n    \u002F\u002F如果不存在与A点重合的路口,添加路口，保存路口索引\r\n    if (CrossRoadSiteA == -1) {\r\n        Map_Graph.m_CrossRoad_v.push_back(A);\r\n        CrossRoadSiteA = CrossRoadNum++;\r\n        Map_Graph.m_CrossRoad_v[CrossRoadSiteA].m_nID = CrossRoadSiteA;\r\n    }\r\n    if (CrossRoadSiteB == -1) {\r\n        Map_Graph.m_CrossRoad_v.push_back(B);\r\n        CrossRoadSiteB = CrossRoadNum++;\r\n        Map_Graph.m_CrossRoad_v[CrossRoadSiteB].m_nID = CrossRoadSiteB;\r\n    }\r\n    int RoadSiteA = RoadNum, RoadSiteB = RoadNum + 1;\r\n    \u002F\u002F 确定A，B路的site，加入模型图\r\n    Road roadA(RoadSiteA, CrossRoadSiteA, CrossRoadSiteB, length);\r\n    Map_Graph.m_Road_v.push_back(roadA);\r\n    Road roadB(RoadSiteB, CrossRoadSiteB, CrossRoadSiteA, length);\r\n    Map_Graph.m_Road_v.push_back(roadB);\r\n    \u002F\u002F 对接A，B路口节点数据\r\n    Map_Graph.m_CrossRoad_v[CrossRoadSiteA].addNode(RoadSiteA, RoadSiteB,\r\n                                                    atan2((B.m_fLat - A.m_fLat), (B.m_fLon - A.m_fLon)));\r\n    Map_Graph.m_CrossRoad_v[CrossRoadSiteB].addNode(RoadSiteB, RoadSiteA,atan2((A.m_fLat - B.m_fLat), (A.m_fLon - B.m_fLon)));\r\n}\r\n```\r\n\u003E 解析的结果如下\r\n[road.txt](https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F01\u002F2044047466.txt)\r\n[RoadTable.txt][2]\r\n\r\n\r\n  [1]: https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F01\u002F1381127992.png\r\n  [2]: https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F01\u002F4058503811.txt",order:a,authorId:1,type:"post",status:"publish",commentsNum:a,allowComment:b,allowPing:b,allowFeed:b,parent:a,views:935,likes:2}}],fetch:{},mutations:void 0}}(0,"1")));