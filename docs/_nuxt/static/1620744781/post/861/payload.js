__NUXT_JSONP__("/post/861", (function(a,b){return {data:[{article:{cid:861,title:"el-upload视频上传支持回显和预览的一种异教徒解决方案",slug:"861",created:1591164840,modified:1592450937,text:"\u003C!--markdown--\u003E\u003E 该文章为异教徒解决方案，各位看官看下即可，切勿模仿！！！\r\n\r\n## 问题描述\r\n\r\n原生的el-upload只支持上传图片时候的预览和回显，这是因为只针对img标签做了适配，如下图。\r\n\r\n![2020-06-03T05:42:34.png][1]\r\n\r\n而如果我们上传视频，则会出现一个白方框，用户体验不佳。\r\n\r\n![2020-06-03T05:45:07.png][2]\r\n\r\n## 解决思路\r\n\r\n其实正确的解决思路应该是\r\n1. 将`show-file-list`属性设置为`false`。然后再自己循环显示file-list，以及追加对应的预览，删除按钮及功能。\r\n2. 设置自定义模板内容(推荐使用)\r\n\r\n但是我觉得这样太麻烦了(时间问题）。\r\n\r\n于是我突发奇想，如果我将img标签改成video标签呢？如下图\r\n\r\n![2020-06-03T05:46:56.png][3]\r\n\r\n发现居然完美契合，毫无违和感。\r\n\r\n## 预览的实现\r\n\r\n在做到把img改为video标签之前，还需要解决的另一个问题就是，如何让视频也支持预览。老规矩，我们先来看看官方Demo怎么实现预览的。\r\n\r\n![2020-06-03T05:54:03.png][4]\r\n\r\n官方的做法是增加一个dialog，然后在点击预览图片时将文件url传给dialog。我们先来实现一下改写一下dialog\r\n\r\n```vue\r\n\u003Cel-dialog :visible.sync=\"dialogVisible\" :modal-append-to-body=\"true\"\u003E\r\n      \u003Cvideo width=\"100%\" muted autoplay=\"autoplay\" loop=\"loop\" v-if=\"dialogImageUrl[dialogImageUrl.length - 1] == 4\" :src=\"dialogImageUrl\"\u003E\u003C\u002Fvideo\u003E\r\n      \u003Cimg width=\"100%\" v-else :src=\"dialogImageUrl\" alt \u002F\u003E\r\n    \u003C\u002Fel-dialog\u003E\r\n```\r\n\u003E tips: 我这种判断MP4格式的方式实属异端，不建议模仿。\r\n\r\n## 替换img标签\r\n\r\n一到标签节点的操作，我第一想到的就是document操作（异端+1），直接上代码。\r\n\r\n```javascript\r\n changeVideoTag(){\r\n      let videoTag = document.querySelector('.video img')\r\n      console.log('检测到应为video的img标签', videoTag)\r\n      if(videoTag){\r\n        let parentNode = videoTag.parentNode\r\n        let newElement = document.createElement('video')\r\n        newElement.setAttribute('class', videoTag.getAttribute('class'))\r\n        newElement.setAttribute('src', videoTag.getAttribute('src'))\r\n        parentNode.insertBefore(newElement, videoTag)\r\n      }\r\n    },\r\n```\r\n\r\n该函数负责寻找video类下的img标签，然后在img标签之前，添加一个同样的videos元素节点，此处你可以选择是否移除原img标签。\r\n\r\n## 最终实现效果\r\n\r\n![gif.gif][5]\r\n\r\n## 最后的话\r\n\r\n1. 这种方法非常不推荐使用，强烈建议使用自定义模板缩略图\r\n2. 这种方法非常不推荐使用，强烈建议使用自定义模板缩略图\r\n3. 这种方法非常不推荐使用，强烈建议使用自定义模板缩略图\r\n\r\n\r\n  [1]: http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-06-03T05:42:34.png\r\n  [2]: http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-06-03T05:45:07.png\r\n  [3]: http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-06-03T05:46:56.png\r\n  [4]: http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-06-03T05:54:03.png\r\n  [5]: http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002Fgif.gif",order:a,authorId:1,type:"post",status:"publish",commentsNum:a,allowComment:b,allowPing:b,allowFeed:b,parent:a,views:1774,likes:3}}],fetch:{},mutations:void 0}}(0,"1")));