__NUXT_JSONP__("/post/317", {data:[{article:"\u003C!--markdown--\u003E在事件处理程序中调用 event.preventDefault() 或 event.stopPropagation() 是非常常见的需求。尽管我们可以在方法中轻松实现这点，但更好的方式是：方法只有纯粹的数据逻辑，而不是去处理 DOM 事件细节。\n\n\u003Cp\u003E为了解决这个问题，Vue.js 为 v-on 提供了事件修饰符。之前提过，修饰符是由点开头的指令后缀来表示的。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E.stop\u003C\u002Fcode\u003E\n\u003Ccode\u003E.prevent\u003C\u002Fcode\u003E\n\u003Ccode\u003E.capture\u003C\u002Fcode\u003E\n\u003Ccode\u003E.self\u003C\u002Fcode\u003E\n\u003Ccode\u003E.once\u003C\u002Fcode\u003E\n\u003Ccode\u003E.passive\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E&lt;!-- 阻止单击事件继续传播 --&gt;\n&lt;a v-on:click.stop=&quot;doThis&quot;&gt;&lt;\u002Fa&gt;\n\n&lt;!-- 提交事件不再重载页面 --&gt;\n&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;&lt;\u002Fform&gt;\n\n&lt;!-- 修饰符可以串联 --&gt;\n&lt;a v-on:click.stop.prevent=&quot;doThat&quot;&gt;&lt;\u002Fa&gt;\n\n&lt;!-- 只有修饰符 --&gt;\n&lt;form v-on:submit.prevent&gt;&lt;\u002Fform&gt;\n\n&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;\n&lt;!-- 即元素自身触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;\n&lt;div v-on:click.capture=&quot;doThis&quot;&gt;...&lt;\u002Fdiv&gt;\n\n&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;\n&lt;!-- 即事件不是从内部元素触发的 --&gt;\n&lt;div v-on:click.self=&quot;doThat&quot;&gt;...&lt;\u002Fdiv&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 v-on:click.prevent.self 会阻止所有的点击，而 v-on:click.self.prevent 只会阻止对元素自身的点击。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"214-新增\"\u003E2.1.4 新增\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode\u003E&lt;!-- 点击事件将只会触发一次 --&gt;\n&lt;a v-on:click.once=&quot;doThis&quot;&gt;&lt;\u002Fa&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E不像其它只能对原生的 DOM 事件起作用的修饰符，.once 修饰符还能被用到自定义的组件事件上。如果你还没有阅读关于组件的文档，现在大可不必担心。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"230-新增\"\u003E2.3.0 新增\u003C\u002Fh3\u003E\n\u003Cp\u003EVue 还对应 addEventListener 中的 passive 选项提供了 .passive 修饰符。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E&lt;!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 --&gt;\n&lt;!-- 而不会等待 `onScroll` 完成  --&gt;\n&lt;!-- 这其中包含 `event.preventDefault()` 的情况 --&gt;\n&lt;div v-on:scroll.passive=&quot;onScroll&quot;&gt;...&lt;\u002Fdiv&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E这个 .passive 修饰符尤其能够提升移动端的性能。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E不要把 .passive 和 .prevent 一起使用，因为 .prevent 将会被忽略，同时浏览器可能会向你展示一个警告。请记住，.passive 会告诉浏览器你不想阻止事件的默认行为。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n"}],fetch:{},mutations:void 0});