__NUXT_JSONP__("/post/24", {data:[{article:"\u003C!--markdown--\u003E\u003E **为什么要在服务端装canvas？** 因为并不是所有的客户端都能很好的支持canvas（比如微信小程序不能修改自定义字体），所以我们需要一个\n\u003Cp\u003E能够在服务端生成图片的，然后将图片传输\u003C\u002Fp\u003E\n\u003Ch2 id=\"安装node-canvas\"\u003E安装node-canvas\u003C\u002Fh2\u003E\n\u003Ch3 id=\"1-更新编译环境\"\u003E1. 更新编译环境\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-bash\"\u003Esudo apt-get install libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++ -y\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"2-安装node-canvas\"\u003E2. 安装node-canvas\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-bash\"\u003Enpm install -g canvas\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"3-测试代码\"\u003E3. 测试代码\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-JavaScript\"\u003Evar Canvas = require(&#39;canvas&#39;),\n    canvas = new Canvas(300, 200),\n    ctx = canvas.getContext(&#39;2d&#39;),\n    fs = require(&#39;fs&#39;);\n \nvar out = fs.createWriteStream(__dirname + &#39;\u002Fimage.png&#39;)\n  , stream = canvas.createPNGStream();\n \nstream.on(&#39;data&#39;, function(chunk){\n  out.write(chunk);\n});\n \n\u002F\u002F在左边画正方形\nctx.fillStyle = &#39;#A00&#39;    \nctx.fillRect(0, 30,50,50);   \n  \n \n\u002F\u002F在右边画正方形\nctx.fillStyle = &#39;#aaa&#39;    \nctx.fillRect(50, 30, 50, 50);\n \n\u002F\u002F画文字\nctx.fillStyle = &quot;#000&quot;;\nctx.font = &quot;20px Arial&quot;;\nctx.fillText(&quot;Hello World&quot;, 0, 20);\n \n\u002F\u002F画一个圆\nctx.beginPath();\nctx.arc(30, 110, 20, 0, 2*Math.PI);\nctx.stroke();\nctx.fillStyle = &quot;green&quot;;                                                                                                                          \nctx.fill();\nctx.save();  \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"可能遇到的问题\"\u003E可能遇到的问题\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E如果你按上述方法操作，并且运行成功了。那便是极好的\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"1-自定义字体\"\u003E1. 自定义字体\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-JavaScript\"\u003E\u002F\u002F You need to call it before the Canvas is created\nCanvas.registerFont(&#39;comicsans.ttf&#39;, {family: &#39;Comic Sans&#39;});\n\nvar canvas = new Canvas(500, 500),\n  ctx = canvas.getContext(&#39;2d&#39;);\n\nctx.font = &#39;12px &quot;Comic Sans&quot;&#39;;\nctx.fillText(250, 10, &#39;Everyone hates this font :(&#39;);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E不过可能会发现\u003Ccode\u003ECanvas.registerFont is not a function\u003C\u002Fcode\u003E这是因为npm版本的没有这个函数。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E所以你需要去找另一个github版\u003Ccode\u003Ehttps:\u002F\u002Fgithub.com\u002Fchearon\u002Fnode-canvas#12971f64a66b\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003Egit clone 下来\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E然后将Canvas = require(&#39;canvas&#39;)改成require(&#39;.\u002Fnode-canvas&#39;)，\n将\u003Ccode\u003Evar canvas = new Canvas(300, 200)\u003C\u002Fcode\u003E改成\u003Ccode\u003Evar canvas = new Canvas.Canvas(300, 200)\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"2-error-cannot-find-module-buildreleasecanvasnode\"\u003E2. Error: Cannot find module &#39;..\u002Fbuild\u002FRelease\u002Fcanvas.node&#39;\u003C\u002Fh3\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E如果遇到这个问题，请cd进你的node-canvas目录执行npm install\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E如果还是不行，请执行\u003Ccode\u003Enpm install -g node-gyp\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E然后再cd项目目录执行\u003Ccode\u003Enode-gyp rebuild\u003C\u002Fcode\u003E，then cd 进node-canvas同样执行\u003Ccode\u003Enode-gyp rebuild\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E如果成功则会出现\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002F%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20180619203241.png\" alt=\"编译过程\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"示例代码\"\u003E示例代码\u003C\u002Fh2\u003E\n\u003Ch3 id=\"我的项目目录\"\u003E我的项目目录\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode\u003E.\n├── 1.html\n├── composer.json\n├── font\n├── fz.ttf\n├── img\n├── index.js\n├── node-canvas\n├── node_modules\n├── package.json\n└── package-lock.json\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"我的代码\"\u003E我的代码\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-JavaScript\"\u003Evar fs = require(&#39;fs&#39;),path = require(&#39;path&#39;);\nvar http = require(&#39;http&#39;),url = require(&quot;url&quot;);\nvar Canvas = require(&#39;.\u002Fnode-canvas&#39;),Image = Canvas.Image;\nvar Fonts = [];\nvar filePath = path.resolve(&#39;.\u002Ffont&#39;);\n\nlet promise = new Promise(function(resolve, reject) {\n  let i=0;\n  fs.readdir(filePath,function(err,files){  \n    if(err){  \n      console.warn(err)  \n    }else{\n      files.forEach(function(filename){\n        Canvas.registerFont(filePath + &quot;\u002F&quot; + filename, {family: &quot;font&quot; + i});\n        console.log(i);\n        i++;\n      });\n    }\n  });\n  \n});\n\npromise.then(function() {\n  console.log(&quot;ASDF&quot;);\n  Fonts.forEach((Element) =&gt;{\n    console.log(Element);\n  });\n});\n\nconsole.log(&#39;Hi!&#39;);\n\n\nhttp.createServer(function (req, res) {\n  var params = url.parse(req.url, true).query;\n  var str = params.str + &#39;\\r&#39;,site = params.site;\n  var row =  1,col = 15,width = 1500;\n  row = str.length \u002F 15 + 1;\n  var fontsize = width\u002Fcol;\n  var height = fontsize * row + 200;\n  if(height &lt; 1000){height = 1000}\n  var canvas = new Canvas.Canvas(width, height), ctx = canvas.getContext(&#39;2d&#39;)\n  res.writeHead(200,{&quot;Content-Type&quot;: &quot;image\u002Fpng&quot;});\n  ctx.fillStyle = &#39;#FFF&#39;;\n  ctx.fillRect(0,0,canvas.width, canvas.height);\n  ctx.fillStyle = &#39;#000&#39;;\n  if(row &lt; 2){\n    let num = str.length\n    fontsize = 1200 \u002F num;\n    ctx.font = fontsize + &#39;px &quot;font&#39;+ site +&#39;&quot;&#39;;\n    ctx.fillText(str,( width - num * fontsize ) \u002F 2, (height-fontsize)\u002F2 -200 + fontsize);\n  }\n  else{\n    ctx.font = fontsize + &#39;px &quot;font&#39;+ site +&#39;&quot;&#39;;\n    for(let i = 0;i &lt; row ; i++){\n      ctx.fillText(str.substring(i*15,(i+1)*15), 0, fontsize*(i+1));\n    }\n  }\n  \n  fs.readFile(__dirname + &#39;\u002Fimg\u002Fbrand.png&#39;, function(err, squid){\n    if (err) throw err;\n    img = new Image;\n    img.src = squid;\n    ctx.fillStyle = &#39;#42b983&#39;;\n    ctx.fillRect(0,canvas.height - 230,canvas.width, 230);\n    ctx.drawImage(img, canvas.width - img.width \u002F 2 - 50, canvas.height - img.height \u002F 2 - 50, img.width \u002F 2, img.height \u002F 2);\n    res.end(canvas.toBuffer());\n  });\n}).listen(8080);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"效果展示\"\u003E效果展示\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002FTIM%E5%9B%BE%E7%89%8720180620125239.png\" alt=\"天地玄黄\"\u003E\u003C\u002Fp\u003E\n"}],fetch:{},mutations:void 0});