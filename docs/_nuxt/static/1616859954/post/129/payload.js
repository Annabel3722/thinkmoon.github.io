__NUXT_JSONP__("/post/129", {data:[{article:"\u003C!--markdown--\u003E## 1. 从文件(route.txt)中读取路径\n\n\u003Cp\u003E形如以下格式\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E0 1 \n0 1 2 \n0 1 2 3 \n0 1 2 3 4 \n0 1 2 3 4 5 \n0 1 2 3 4 5 6 \n0 1 2 3 4 5 6 7 \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E其中，一行表示一条可完全畅通的道路编号序列。将所有道路存入v_Route\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-c++\"\u003Evector&lt;queue&lt;int&gt;&gt; v_Route;\n\n\u002F**\n * load route from route file\n * @param Map_graph\n *\u002F\nvoid loadRoute(Graph &amp;Map_graph) {\n    string str_Path;\n    ifstream fin_Route(DIR_RES&quot;route.txt&quot;);\n    while (getline(fin_Route, str_Path)) {\n        stringstream ss_Temp(str_Path);\n        queue&lt;int&gt; q_Path_Temp;\n        int n_Temp;\n        while (ss_Temp &gt;&gt; n_Temp) {\n            q_Path_Temp.push(n_Temp);\n        }\n        v_Route.push_back(q_Path_Temp);\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n"}],fetch:{},mutations:void 0});