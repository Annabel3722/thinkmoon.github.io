__NUXT_JSONP__("/post/375", {data:[{article:"\u003C!--markdown--\u003E\u003E 引言：此方法可用作大部分微信小程序支持，但uni-app文档中却找不到相关说明的API\n\n\u003Ch2 id=\"需求\"\u003E需求\u003C\u002Fh2\u003E\n\u003Cp\u003E需要在微信小程序中，实现一个中间图标突出显示的异形导航栏。\u003C\u002Fp\u003E\n\u003Ch3 id=\"如下图\"\u003E如下图\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-14T09:17:36.png\" alt=\"2019-08-14T09:17:36.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"实现方法设计\"\u003E实现方法设计\u003C\u002Fh2\u003E\n\u003Cp\u003E要做这种异形的导航栏，用直接在配置文件里面写list的方法肯定做不到。那么，就有以下两种可替代方法。\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E在每一个页面都加载一个tabBar组件，与页面同时渲染。\u003C\u002Fli\u003E\n\u003Cli\u003E设置自定义tabBar,修改tabBar的样式。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E优缺点分析：方法1实现起来略为简单，但是会出现代码可重用率低，降低性能，已经界面跳动等问题。方法2则是微信官方提供的，自定义方式，相信在性能方面也会有很大的优势。故选择方法2。\u003C\u002Fp\u003E\n\u003Ch2 id=\"1-查看文档及官方demo\"\u003E1. 查看文档及官方Demo\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdevelopers.weixin.qq.com\u002Fminiprogram\u002Fdev\u002Fframework\u002Fability\u002Fcustom-tabbar.html\"\u003E官方文档\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E简要描述一下就是需要在根目录中加入一个\u003Ccode\u003Ecustom-tab-bar\u003C\u002Fcode\u003E目录，里面的文件结构与自定义组件的结构一致。然后再在小程序配置文件中修改tabbar为custom模式。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdevelopers.weixin.qq.com\u002Fs\u002FjiSARvmF7i55\"\u003E官方代码\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E主要重点为三个部分\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E配置文件\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-14T09:23:22.png\" alt=\"配置文件\"\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Ecustom-tab-bar目录\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-14T09:25:15.png\" alt=\"2019-08-14T09:25:15.png\"\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E页面生命周期中的设置索引方法\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-14T09:26:43.png\" alt=\"2019-08-14T09:26:43.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E这段代码其实很容易理解，pageLifetimes就是监听组件所在页面的生命周期。上述代码就是监听页面显示。当页面显示后，获取到tabBar的对象，然后再设置tabBar中的index索引。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"2-迁移到uni-app框架\"\u003E2. 迁移到uni-app框架\u003C\u002Fh2\u003E\n\u003Cp\u003E上面的方法是使用微信小程序的开发方式，而我使用的是uni-app框架开发微信小程序的。所以我们需要把它们移植到uni-app框架内。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E配置文件的修改\nuni-app中，page.json被编译为微信小程序的app.json。所以，我们直接修改page.json\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-14T09:32:50.png\" alt=\"page.json所需要的修改\"\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Ecustom-tab-bar目录的适配\n我们知道，uni-app使用的是类Vue开发，将一个Vue文件编译为四个微信页面文件（wxml，wxss，json，js）。那么，是否可以直接写一个\u003Ccode\u003Ecustom-tab-bar.vue\u003C\u002Fcode\u003E的文件呢？刚开始我也是这么想的，后来发现uni-app只会编译page目录和component目录下的vue文件。而微信小程序要求\u003Ccode\u003Ecustom-tab-bar\u003C\u002Fcode\u003E必须在项目的根目录下。那么就只能在uni-app下创建一个\u003Ccode\u003Ecustom-tab-bar\u003C\u002Fcode\u003E目录，并老老实实写微信四件套了。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-14T09:39:45.png\" alt=\"custom-tab-bar目录的适配\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E写完后，uni-app会将该目录完美的复制至微信小程序项目的根目录。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cul\u003E\n\u003Cli\u003Etab页面内的适配方法\n这个在我实际开发中，是最令我头痛的了。因为微信小程序的\u003Ccode\u003Ethis\u003C\u002Fcode\u003E引用与uni-app的\u003Ccode\u003Ethis\u003C\u002Fcode\u003E引用并不相同。所以如果直接复制代码是会编译出错的。而另一个问题则是，uni-app并未提供\u003Ccode\u003EpageLifetimes\u003C\u002Fcode\u003E的事件监听。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E在我经过一番摸索之后，发现将设置索引方法写在onShow事件里面，效果是等效的。接下来便只剩下this的问题了。\u003C\u002Fp\u003E\n\u003Cp\u003E如果直接复制的话，会出现无任何效果的情况\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-14T09:48:14.png\" alt=\"直接复制设置方法\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E因为uni-app的this引用不一样，所以它在判断\u003Ccode\u003EgetTabBar\u003C\u002Fcode\u003E的时候，获取的是“undefined”所以不会执行下面的操作。如果你将判断去掉，则会直接报“undefined”错误。\u003C\u002Fp\u003E\n\u003Cp\u003E难道实现不了？其实不然，万变不离其宗。uni-app也是编译到小程序的，所以绝对有迹可循。\u003C\u002Fp\u003E\n\u003Cp\u003E我们首先看看uni-app里面this的内容。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-20T02:41:06.png\" alt=\"this的指向内容\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E我们可以很明显的看到里面有个\u003Ccode\u003E$mp\u003C\u002Fcode\u003E的对象，说明这应该是微信小程序专用的对象。接下来我们继续分析\u003Ccode\u003E$mp\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-20T03:00:18.png\" alt=\"$mp的指向内容\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E这里面有一个隐藏很深的\u003Ccode\u003EgetTabBar\u003C\u002Fcode\u003E方法，我们直接调用它，和在微信小程序里面调用\u003Ccode\u003Ethis.getTabBar\u003C\u002Fcode\u003E是等效的。\u003C\u002Fp\u003E\n\u003Cp\u003E所以我们就可以把\u003Ccode\u003EonShow\u003C\u002Fcode\u003E里面的内容写成这样。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-08-20T03:03:40.png\" alt=\"设置索引方法\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"一些优雅点的封装\"\u003E一些优雅点的封装\u003C\u002Fh2\u003E\n\u003Ch3 id=\"设置索引方法独立出来\"\u003E设置索引方法独立出来\u003C\u002Fh3\u003E\n\u003Cp\u003E在methods对象中，添加\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-JavaScript\"\u003EsetTabBarIndex(index){\n            if (typeof this.$mp.page.getTabBar === &#39;function&#39; &amp;&amp;\n                this.$mp.page.getTabBar()) {\n                this.$mp.page.getTabBar().setData({\n                    selected:index\n                })\n            }\n        }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"使用mixin避免重复书写复制\"\u003E使用\u003Ccode\u003Emixin\u003C\u002Fcode\u003E避免重复书写复制\u003C\u002Fh3\u003E\n\u003Cp\u003E在\u003Ccode\u003Emain.js\u003C\u002Fcode\u003E中，添加\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-JavaScript\"\u003EVue.mixin({\n    methods:{\n        setTabBarIndex(index){\n            if (typeof this.$mp.page.getTabBar === &#39;function&#39; &amp;&amp;\n                this.$mp.page.getTabBar()) {\n                this.$mp.page.getTabBar().setData({\n                    selected:index\n                })\n            }\n        }\n    }\n})\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"混入后的使用\"\u003E混入后的使用\u003C\u002Fh3\u003E\n\u003Cp\u003E在页面文件中\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-JavaScript\"\u003EonShow() {\n            this.setTabBarIndex(0) \u002F\u002Findex为当前tab的索引\n        }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003Eover!\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n"}],fetch:{},mutations:void 0});