__NUXT_JSONP__("/post/466", {data:[{article:"\u003Ch2 id=\"引言\"\u003E引言\u003C\u002Fh2\u003E\n\u003Cp\u003E熟悉uni-app的人应该都知道，uni-app并未对微信小程序云函数（本文统称云函数）进行相应的适配。但是，如果我们在某些业务场景的下需要使用云函数呢？我们知道，云函数可以复制到微信开发者工具，这样的话我们不得不每次编译一次就手动复制一次，不得不说麻烦至极。本文就问题做出以下解决方案。\u003C\u002Fp\u003E\n\u003Ch3 id=\"本文环境\"\u003E本文环境\u003C\u002Fh3\u003E\n\u003Col\u003E\n\u003Cli\u003EHbuilder X\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-10-22T01:28:39.png\" alt=\"Hbuilder X版本\"\u003E\u003C\u002Fp\u003E\n\u003Col start=\"2\"\u003E\n\u003Cli\u003E微信开发者工具\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-10-22T01:32:01.png\" alt=\"微信开发者工具版本\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"创建云函数目录\"\u003E创建云函数目录\u003C\u002Fh2\u003E\n\u003Cp\u003E首先，我们需要在uni-app项目文件夹下，创建一个云函数目录，路径随意，我这里是\u003Ccode\u003Efunctions\u003C\u002Fcode\u003E。然后先随便在里面放一些文件，这里以\u003Ccode\u003Enew_file.css\u003C\u002Fcode\u003E为例。\u003C\u002Fp\u003E\n\u003Ch2 id=\"修改manifestjson\"\u003E修改\u003Ccode\u003Emanifest.json\u003C\u002Fcode\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E在uni-app根目录下，修改\u003Ccode\u003Emanifest.json\u003C\u002Fcode\u003E中的微信小程序项，结构如下\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-json\"\u003E&quot;mp-weixin&quot; : {\n        \u002F* 小程序特有相关 *\u002F\n        &quot;appid&quot; : &quot;wxd7de467f6e6cf741&quot;,\n        &quot;cloudfunctionRoot&quot;: &quot;.\u002Ffunctions\u002F&quot;, \u002F\u002F 这一行就是标记云函数目录的字段\n        &quot;setting&quot; : {\n            &quot;urlCheck&quot; : false\n        },\n        &quot;usingComponents&quot; : true\n    }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"编写vueconfigjs\"\u003E编写\u003Ccode\u003Evue.config.js\u003C\u002Fcode\u003E\u003C\u002Fh2\u003E\n\u003Col\u003E\n\u003Cli\u003E我们在项目根目录创建\u003Ccode\u003Evue.config.js\u003C\u002Fcode\u003E文件\u003C\u002Fli\u003E\n\u003Cli\u003E写入以下内容（如路径不一样请做相应适配）\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Econst path = require(&#39;path&#39;)\nconst CopyWebpackPlugin = require(&#39;copy-webpack-plugin&#39;)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003Emodule.exports = {\n    configureWebpack: {\n        plugins: [\n            new CopyWebpackPlugin([{\n                from: path.join(__dirname, &#39;cloudFunctions&#39;),\n                to: path.join(__dirname, &#39;unpackage\u002Fdist&#39;, process.env.NODE_ENV === &#39;production&#39; ? &#39;build&#39; : &#39;dev&#39;, process.env\n                    .UNI_PLATFORM, &#39;cloudFunctions&#39;)\n            }])\n        ]\n    }\n}\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E3. 编译运行\n\n发现提示如下内容\n\n![提示内容][3]\n\n说明未安装`copy-webpack-plugin`插件，我们手动安装一下。\n```shell\nnpm install -save copy-webpack-plugin\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ETIPS: 截至2020.6.4， uni-app暂不支持copy-webpack-plugin 6.0版，请安装5.0版\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-10-22T01:34:09.png\" alt=\"安装copy-webpack-plugin\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E然后编译运行，发现微信开发者工具里面出现以下内容。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-10-22T01:35:15.png\" alt=\"微信开发者工具里面的内容\"\u003E\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Cp\u003E截止目前，已打通Hbuilder X到微信开发者工具的自动复制，即已解决本文的核心内容。以下为进一步测试。\u003C\u002Fp\u003E\n\u003Ch2 id=\"创建云函数\"\u003E创建云函数\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E我们在云函数根目录上右键，在右键菜单中，可以选择创建一个新的 Node.js 云函数，我们将该云函数命名为check。开发者工具在本地创建出云函数目录和入口 index.js 文件，同时在线上环境中创建出对应的云函数。创建成功后，工具会提示是否立即本地安装依赖，确定后工具会自动安装 wx-server-sdk。我们会看到以下内容。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E创建好后将其同步复制到uni-app项目，即可为以后自动同步行方便，又可避免在输出文件夹中云函数的意外丢失。至此，相关文件编写工作转至\u003Ccode\u003EHbuilder X\u003C\u002Fcode\u003E，云函数上传部署依旧在微信开发者工具。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-10-22T01:45:21.png\" alt=\"云函数模板内容\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"编写云函数\"\u003E编写云函数\u003C\u002Fh2\u003E\n\u003Cp\u003E默认的云函数只是一个返回用户基本数据的内容，我们将其修改至满足我们的业务需求，以内容安全云调用为例。\u003C\u002Fp\u003E\n\u003Cp\u003E在云函数文件中写入以下内容\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E\u002F\u002F 云函数入口文件\nconst cloud = require(&#39;wx-server-sdk&#39;)\n\ncloud.init()\n\n\u002F\u002F 云函数入口函数\nexports.main = async(event, context) =&gt; {\n  try {\n    console.log(&#39;待检测文本:&#39; + event.content);\n    let result = await cloud.openapi.security.msgSecCheck({\n      content: event.content\n    })\n    console.log(&#39;result:&#39; + JSON.stringify(result));\n\n    if (result &amp;&amp; result.errCode.toString() === &#39;87014&#39;) {\n      return {\n        code: 300,\n        msg: &#39;内容含有违法违规内容&#39;,\n        data: result\n      }\n    } else {\n      return {\n        code: 200,\n        msg: &#39;ok&#39;,\n        data: result\n      }\n    }\n\n  } catch (err) {\n    if (err.errCode.toString() === &#39;87014&#39;) {\n      return {\n        code: 300,\n        msg: &#39;内容含有违法违规内容&#39;,\n        data: err\n      }\n    }\n    return {\n      code: 400,\n      msg: &#39;调用security接口异常&#39;,\n      data: err\n    }\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"权限申明\"\u003E权限申明\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2019-12-10T06:54:47.png\" alt=\"云函数config权限声明\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E如上图，在函数目录下，创建一个\u003Ccode\u003Econfig.json\u003C\u002Fcode\u003E,文档说会自动创建，但是我实际操作时未自动创建。\u003Ccode\u003Econfig.json\u003C\u002Fcode\u003E内容如下。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-json\"\u003E{\n    &quot;permissions&quot;: {\n        &quot;openapi&quot;: [\n            &quot;security.msgSecCheck&quot;\n        ]\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然后在函数目录右键，上传并部署。\u003C\u002Fp\u003E\n\u003Ch2 id=\"小程序调用云函数\"\u003E小程序调用云函数\u003C\u002Fh2\u003E\n\u003Ch3 id=\"appvue\"\u003EApp.vue\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E&lt;script&gt;\n  export default {\n    onLaunch() {\n      wx.cloud.init();\n    }\n  }\n&lt;\u002Fscript&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"indexvue\"\u003Eindex.vue\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Elet res = await wx.cloud.callFunction({\n          name: &#39;checkText&#39;,\n          data: {\n            &quot;content&quot;: this.displayString\n          }\n        })\n        if (res.result.code != 200) {\n          uni.showModal({\n            title: &quot;温馨提示&quot;,\n            content: &quot;你所输入的内容可能含有违法违规内容，不支持进行下一步操作&quot;\n          })\n          return\n        }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"效果展示\"\u003E效果展示\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20191022110949.png\" alt=\"微信图片_20191022110949.png\"\u003E\u003C\u002Fp\u003E\n"}],fetch:{},mutations:void 0});