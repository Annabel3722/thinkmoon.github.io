__NUXT_JSONP__("/post/297", {data:[{article:"\u003Ch2 id=\"最终效果如下\"\u003E最终效果如下\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F04\u002F1897065195.png\" alt=\"2019-04-02T02:54:35.png\"\u003E\n\u003Cimg src=\"https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F04\u002F798221859.png\" alt=\"2019-04-02T02:57:55.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"代码如下\"\u003E代码如下\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Econst baseURL = &#39;http:\u002F\u002Fwxlc.wezoz.com\u002F&#39; \u002F\u002F your base url\nasync function request(api, method, header, params) {\n    console.group(api)\n    console.log(&#39;%c&#39; + method + &#39; REQUEST:&#39;, &quot;color:green&quot;)\n    console.log({\n        &#39;api&#39;: api,\n        &#39;header&#39;: header,\n        &#39;params&#39;: params\n    })\n    return await new Promise((resolve, reject) =&gt; {\n        uni.request({\n            url: baseURL + api,\n            method: method,\n            header: header,\n            data: params,\n            success: (result) =&gt; {\n                console.log(&#39;%c&#39; + method + &#39; SUCCESS RETURN DATA:&#39;, &quot;color:green&quot;)\n                console.log(result)\n                console.groupEnd(api)\n                resolve(result.data);\n            },\n            fail: (e) =&gt; {\n                reject(e);\n            }\n        })\n    })\n}\nasync function post(api, params, success) {\n    const POST_METHOD = &#39;POST&#39;\n    const POST_HEADER = {\n        &#39;content-type&#39;: &#39;application\u002Fx-www-form-urlencoded&#39;,\n        &#39;token&#39;: wx.getStorageSync(&#39;token&#39;)\n    }\n    return await request(api, POST_METHOD, POST_HEADER, params)\n}\nasync function get(api, params, success) {\n    const GET_METHOD = &#39;GET&#39;\n    const GET_HEADER = {\n        &#39;content-type&#39;: &#39;application\u002Fx-www-form-urlencoded&#39;,\n        &#39;token&#39;: wx.getStorageSync(&#39;token&#39;)\n    }\n    return await request(api, GET_METHOD, GET_HEADER, params)\n}\nmodule.exports = {\n    POST: post,\n    GET: get\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"所用到的一些consloe骚操作\"\u003E所用到的一些consloe骚操作\u003C\u002Fh2\u003E\n\u003Ch3 id=\"console内使用css样式\"\u003Econsole内使用CSS样式\u003C\u002Fh3\u003E\n\u003Cp\u003Econsloe里面使用%c进行css样式格式化输出实例\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Econsole.log(&quot;%c Hello World&quot;, &quot;color:green&quot;)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E上述语句会输出绿色的\u003Ccode\u003EHello world\u003C\u002Fcode\u003E, 效果如下。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F04\u002F3326939580.png\" alt=\"2019-04-02T03:25:00.png\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E然后你就可以根据你的css功底进行创造啦\u003C\u002Fp\u003E\n\u003Ch3 id=\"console内获取程序运行时间\"\u003Econsole内获取程序运行时间\u003C\u002Fh3\u003E\n\u003Cp\u003E一般大家看到这个题目，第一时间想到的绝对是获取startTime，endTime再求差对不？\n其实console提供一个内嵌的console.time()和console.timeEnd()，代码如下\n\u003Cimg src=\"https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F04\u002F116410319.png\" alt=\"2019-04-02T03:30:19.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"console分组输出\"\u003Econsole分组输出\u003C\u002Fh3\u003E\n\u003Cp\u003E有得时候，大家打开控制台看见一堆输出是不是很头疼？如何在茫茫数据中找到自己想要的数据呢？你可以使用ground分组数据，让console变得清晰明了。\n效果如下\n\u003Cimg src=\"https:\u002F\u002Fwww.thinkmoon.cn\u002Fusr\u002Fuploads\u002F2019\u002F04\u002F798221859.png\" alt=\"2019-04-02T02:57:55.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"结语\"\u003E结语\u003C\u002Fh3\u003E\n\u003Cp\u003E我这里只是写了一些我自己常用到的一些功能，其实console对象还有很多函数。想玩一下的可以自己去尝试以下，发挥自己的想象力就会发现一些很有意思的玩法\u003C\u002Fp\u003E\n"}],fetch:{},mutations:void 0});