__NUXT_JSONP__("/post/721", {data:[{article:"\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-01-15T06:37:26.png\" alt=\"题目描述\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"思路\"\u003E思路\u003C\u002Fh2\u003E\n\u003Cp\u003E查找无重复的字符子串，然后滑动窗口\u003C\u002Fp\u003E\n\u003Ch2 id=\"初次解\"\u003E初次解\u003C\u002Fh2\u003E\n\u003Cp\u003E每次滑动一格窗口\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-python\"\u003Eclass Solution:\n    def isUnique(self, s: str) -&gt; bool:\n        for ch in s:\n            if s.count(ch) &gt; 1:\n                return False\n            else:\n                continue\n        return True\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        i,j,Max=0,0,0\n        j+=1\n        while j &lt;= len(s):\n            if self.isUnique(s[i:j]):\n                print(s[i:j],&quot;is Unique&quot;,i,j)\n                Max=max(j-i,Max)\n                j+=1\n            else:\n                i+=1\n        return Max\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"成果\"\u003E成果\u003C\u002Fh2\u003E\n\u003Ch2 id=\"第一次优化\"\u003E第一次优化\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-python\"\u003Eclass Solution:\n    def lengthOfLongestSubstring(self, s: str) -&gt; int:\n        if(len(s)==1): \n            return 1\n        i,j,Max=0,0,0\n        while j &lt;= len(s):\n            st = s[i:j+1]\n            if(j+1 &lt; len(s)):\n                index = st.find(s[j+1])\n                if index &gt; -1:\n                    i+=(index+1)\n                j+=1\n                Max=max(j-i+1,Max)\n            else:\n                break\n        return Max\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"成果-1\"\u003E成果\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-01-15T07:27:31.png\" alt=\"2020-01-15T07:27:31.png\"\u003E\u003C\u002Fp\u003E\n"}],fetch:{},mutations:void 0});