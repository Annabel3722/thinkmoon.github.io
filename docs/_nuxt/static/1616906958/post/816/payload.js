__NUXT_JSONP__("/post/816", {data:[{article:"\u003Ch2 id=\"前言\"\u003E前言\u003C\u002Fh2\u003E\n\u003Cp\u003E相信小伙伴们对广告是又爱又恨，一方面不想接受广告的荼毒，另一方面也想接点广告赚点流量收益。由此而来衍生出了两个技术，屏蔽广告与防屏蔽广告。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-04-14T09:05:00.png\" alt=\"2020-04-14T09:05:00.png\"\u003E\n屏蔽广告\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-04-14T09:07:07.png\" alt=\"2020-04-14T09:07:07.png\"\u003E\n防屏蔽\u003C\u002Fp\u003E\n\u003Ch2 id=\"原理\"\u003E原理\u003C\u002Fh2\u003E\n\u003Cp\u003E我们要想做到网站广告不被人屏蔽，首先就要理解屏蔽广告的原理。\u003C\u002Fp\u003E\n\u003Ch3 id=\"1初阶屏蔽\"\u003E1.初阶屏蔽\u003C\u002Fh3\u003E\n\u003Cp\u003E含ad，推广等字样的js或者class类就直接拦截或者不显示\u003C\u002Fp\u003E\n\u003Ch3 id=\"2高阶屏蔽\"\u003E2.高阶屏蔽\u003C\u002Fh3\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E我也不会，但是高阶屏蔽肯定是可以屏蔽低阶广告的。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E那么根据这个原理，我们可以发现。只要我们写一个很low很low的广告，然后监听它是否成功加载，如果没有，则跳转页面或者不显示内容。\u003C\u002Fp\u003E\n\u003Ch2 id=\"实现\"\u003E实现\u003C\u002Fh2\u003E\n\u003Ch3 id=\"1-制造广告\"\u003E1. 制造广告\u003C\u002Fh3\u003E\n\u003Cp\u003E先写一个一眼就能看出来是广告的js文件，例如把js文件名命名\n为&quot;adview_pic_cpc_cpm_cpa_guanggao_gg_ads_300x250.js&quot;。广告二字赤裸裸的写着，广告的韵味呼之欲出。\u003C\u002Fp\u003E\n\u003Ch3 id=\"2-定义变量\"\u003E2. 定义变量\u003C\u002Fh3\u003E\n\u003Cp\u003E在js里面定义一个变量，比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Evar adskilltest=true;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"3-监听广告变量\"\u003E3. 监听广告变量\u003C\u002Fh3\u003E\n\u003Cp\u003E页面文件中读取该变量\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E不管怎么样，只要被拦截，那就肯定是undefined。让个极其肤浅的广告命名，来检测是否有屏蔽广告，这叫引蛇出洞！\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"http:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-04-14T09:20:46.png\" alt=\"2020-04-14T09:20:46.png\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E大功告成！\u003C\u002Fp\u003E\n\u003Ch3 id=\"4-后续操作\"\u003E4. 后续操作\u003C\u002Fh3\u003E\n\u003Cp\u003E既然被拦截，就要做出点反应。有了反应之后呢，还需要保存当时浏览的页面连接。我的解决方法是写一个\u003Ccode\u003Enoads.html\u003C\u002Fcode\u003E负责显示被拦截后的内容以及保存跳转前的链接。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-html\"\u003E&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta charset=&quot;UTF-8&quot;&gt;\n&lt;title&gt;温馨提示&lt;\u002Ftitle&gt;\n&lt;\u002Fhead&gt;\n&lt;body&gt;\n&lt;p&gt;网站内容被识别为广告，已被屏蔽。请禁用广告屏蔽后点击下面链接哦！&lt;\u002Fp&gt;\n&lt;a href=&quot;#&quot; id=&quot;a&quot;&gt;我已关闭广告屏蔽功能&lt;\u002Fa&gt;\n&lt;\u002Fbody&gt;\n&lt;script&gt;\n    function getQueryVariable(variable)\n{\n       var query = window.location.search.substring(1);\n       var vars = query.split(&quot;&amp;&quot;);\n       for (var i=0;i&lt;vars.length;i++) {\n               var pair = vars[i].split(&quot;=&quot;);\n               if(pair[0] == variable){return pair[1];}\n       }\n       return(false);\n}\ndocument.getElementById(&quot;a&quot;).href = getQueryVariable(&#39;route&#39;);\n&lt;\u002Fscript&gt;\n&lt;\u002Fhtml&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003Etips: 该方法不是最优，但是可行！\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n"}],fetch:{},mutations:void 0});