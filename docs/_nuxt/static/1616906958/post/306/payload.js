__NUXT_JSONP__("/post/306", {data:[{article:"\u003Ch2 id=\"介绍\"\u003E介绍\u003C\u002Fh2\u003E\n\u003Cp\u003E本文采用\u003Ccode\u003Euni-app\u003C\u002Fcode\u003E框架开发，使用\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fwendux\u002Ffly\"\u003Eflyio\u003C\u002Fa\u003E库封装请求。\u003C\u002Fp\u003E\n\u003Ch3 id=\"安装方式\"\u003E安装方式\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Enpm install --save flyio\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"引入方式\"\u003E引入方式\u003C\u002Fh3\u003E\n\u003Cp\u003E新建\u003Ccode\u003Eapi.js\u003C\u002Fcode\u003E文件，编写以下内容\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Evar Fly = require(&quot;flyio\u002Fdist\u002Fnpm\u002Fwx&quot;)\nvar fly = new Fly;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"配置方式\"\u003E配置方式\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E\u002F\u002F 配置请求根域名\nfly.config.baseURL = &quot;http:\u002F\u002Fwhisper.wezoz.com&quot;\n\u002F\u002F 配置响应拦截器\nfly.interceptors.response.use(\n    (response) =&gt; {\n            \u002F\u002F 如果请求报错\n            if (response.data.code != 10000) {\n                uni.showModal({\n                    title:&#39;温馨提示&#39;,\n                    content:response.data.data\n                })\n            }else{\n                \u002F\u002F只将请求结果的data字段返回\n                return response.data.data\n            }\n        },\n        (err) =&gt; {\n            \u002F\u002F发生网络错误后会走到这里\n            return Promise.resolve(&quot;网络请求：ERROR！&quot;)\n        }\n)\n\u002F\u002F 配置请求拦截器\nfly.interceptors.request.use((request) =&gt; {\n    request.headers[&quot;token&quot;] = uni.getStorageSync(&#39;token&#39;);\n    return request;\n})\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"同步封装微信登录\"\u003E同步封装微信登录\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Easync function wxLogin() {\n    return await new Promise((resolve, reject) =&gt; {\n        wx.login({\n            success(res) {\n                if (res.code) {\n                    resolve(res.code)\n                }\n            }\n        })\n    })\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E写一个接口如login\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003E\u002F\u002F 登录\nexport const login = async (params) =&gt; {\n    console.log(&#39;开始登录...&#39;)\n    let code = await wxLogin();\n    let res = await fly.get(&#39;\u002Fuser\u002Flogin&#39;, {code: code})\n    uni.setStorageSync(&#39;token&#39;, res.token)\n    uni.setStorageSync(&#39;openid&#39;, res.openid)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"封装普通请求\"\u003E封装普通请求\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Eexport const updateUserInfo = (params) =&gt; {\n    return fly.get(&#39;\u002Fuser\u002Fupdate&#39;, params)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"引入方式-1\"\u003E引入方式\u003C\u002Fh2\u003E\n\u003Cp\u003E在\u003Ccode\u003EApp.vue\u003C\u002Fcode\u003E 或者\u003Ccode\u003Emain.js\u003C\u002Fcode\u003E添加以下代码\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Eimport * as API from &#39;.\u002Fstatic\u002Futils\u002Fapi&#39;\nVue.prototype.$api = API\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"调用方式\"\u003E调用方式\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003Etest.vue\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Ethis.$api.login()\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n"}],fetch:{},mutations:void 0});