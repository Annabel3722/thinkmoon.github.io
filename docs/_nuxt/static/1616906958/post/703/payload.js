__NUXT_JSONP__("/post/703", {data:[{article:"\u003Ch2 id=\"前言\"\u003E前言\u003C\u002Fh2\u003E\n\u003Cp\u003E在上篇文章中，我们已经实现了\u003Ccode\u003EVS code\u003C\u002Fcode\u003E的无缝连接docker，却依旧存在着一些问题。比如它需要安装\u003Ccode\u003Epylint\u003C\u002Fcode\u003E方便调试，但是每次stop 容器之后，重新启动又需要重新安装，不可谓不麻烦。而且我发现它也需要重新安装\u003Ccode\u003EVS code server\u003C\u002Fcode\u003E,这是一个严重影响生产力的过程。所以目前的需求就变了如何作一些自定义的修改，并让这些修改永久性的保存。那答案当然是自定义的构建镜像啦，它可以让我们在构建的实践使用容器的过程中，将所做的更新持续化保存到自定义镜像。\u003C\u002Fp\u003E\n\u003Ch2 id=\"自定义修改\"\u003E自定义修改\u003C\u002Fh2\u003E\n\u003Cp\u003E在这里，我手动做了两个修改，一个是安装\u003Ccode\u003Epylint\u003C\u002Fcode\u003E，一个是更新\u003Ccode\u003Epip\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-01-02T08:04:43.png\" alt=\"自定义修改容器\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"提交更改\"\u003E提交更改\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-bash\"\u003Edocker commit -m=&quot;install pylint&quot; -a=&quot;chauncey&quot; tf chauncey\u002Ftf \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E如上命令，将所有对容器的操作都保存至自定义镜像\u003Ccode\u003Echauncey\u002Ftf \u003C\u002Fcode\u003E中。\u003C\u002Fp\u003E\n\u003Ch2 id=\"测试效果\"\u003E测试效果\u003C\u002Fh2\u003E\n\u003Col\u003E\n\u003Cli\u003E停止当前容器\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-bash\"\u003Edocker stop tf\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Col start=\"2\"\u003E\n\u003Cli\u003E使用自定义镜像创建容器\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-bash\"\u003Edocker run --gpus all -itd --name tf --rm -v ~\u002FProject:\u002Froot\u002FProject  chauncey\u002Ftf  \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Col start=\"3\"\u003E\n\u003Cli\u003E使用VS code远程连接，观察pip版本和pylint的安装情况。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002Fblog\u002Ftypecho\u002F2020-01-02T08:11:37.png\" alt=\"pip版本和pylint的安装情况\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E如上图，我们发现pip已经是最新的版本。而且细心小伙伴会发现，连接容器时以及没有了install Dev container的提示了，这说明我们的VS code也已经预设安装进了镜像。\u003C\u002Fp\u003E\n"}],fetch:{},mutations:void 0});