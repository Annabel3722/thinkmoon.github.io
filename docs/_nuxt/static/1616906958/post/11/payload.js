__NUXT_JSONP__("/post/11", {data:[{article:"\u003Cblockquote\u003E\n\u003Cp\u003E本文环境\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E操作系统: Ubuntu 16.04.3\nPython版本: 3.5.2\nDjango版本: 2.0.4\nnginx版本: 1.10.3\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E本文平台为腾讯云1核1G系统 \n我的项目文件名为: \u003Ccode\u003Edgutpsy\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"安装pip3python3-的pip\"\u003E安装pip3(python3 的pip)\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Esudo apt-get install python3-pip\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdQ\" alt=\"2018-04-10-20-07-25.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E安装成功后运行\u003Ccode\u003Epip3\u003C\u002Fcode\u003E将会出现\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdO\" alt=\"2018-04-10-20-09-19.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"安装uwsgi\"\u003E安装uwsgi\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Epip install uwsgi\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdN\" alt=\"2018-04-10-20-17-19.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"测试uwsgi运行状态\"\u003E测试uwsgi运行状态\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E新建文件test.py\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-python\"\u003Edef application(env, start_response):\n    start_response(&#39;200 OK&#39;, [(&#39;Content-Type&#39;,&#39;text\u002Fhtml&#39;)])\n    return [b&quot;Hello World&quot;]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E有些教程说是 \u003Ccode\u003Ereturn &quot;hello world&quot;\u003C\u002Fcode\u003E\n但是这样其实会出现访问空白的情况, 我的是Python3的环境，需要对hello world进行编码.\n而如果你是Python2的环境，你应该写\u003Ccode\u003Ereturn &quot;hello world&quot;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"使用uwsgi运行该文件\"\u003E使用uwsgi运行该文件\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Euwsgi --http :8000 --wsgi-file test.py\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E此语句的意思是，\u003Ccode\u003E使用uwsgi运行test.py文件， 采用http模式， 端口8000\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdP\" alt=\"2018-04-10-20-44-49.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"访问页面\"\u003E访问页面\u003C\u002Fh3\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E好啦,可以看到亲切的hello world 就说明uwsgi运行成功了\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdL\" alt=\"2018-04-10-20-39-21.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ETIPS: 如果你访问不了,请先检查腾讯云安全组端口是否开放8000端口\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"安装django\"\u003E安装Django\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Epip3 install Django\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E如在python3里面import django没有报错则安装成功.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdH\" alt=\"2018-04-10-20-55-49.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"上传项目代码\"\u003E上传项目代码\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E现在我们开始上传项目代码\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdG\" alt=\"2018-04-10-20-42-25.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E使用MobaXterm的sftp工具拖进来,[笑着哭]不要问我为什么不用ftp,这个方便.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"确认代码运行正常\"\u003E确认代码运行正常\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E切进项目目录,运行\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Epython3 manage.py runserver 0.0.0.0:8000\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdF\" alt=\"2018-04-10-20-59-03.png\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"访问页面-1\"\u003E访问页面\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdE\" alt=\"2018-04-10-21-01-32.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E不太对?这是因为设置了ALLOWED_HOSTS的原因\n我们在setting.py里设置一下\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-python\"\u003EALLOWED_HOSTS = [&#39;*&#39;]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"再次访问页面\"\u003E再次访问页面\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdK\" alt=\"2018-04-10-21-05-34.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EOK!\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"uswgi运行项目\"\u003Euswgi运行项目\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003E uwsgi --http :8000 --chdir \u002Fhome\u002Fubuntu\u002Fdgutpsy  --wsgi dgutpsy.wsgi\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E这个语句的意思与上相似，只不过是多了一个工作路径和wsgi文件\n\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdK\" alt=\"2018-04-10-21-05-34.png\"\u003E\n开什么玩笑? 你觉得没变化?\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Chr\u003E\n\u003Ch2 id=\"至此\"\u003E\u003Cem\u003E至此\u003C\u002Fem\u003E\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E我们可以暂定以下内容\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Col\u003E\n\u003Cli\u003E项目没问题. \u003C\u002Fli\u003E\n\u003Cli\u003E项目配置没问题\u003C\u002Fli\u003E\n\u003Cli\u003Euwsgi没问题\u003C\u002Fli\u003E\n\u003Cli\u003E对项目的支持环境没问题\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Chr\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E接下来, 我们开始配置nginx\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"安装nginx\"\u003E安装nginx\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Esudo apt-get install nginx\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"测试nginx运行状态\"\u003E测试nginx运行状态\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdD\" alt=\"2018-04-10-21-18-53.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003Enginx 安装成功\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"修改nginx配置\"\u003E修改nginx配置\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E文件路径\u003Ccode\u003E&quot;\u002Fetc\u002Fnginx\u002Fsites-enabled\u002Fdefault&quot;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E别再费力找nginx.conf啦,新版本已经没有这个文件的.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E我的\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-conf\"\u003Eupstream django {\n        server 127.0.0.1:8001; #web的socket端口\n    }\nserver {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n \n    index index.html index.htm index.nginx-debian.html;\n\n    server_name _;\n\n    location \u002F {\n        root \u002Fhome\u002Fubuntu\u002Fdgutpsy; #项目目录\n        uwsgi_pass django;\n        include \u002Fhome\u002Fubuntu\u002Fdgutpsy\u002Fuwsgi_params; #uwsgi_params文件的地址\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E完整的uwsgi_params文件内容应该是\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-python\"\u003Euwsgi_param  QUERY_STRING       $query_string;\nuwsgi_param  REQUEST_METHOD     $request_method;\nuwsgi_param  CONTENT_TYPE       $content_type;\nuwsgi_param  CONTENT_LENGTH     $content_length;\n\nuwsgi_param  REQUEST_URI        $request_uri;\nuwsgi_param  PATH_INFO          $document_uri;\nuwsgi_param  DOCUMENT_ROOT      $document_root;\nuwsgi_param  SERVER_PROTOCOL    $server_protocol;\nuwsgi_param  REQUEST_SCHEME     $scheme;\nuwsgi_param  HTTPS              $https if_not_empty;\n\nuwsgi_param  REMOTE_ADDR        $remote_addr;\nuwsgi_param  REMOTE_PORT        $remote_port;\nuwsgi_param  SERVER_PORT        $server_port;\nuwsgi_param  SERVER_NAME        $server_name;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E没有这个文件,或者这个文件写错是会报错的哦.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"访问测试502\"\u003E访问测试502\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbV8qdC\" alt=\"2018-04-10-21-37-49.png\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E这是因为我们的socket通信还没开始呢!\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"nginx-与-uwsgi通信\"\u003Enginx 与 uwsgi通信\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E先使用hello world测试\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Euwsgi --socket :8001 --wsgi-file test.py\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 id=\"访问测试页面\"\u003E访问测试页面\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fsegmentfault.com\u002Fimg\u002FbVbi2Qy\" alt=\"图片描述\"\u003E\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Cp\u003E至此: nginx 与 uwsgi通信成功!\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ETIPS: 这里你是无法通过在浏览器里面访问8001端口来判断是否启动的，因为它是socket协议\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Chr\u003E\n\u003Ch2 id=\"让uwsgi后台运行\"\u003E让uwsgi后台运行\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E这样虽然看似可以, 但是当你关闭ssh时,又会出现502了!\u003C\u002Fp\u003E\n\u003Cp\u003E这是因为当你关闭这个ssh进程时,uwsgi进程也被终止了.\n而且,每次启动都要输一串好长的命令,好不麻烦!\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E这个时候,我们需要用到一个东西, 那就是ini配置文件启动.\n其中\u003Ccode\u003Edaemonize = \u002Fhome\u002Fubuntu\u002Fdgutpsy\u002Ftest.log\u003C\u002Fcode\u003E的意思就是后台运行并规定日志输出目录。\u003C\u002Fp\u003E\n\u003Ch3 id=\"新建testini\"\u003E新建test.ini\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-ini\"\u003E[uwsgi]\nsocket = 127.0.0.1:8001\nwsgi-file = \u002Fhome\u002Fubuntu\u002Fdgutpsy\u002Ftest.py\ndaemonize = \u002Fhome\u002Fubuntu\u002Fdgutpsy\u002Ftest.log \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Euwsgi --ini test.ini\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"niginx与django项目通信\"\u003Eniginx与Django项目通信\u003C\u002Fh2\u003E\n\u003Ch3 id=\"新建dgutpsyini\"\u003E新建dgutpsy.ini\u003C\u002Fh3\u003E\n\u003Cpre\u003E\u003Ccode\u003E[uwsgi]\nsocket = 127.0.0.1:8001\nchdir           = \u002Fhome\u002Fubuntu\u002Fdgutpsy\nmodule          = dgutpsy.wsgi\nmaster          = true\nprocesses       = 1 \n\nthreads = 2 \nmax-requests = 6000\n\ndaemonize = \u002Fhome\u002Fubuntu\u002Fdgutpsy\u002Frun.log\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然后运行\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-shell\"\u003Euwsgi --ini dgutpsy.ini\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"域名映射\"\u003E域名映射\u003C\u002Fh2\u003E\n\u003Cp\u003E添加域名&gt;解析\u003Ccode\u003Econsult.psyannabel.cn\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"访问页面-2\"\u003E访问页面\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fblog.cdn.thinkmoon.cn\u002F2018-04-10-22-17-32.png\" alt=\"\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"后记\"\u003E后记:\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EQ&amp;A:\nQ: 能用manage.py运行的,为什么要用uwsgi?\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EA: 单进程的manage.py, 能和web服务器uwsgi比ma\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EQ: 能用uwsgi的,为什么还要用nginx?\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EA: uwsgi虽然是web服务器, 但是它在处理静态文件时, 并没有nginx来得优秀.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EQ: 大致流程?\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EA: nginx运行web处理http请求, nginx使用socket与uwsgi通信,将动态部分转让交给uwsgi处理\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EQ: 为啥我的test.py运行不了？\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EA: 如果端口开放没有问题，那么请检查Python版本对应的return\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fblockquote\u003E\n"}],fetch:{},mutations:void 0});