__NUXT_JSONP__("/post/534", {data:[{article:"\u003Cp\u003E废话不说，进入正题，\u003Ccode\u003E为了简便请调整项目属性为使用多字节字符集\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003Etinyxml文件下载地址，（操作xml文件的）\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Ca href=\"http:\u002F\u002Fsourceforge.net\u002Fprojects\u002Ftinyxml\u002F\"\u003Ehttp:\u002F\u002Fsourceforge.net\u002Fprojects\u002Ftinyxml\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"一些函数功能\"\u003E一些函数功能\u003C\u002Fh2\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003EValueStr     \u002F\u002F返回元素名称\nSetValue     \u002F\u002F设置元素名称\nParent     \u002F\u002F返回父节点对象\n\nFirstChild    \u002F\u002F返回第一个子节点\nLastChild     \u002F\u002F返回最后一个子节点\nIterateChildren   \u002F\u002F返回下一个子节点\n\nInsertEndChild   \u002F\u002F在最后一个子节点后插入子节点\nInsertBeforeChild   \u002F\u002F在指定的子节点前插入子节点\nInsertAfterChild   \u002F\u002F在指定的子节点后插入子节点\nReplaceChild    \u002F\u002F替换指定的子节点\nRemoveChild    \u002F\u002F删除指定的子节点\nClear     \u002F\u002F删除所有的子节点\n\nPreviousSibling   \u002F\u002F返回同级中前一个节点\nNextSibling    \u002F\u002F返回同级中后一个节点\n\nNextSiblingElement   \u002F\u002F返回同级中后一个元素\nFirstChildElement   \u002F\u002F返回第一个子元素节点\nAttribute     \u002F\u002F返回元素中的属性值\nQueryValueAttribute \u002F\u002F返回元素中的属性值\nSetAttribute    \u002F\u002F设置元素中的属性值\nFirstAttribute   \u002F\u002F返回元素中第一个属性对象\nLastAttribute    \u002F\u002F返回元素中最后一个属性对象\nRemoveAttribute   \u002F\u002F删除元素中指定的属性对象\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"tinyxml的添加\"\u003Etinyxml的添加\u003C\u002Fh2\u003E\n\u003Cp\u003E首先，将下载的文件解压复制到原项目目录，\n然后，在解决方案中头文件添加现有项，添加进去。\u003C\u002Fp\u003E\n\u003Ch2 id=\"接下来，在stdafxh中包含两个头文件。\"\u003E接下来，在stdafx.h中包含两个头文件。\u003C\u002Fh2\u003E\n\u003Ch2 id=\"mfc中xml文件的使用\"\u003Emfc中xml文件的使用\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003E第一步：建立对话框，添加CString变量（与编辑框关联起来).\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cul\u003E\n\u003Cli\u003E第二步，（信息录入）添加按钮处理消息（双击按钮即可），利用UpdataeData（）更新数据，将数据录入xml文件。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003ETiXmlDocument *pDoc = new TiXmlDocument();\u002F\u002F文件指针\n    const char *FileName = &quot;res\\\\Number.xml&quot;;\u002F\u002F文件名\n    if(!pDoc-&gt;LoadFile(FileName))\n    {\n        UpdateData(TRUE);\n        TiXmlElement *RootElement = NULL;\u002F\u002F根节点\n        TiXmlElement *PersonElement = NULL;\u002F\u002F子节点\n \n        TiXmlDeclaration *pTd = new TiXmlDeclaration(&quot;1.0&quot;, &quot;gb2312&quot;, &quot;yes&quot; );\n        pDoc-&gt;LinkEndChild(pTd);\n \n        RootElement = new TiXmlElement(&quot;账号数据&quot;);\n        pDoc-&gt;LinkEndChild(RootElement);\n         }\n         else{\n                RootElement = pDoc-&gt;RootElement();\n              }\n \n        PersonElement = new TiXmlElement(&quot;用户&quot;);\n        RootElement-&gt;LinkEndChild(PersonElement);\n \n        TiXmlElement *NameElement = new TiXmlElement(&quot;账号&quot;);\n        PersonElement-&gt;LinkEndChild(NameElement);\n        TiXmlText *Number = new TiXmlText([要存的数据]);\u002F\u002F存的数据可为CString类型\n        NameElement-&gt;LinkEndChild(Number);\n \n        TiXmlElement *PassWordElement = new TiXmlElement(&quot;密码&quot;);\n        PersonElement-&gt;LinkEndChild(PassWordElement);\n        TiXmlText *PassWord = new TiXmlText([要存的数据]);\u002F\u002F存的数据可为CString类型\n        PassWordElement-&gt;LinkEndChild(PassWord);\n                \n                \u002F\u002F你有几项就弄几段上面的代码，本例为两项数据\n                pDoc-&gt;SaveFile(FileName);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cul\u003E\n\u003Cli\u003E第三步，（信息显示）先添加list control 控件，选择report（报表）属性，同时添加变量m_ctllist1选择control类型（默认）。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E然后在OnInitDialog(void)函数中添加如下代码\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003EDWORD dwStyle = m_ctllist1.GetExtendedStyle();                    \u002F\u002F添加列表框的网格线！！！\n \n    dwStyle |= LVS_EX_FULLROWSELECT;            \n    dwStyle |= LVS_EX_GRIDLINES;                \n    m_ctllist1.SetExtendedStyle(dwStyle);\n    \u002F\u002Flist control 的初始化\n    m_ctllist1.InsertColumn(0,&quot;车牌&quot;,LVCFMT_CENTER,80); \n    m_ctllist1.InsertColumn(1,&quot;进入时间&quot;,LVCFMT_CENTER,120);\n    m_ctllist1.InsertColumn(2,&quot;停车时间&quot;,LVCFMT_CENTER,120); \n    m_ctllist1.InsertColumn(3,&quot;应缴费用&quot;,LVCFMT_CENTER,100);\n    m_ctllist1.InsertColumn(4,&quot;备注&quot;,LVCFMT_CENTER,220);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E数值为长度，如未发现此函数，请在类向导中虚函数添加该函数。运行效果如下\u003C\u002Fp\u003E\n\u003Cp\u003E然后添加刷新按钮事件处理程序\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003ETiXmlDocument * myDocument = new TiXmlDocument(); \n    if (!myDocument-&gt;LoadFile(&quot;res\\\\Number.xml&quot;))\n    {\n        return ;\n    }\n    TiXmlElement *RootElement = myDocument-&gt;RootElement(); \n \n    TiXmlElement *FirstElement = RootElement-&gt;FirstChildElement();\n \n    \u002F\u002F循环遍历\n    for (int i=0;FirstElement;i++)\n    {\n        TiXmlElement *NameElement = FirstElement-&gt;FirstChildElement();\n        m_ctllist1.InsertItem(i,NameElement-&gt;GetText());\u002F\u002F设置列表框第0行第0列数据\n \n        \u002F\u002F显示进车时间\n        TiXmlElement *DateElement = NameElement-&gt;NextSiblingElement();\n        const char *temp = DateElement-&gt;&lt;pre name=&quot;code&quot; class=&quot;html&quot;&gt;GetText()\n;m_ctllist1.SetItemText(i,1,temp);\u002F\u002F设置列表框第0行第1列数据FirstElement = FirstElement-&gt;NextSiblingElement();}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cul\u003E\n\u003Cli\u003E第四步，（信息查找及修改）添加查找对话框，编辑框添加变量，本例为m_Number 。查找代码如下\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Econst char *FileNmae = &quot;res\\\\Number.xml&quot;;\n    TiXmlDocument *pDoc = new TiXmlDocument();\n    if (pDoc-&gt;LoadFile(FileNmae))\n    {\n        TiXmlElement *RootElement = pDoc-&gt;RootElement();\n        TiXmlElement *SonElement = RootElement-&gt;FirstChildElement();\n        TiXmlElement *NumberElement = NULL;\n        TiXmlElement *passWordElement = NULL;\n        while (SonElement)\n        {\n            NumberElement = SonElement-&gt;FirstChildElement();\n            if (NumberElement-&gt;GetText() == m_Number)\u002F\u002F查找成功判断之后\n            {\n \n            }\n            SonElement=SonElement-&gt;NextSiblingElement();\n        }\n信息查找修改代码如下，本例为查找用户名为m_Number修改密码为m_PassWord.两个变量都为编辑框CString类型\nconst char *FileNmae = &quot;res\\\\Number.xml&quot;;\n    TiXmlDocument *pDoc = new TiXmlDocument();\n    if (pDoc-&gt;LoadFile(FileNmae))\n    {\n        TiXmlElement *RootElement = pDoc-&gt;RootElement();\n        TiXmlElement *SonElement = RootElement-&gt;FirstChildElement();\n        TiXmlElement *NumberElement = NULL;\n        TiXmlElement *passWordElement = NULL;\n        while (SonElement)\n        {\n            NumberElement = SonElement-&gt;FirstChildElement();\n            if (NumberElement-&gt;GetText() == m_Number)\n            {\n                if (IDYES == MessageBox(&quot;该账号已存在，继续操作将覆盖&quot;,&quot;是否继续？&quot;,MB_YESNO|MB_ICONWARNING))\n                {\n                    passWordElement = NumberElement-&gt;NextSiblingElement();\n                    TiXmlNode *PassWord = passWordElement-&gt;FirstChild();\n                    PassWord-&gt;SetValue(m_PassWord);\n                    pDoc-&gt;SaveFile(FileNmae);\n                    MessageBox(&quot;密码修改成功,下次登录生效&quot;);\n                }\n                    goto end;\n            }\n            SonElement=SonElement-&gt;NextSiblingElement();\n        }\n           }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cul\u003E\n\u003Cli\u003E第五步，信息删除，本例为查找账号名m_Number对该用户进行删除\u003Cpre\u003E\u003Ccode class=\"language-javascript\"\u003Econst char *FileName = &quot;res\\\\Number.xml&quot;;\n   TiXmlDocument *pDoc = new TiXmlDocument();\n   if (!pDoc-&gt;LoadFile(FileName))\n   {\n       MessageBox(&quot;Number.xml文件损坏&quot;,&quot;加载失败&quot;,MB_OK | MB_ICONWARNING);\n       return ;\n   }\n   else\n   {\n       TiXmlElement *RootElement = pDoc-&gt;RootElement();\n       TiXmlElement *PersonElement = RootElement-&gt;FirstChildElement();\n       TiXmlElement *NumberElement = PersonElement-&gt;FirstChildElement();\n       TiXmlElement *PassWordElement = NumberElement-&gt;NextSiblingElement();\n       while (PersonElement)\n       {\n           NumberElement = PersonElement-&gt;FirstChildElement();\n           if (NumberElement-&gt;GetText() ==  m_Number)\n           {\n               RootElement-&gt;RemoveChild(PersonElement);\n               MessageBox(&quot;删除成功&quot;);\n               break;\n           }\n           else\n           {\n                PersonElement = PersonElement-&gt;NextSiblingElement();\u002F\u002F节点后移\n           }\n          \n       }\n       pDoc-&gt;SaveFile(FileName);\n        }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"结语\"\u003E结语\u003C\u002Fh2\u003E\n至于统计什么的，就是查找与显示的变异。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n"}],fetch:{},mutations:void 0});